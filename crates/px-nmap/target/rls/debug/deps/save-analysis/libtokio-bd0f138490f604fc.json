{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0","program":"/home/ghost/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bytes\"","--cfg","feature=\"default\"","--cfg","feature=\"fs\"","--cfg","feature=\"io-util\"","--cfg","feature=\"libc\"","--cfg","feature=\"macros\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"net\"","--cfg","feature=\"parking_lot\"","--cfg","feature=\"rt\"","--cfg","feature=\"sync\"","--cfg","feature=\"test-util\"","--cfg","feature=\"time\"","--cfg","feature=\"tokio-macros\"","--cfg","feature=\"tracing\"","-C","metadata=bd0f138490f604fc","-C","extra-filename=-bd0f138490f604fc","--out-dir","/opt/nfs/projects/px-engine/proxbox-rs/repo/px-nmap/target/rls/debug/deps","-L","dependency=/opt/nfs/projects/px-engine/proxbox-rs/repo/px-nmap/target/rls/debug/deps","--extern","bytes=/opt/nfs/projects/px-engine/proxbox-rs/repo/px-nmap/target/rls/debug/deps/libbytes-0337cf4c454210d3.rmeta","--extern","libc=/opt/nfs/projects/px-engine/proxbox-rs/repo/px-nmap/target/rls/debug/deps/liblibc-98e1f74da1f21e85.rmeta","--extern","memchr=/opt/nfs/projects/px-engine/proxbox-rs/repo/px-nmap/target/rls/debug/deps/libmemchr-bdfd6f05a0f92912.rmeta","--extern","mio=/opt/nfs/projects/px-engine/proxbox-rs/repo/px-nmap/target/rls/debug/deps/libmio-59174459c4fda377.rmeta","--extern","parking_lot=/opt/nfs/projects/px-engine/proxbox-rs/repo/px-nmap/target/rls/debug/deps/libparking_lot-859c0ca5a5fc0d82.rmeta","--extern","pin_project_lite=/opt/nfs/projects/px-engine/proxbox-rs/repo/px-nmap/target/rls/debug/deps/libpin_project_lite-d0cfd6fdb33f6e64.rmeta","--extern","tokio_macros=/opt/nfs/projects/px-engine/proxbox-rs/repo/px-nmap/target/rls/debug/deps/libtokio_macros-74f2876c18189649.so","--cap-lints","allow","--cfg","tokio_track_caller","--error-format=json","--sysroot","/home/ghost/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/opt/nfs/projects/px-engine/proxbox-rs/repo/px-nmap/target/rls/debug/deps/libtokio-bd0f138490f604fc.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[7800177100180440667,8057136251956814694]},"crate_root":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src","external_crates":[{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5454670041059415339,14778898676712446032]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1008138081647881344,7429076406658465872]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17323693314265278435,11165935492680790011]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[1758524798956620560,9236974138540026415]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/parking_lot.rs","num":18,"id":{"name":"parking_lot","disambiguator":[1039574490965783144,16151334340451628604]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/parking_lot.rs","num":19,"id":{"name":"instant","disambiguator":[10773000814249531643,2389036271767542531]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/parking_lot.rs","num":20,"id":{"name":"cfg_if","disambiguator":[3584840542252973101,9721294085565180644]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/parking_lot.rs","num":21,"id":{"name":"lock_api","disambiguator":[936120363908943632,4274241196263442975]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/parking_lot.rs","num":22,"id":{"name":"scopeguard","disambiguator":[11117872664350086490,10211027374124017737]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/parking_lot.rs","num":23,"id":{"name":"parking_lot_core","disambiguator":[12567061117656912445,7218927879773349097]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/parking_lot.rs","num":24,"id":{"name":"smallvec","disambiguator":[10938721518789166298,12297318377453231971]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/ucred.rs","num":25,"id":{"name":"libc","disambiguator":[6296795167601247067,15356197354544730464]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/registration.rs","num":26,"id":{"name":"mio","disambiguator":[4104613534119008406,154928078500220514]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/registration.rs","num":27,"id":{"name":"log","disambiguator":[14595711869559891095,10219882293667498735]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/seek.rs","num":28,"id":{"name":"pin_project_lite","disambiguator":[17452187893189816083,6826381095686955709]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","num":29,"id":{"name":"bytes","disambiguator":[10661395207108140452,11863800989099906265]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","num":30,"id":{"name":"tokio_macros","disambiguator":[7562063340441162711,2614804980368252656]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_until.rs","num":31,"id":{"name":"memchr","disambiguator":[11510045567321597850,4857332320853277887]}}],"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":0,"byte_end":17571,"line_start":1,"line_end":481,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":111},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/support.rs","byte_start":31489,"byte_end":31496,"line_start":2,"line_end":2,"column_start":28,"column_end":35},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":89},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/support.rs","byte_start":31537,"byte_end":31547,"line_start":3,"line_end":3,"column_start":40,"column_end":50},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":726},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/support.rs","byte_start":31574,"byte_end":31586,"line_start":4,"line_end":4,"column_start":26,"column_end":38},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":2,"index":9111},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/support.rs","byte_start":31612,"byte_end":31618,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":2,"index":32052},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/support.rs","byte_start":31638,"byte_end":31641,"line_start":8,"line_end":8,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":2,"index":34557},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/support.rs","byte_start":31662,"byte_end":31666,"line_start":9,"line_end":9,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":751},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607157,"byte_end":8607169,"line_start":28,"line_end":28,"column_start":29,"column_end":41},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":761},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607214,"byte_end":8607224,"line_start":31,"line_end":31,"column_start":27,"column_end":37},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":771},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607277,"byte_end":8607291,"line_start":34,"line_end":34,"column_start":31,"column_end":45},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1118},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607338,"byte_end":8607348,"line_start":37,"line_end":37,"column_start":28,"column_end":38},"alias_span":null,"name":"DirBuilder","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":817},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607381,"byte_end":8607385,"line_start":40,"line_end":40,"column_start":21,"column_end":25},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":900},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607428,"byte_end":8607437,"line_start":43,"line_end":43,"column_start":26,"column_end":35},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":912},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607478,"byte_end":8607486,"line_start":46,"line_end":46,"column_start":25,"column_end":33},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1148},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607535,"byte_end":8607546,"line_start":49,"line_end":49,"column_start":29,"column_end":40},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":948},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607579,"byte_end":8607583,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":971},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607625,"byte_end":8607633,"line_start":55,"line_end":55,"column_start":26,"column_end":34},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1176},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607635,"byte_end":8607643,"line_start":55,"line_end":55,"column_start":36,"column_end":44},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1159},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607645,"byte_end":8607652,"line_start":55,"line_end":55,"column_start":46,"column_end":53},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1006},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607696,"byte_end":8607705,"line_start":58,"line_end":58,"column_start":26,"column_end":35},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1017},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607758,"byte_end":8607772,"line_start":61,"line_end":61,"column_start":31,"column_end":45},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1027},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607817,"byte_end":8607827,"line_start":64,"line_end":64,"column_start":27,"column_end":37},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1037},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607880,"byte_end":8607894,"line_start":67,"line_end":67,"column_start":31,"column_end":45},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1047},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607941,"byte_end":8607952,"line_start":70,"line_end":70,"column_start":28,"column_end":39},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1057},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607989,"byte_end":8607995,"line_start":73,"line_end":73,"column_start":23,"column_end":29},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1069},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8608050,"byte_end":8608065,"line_start":76,"line_end":76,"column_start":32,"column_end":47},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1080},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8608122,"byte_end":8608138,"line_start":79,"line_end":79,"column_start":33,"column_end":49},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1091},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8608173,"byte_end":8608178,"line_start":82,"line_end":82,"column_start":22,"column_end":27},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1101},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8608211,"byte_end":8608215,"line_start":85,"line_end":85,"column_start":21,"column_end":25},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":1185},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8608287,"byte_end":8608294,"line_start":91,"line_end":91,"column_start":28,"column_end":35},"alias_span":null,"name":"symlink","value":"","parent":{"krate":0,"index":744}},{"kind":"Use","ref_id":{"krate":0,"index":111},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/mod.rs","byte_start":31869,"byte_end":31876,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":79}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":43007,"byte_end":43019,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":160},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":43064,"byte_end":43073,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":185},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":43118,"byte_end":43127,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":211},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":43174,"byte_end":43184,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":267},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":43225,"byte_end":43232,"line_start":200,"line_end":200,"column_start":25,"column_end":32},"alias_span":null,"name":"ReadBuf","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":1,"index":2702},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":43402,"byte_end":43407,"line_start":205,"line_end":205,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":1,"index":7110},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":43409,"byte_end":43418,"line_start":205,"line_end":205,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":1,"index":2700},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":43420,"byte_end":43426,"line_start":205,"line_end":205,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":1,"index":7187},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":43428,"byte_end":43436,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1574},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":43530,"byte_end":43538,"line_start":211,"line_end":211,"column_start":26,"column_end":34},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1587},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":43540,"byte_end":43545,"line_start":211,"line_end":211,"column_start":36,"column_end":41},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1748},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":43817,"byte_end":43824,"line_start":225,"line_end":225,"column_start":35,"column_end":42},"alias_span":null,"name":"AsyncFd","value":"","parent":{"krate":0,"index":1835}},{"kind":"Use","ref_id":{"krate":0,"index":1752},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":43826,"byte_end":43843,"line_start":225,"line_end":225,"column_start":44,"column_end":61},"alias_span":null,"name":"AsyncFdReadyGuard","value":"","parent":{"krate":0,"index":1835}},{"kind":"Use","ref_id":{"krate":0,"index":1757},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":43845,"byte_end":43865,"line_start":225,"line_end":225,"column_start":63,"column_end":83},"alias_span":null,"name":"AsyncFdReadyMutGuard","value":"","parent":{"krate":0,"index":1835}},{"kind":"Use","ref_id":{"krate":0,"index":1841},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":43867,"byte_end":43877,"line_start":225,"line_end":225,"column_start":85,"column_end":95},"alias_span":null,"name":"TryIoError","value":"","parent":{"krate":0,"index":1835}},{"kind":"Use","ref_id":{"krate":0,"index":1959},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44139,"byte_end":44144,"line_start":244,"line_end":244,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1953},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44146,"byte_end":44154,"line_start":244,"line_end":244,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":1956},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44156,"byte_end":44165,"line_start":244,"line_end":244,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2865},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44247,"byte_end":44251,"line_start":249,"line_end":249,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2871},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44253,"byte_end":44261,"line_start":249,"line_end":249,"column_start":15,"column_end":23},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2348},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44263,"byte_end":44269,"line_start":249,"line_end":249,"column_start":25,"column_end":31},"alias_span":null,"name":"duplex","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2891},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44271,"byte_end":44276,"line_start":249,"line_end":249,"column_start":33,"column_end":38},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":3056},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44278,"byte_end":44284,"line_start":249,"line_end":249,"column_start":40,"column_end":46},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":3063},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44286,"byte_end":44290,"line_start":249,"line_end":249,"column_start":48,"column_end":52},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2741},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44292,"byte_end":44307,"line_start":249,"line_end":249,"column_start":54,"column_end":69},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2749},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44309,"byte_end":44321,"line_start":249,"line_end":249,"column_start":71,"column_end":83},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2800},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44323,"byte_end":44335,"line_start":249,"line_end":249,"column_start":85,"column_end":97},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2803},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44337,"byte_end":44350,"line_start":249,"line_end":249,"column_start":99,"column_end":112},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":10566},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44360,"byte_end":44369,"line_start":250,"line_end":250,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":10535},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44371,"byte_end":44380,"line_start":250,"line_end":250,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":10489},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44382,"byte_end":44391,"line_start":250,"line_end":250,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2892},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44393,"byte_end":44405,"line_start":250,"line_end":250,"column_start":42,"column_end":54},"alias_span":null,"name":"DuplexStream","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2889},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44407,"byte_end":44412,"line_start":250,"line_end":250,"column_start":56,"column_end":61},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":10348},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44414,"byte_end":44419,"line_start":250,"line_end":250,"column_start":63,"column_end":68},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":3057},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44421,"byte_end":44427,"line_start":250,"line_end":250,"column_start":70,"column_end":76},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":3061},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44429,"byte_end":44433,"line_start":250,"line_end":250,"column_start":78,"column_end":82},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":8985},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44435,"byte_end":44440,"line_start":250,"line_end":250,"column_start":84,"column_end":89},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":8945},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":44442,"byte_end":44446,"line_start":250,"line_end":250,"column_start":91,"column_end":95},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":311},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":82271,"byte_end":82284,"line_start":28,"line_end":28,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":3669},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":82344,"byte_end":82355,"line_start":32,"line_end":32,"column_start":26,"column_end":37},"alias_span":null,"name":"lookup_host","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":3678},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/mod.rs","byte_start":8955315,"byte_end":8955323,"line_start":8,"line_end":8,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3276}},{"kind":"Use","ref_id":{"krate":0,"index":3685},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/mod.rs","byte_start":8955325,"byte_end":8955334,"line_start":8,"line_end":8,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3276}},{"kind":"Use","ref_id":{"krate":0,"index":3692},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/mod.rs","byte_start":8955377,"byte_end":8955390,"line_start":11,"line_end":11,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":3276}},{"kind":"Use","ref_id":{"krate":0,"index":3696},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/mod.rs","byte_start":8955392,"byte_end":8955406,"line_start":11,"line_end":11,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":3276}},{"kind":"Use","ref_id":{"krate":0,"index":3701},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/mod.rs","byte_start":8955408,"byte_end":8955420,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3276}},{"kind":"Use","ref_id":{"krate":0,"index":3702},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/mod.rs","byte_start":8955408,"byte_end":8955420,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3439}},{"kind":"Use","ref_id":{"krate":0,"index":3674},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":82402,"byte_end":82413,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":3676},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":82440,"byte_end":82449,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpSocket","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":3708},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":82476,"byte_end":82485,"line_start":37,"line_end":37,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":3715},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":82518,"byte_end":82527,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":4062},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/mod.rs","byte_start":9083983,"byte_end":9083991,"line_start":8,"line_end":8,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3726}},{"kind":"Use","ref_id":{"krate":0,"index":4069},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/mod.rs","byte_start":9083993,"byte_end":9084002,"line_start":8,"line_end":8,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3726}},{"kind":"Use","ref_id":{"krate":0,"index":4076},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/mod.rs","byte_start":9084045,"byte_end":9084058,"line_start":11,"line_end":11,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":3726}},{"kind":"Use","ref_id":{"krate":0,"index":4080},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/mod.rs","byte_start":9084060,"byte_end":9084074,"line_start":11,"line_end":11,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":3726}},{"kind":"Use","ref_id":{"krate":0,"index":4085},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/mod.rs","byte_start":9084076,"byte_end":9084088,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3726}},{"kind":"Use","ref_id":{"krate":0,"index":4086},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/mod.rs","byte_start":9084076,"byte_end":9084088,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3916}},{"kind":"Use","ref_id":{"krate":0,"index":3920},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/mod.rs","byte_start":9084128,"byte_end":9084138,"line_start":14,"line_end":14,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":3726}},{"kind":"Use","ref_id":{"krate":0,"index":3921},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/mod.rs","byte_start":9084128,"byte_end":9084138,"line_start":14,"line_end":14,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":3928}},{"kind":"Use","ref_id":{"krate":0,"index":4098},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/mod.rs","byte_start":9084226,"byte_end":9084231,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"alias_span":null,"name":"UCred","value":"","parent":{"krate":0,"index":3726}},{"kind":"Use","ref_id":{"krate":0,"index":4049},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":82602,"byte_end":82614,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":4059},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":82644,"byte_end":82656,"line_start":46,"line_end":46,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":4092},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":82684,"byte_end":82694,"line_start":47,"line_end":47,"column_start":27,"column_end":37},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":5011},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9179134,"byte_end":9179141,"line_start":193,"line_end":193,"column_start":28,"column_end":35},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":4208}},{"kind":"Use","ref_id":{"krate":0,"index":5208},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9179266,"byte_end":9179276,"line_start":201,"line_end":201,"column_start":22,"column_end":32},"alias_span":null,"name":"EnterGuard","value":"","parent":{"krate":0,"index":4208}},{"kind":"Use","ref_id":{"krate":0,"index":5197},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9179278,"byte_end":9179284,"line_start":201,"line_end":201,"column_start":34,"column_end":40},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":4208}},{"kind":"Use","ref_id":{"krate":0,"index":6482},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336392,"byte_end":9336399,"line_start":432,"line_end":432,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":5287}},{"kind":"Use","ref_id":{"krate":0,"index":6494},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336401,"byte_end":9336418,"line_start":432,"line_end":432,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":5287}},{"kind":"Use","ref_id":{"krate":0,"index":5561},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9380300,"byte_end":9380307,"line_start":76,"line_end":76,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":5464}},{"kind":"Use","ref_id":{"krate":0,"index":5554},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9380309,"byte_end":9380315,"line_start":76,"line_end":76,"column_start":34,"column_end":40},"alias_span":null,"name":"Permit","value":"","parent":{"krate":0,"index":5464}},{"kind":"Use","ref_id":{"krate":0,"index":5558},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9380317,"byte_end":9380325,"line_start":76,"line_end":76,"column_start":42,"column_end":50},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":5464}},{"kind":"Use","ref_id":{"krate":0,"index":5551},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9380327,"byte_end":9380333,"line_start":76,"line_end":76,"column_start":52,"column_end":58},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":5464}},{"kind":"Use","ref_id":{"krate":0,"index":5819},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9380411,"byte_end":9380428,"line_start":83,"line_end":83,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":5464}},{"kind":"Use","ref_id":{"krate":0,"index":5813},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9380430,"byte_end":9380447,"line_start":83,"line_end":83,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":5464}},{"kind":"Use","ref_id":{"krate":0,"index":5804},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9380449,"byte_end":9380464,"line_start":83,"line_end":83,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":5464}},{"kind":"Use","ref_id":{"krate":0,"index":5879},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336500,"byte_end":9336505,"line_start":439,"line_end":439,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":5287}},{"kind":"Use","ref_id":{"krate":0,"index":5883},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336507,"byte_end":9336517,"line_start":439,"line_end":439,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":5287}},{"kind":"Use","ref_id":{"krate":0,"index":6577},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336519,"byte_end":9336531,"line_start":439,"line_end":439,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":5287}},{"kind":"Use","ref_id":{"krate":0,"index":6578},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336519,"byte_end":9336531,"line_start":439,"line_end":439,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":5963}},{"kind":"Use","ref_id":{"krate":0,"index":5887},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336533,"byte_end":9336548,"line_start":439,"line_end":439,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":5287}},{"kind":"Use","ref_id":{"krate":0,"index":6582},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336599,"byte_end":9336605,"line_start":442,"line_end":442,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":5287}},{"kind":"Use","ref_id":{"krate":0,"index":6675},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336696,"byte_end":9336708,"line_start":447,"line_end":447,"column_start":31,"column_end":43},"alias_span":null,"name":"AcquireError","value":"","parent":{"krate":0,"index":5287}},{"kind":"Use","ref_id":{"krate":0,"index":6665},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336710,"byte_end":9336725,"line_start":447,"line_end":447,"column_start":45,"column_end":60},"alias_span":null,"name":"TryAcquireError","value":"","parent":{"krate":0,"index":5287}},{"kind":"Use","ref_id":{"krate":0,"index":6680},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336772,"byte_end":9336781,"line_start":450,"line_end":450,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":5287}},{"kind":"Use","ref_id":{"krate":0,"index":6684},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336783,"byte_end":9336798,"line_start":450,"line_end":450,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":5287}},{"kind":"Use","ref_id":{"krate":0,"index":6691},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336800,"byte_end":9336820,"line_start":450,"line_end":450,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":5287}},{"kind":"Use","ref_id":{"krate":0,"index":6696},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336861,"byte_end":9336867,"line_start":453,"line_end":453,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":5287}},{"kind":"Use","ref_id":{"krate":0,"index":6285},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336869,"byte_end":9336884,"line_start":453,"line_end":453,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":5287}},{"kind":"Use","ref_id":{"krate":0,"index":6312},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336886,"byte_end":9336902,"line_start":453,"line_end":453,"column_start":47,"column_end":63},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":5287}},{"kind":"Use","ref_id":{"krate":0,"index":4745},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":139415,"byte_end":139424,"line_start":219,"line_end":219,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":664}},{"kind":"Use","ref_id":{"krate":0,"index":4747},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":139426,"byte_end":139436,"line_start":219,"line_end":219,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":664}},{"kind":"Use","ref_id":{"krate":0,"index":6909},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":139480,"byte_end":139494,"line_start":222,"line_end":222,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":664}},{"kind":"Use","ref_id":{"krate":0,"index":6912},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":139531,"byte_end":139536,"line_start":225,"line_end":225,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":664}},{"kind":"Use","ref_id":{"krate":0,"index":6914},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":139657,"byte_end":139666,"line_start":232,"line_end":232,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":664}},{"kind":"Use","ref_id":{"krate":0,"index":6931},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":139704,"byte_end":139715,"line_start":235,"line_end":235,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":664}},{"kind":"Use","ref_id":{"krate":0,"index":6922},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":139717,"byte_end":139725,"line_start":235,"line_end":235,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":664}},{"kind":"Use","ref_id":{"krate":0,"index":6861},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":139773,"byte_end":139781,"line_start":238,"line_end":238,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":664}},{"kind":"Use","ref_id":{"krate":0,"index":6912},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":14899,"byte_end":14904,"line_start":398,"line_end":398,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7335},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9637114,"byte_end":9637121,"line_start":94,"line_end":94,"column_start":17,"column_end":24},"alias_span":null,"name":"advance","value":"","parent":{"krate":0,"index":6947}},{"kind":"Use","ref_id":{"krate":0,"index":7333},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9637123,"byte_end":9637128,"line_start":94,"line_end":94,"column_start":26,"column_end":31},"alias_span":null,"name":"pause","value":"","parent":{"krate":0,"index":6947}},{"kind":"Use","ref_id":{"krate":0,"index":7334},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9637130,"byte_end":9637136,"line_start":94,"line_end":94,"column_start":33,"column_end":39},"alias_span":null,"name":"resume","value":"","parent":{"krate":0,"index":6947}},{"kind":"Use","ref_id":{"krate":0,"index":7133},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9637203,"byte_end":9637208,"line_start":99,"line_end":99,"column_start":25,"column_end":30},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":6947}},{"kind":"Use","ref_id":{"krate":0,"index":7132},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9637210,"byte_end":9637221,"line_start":99,"line_end":99,"column_start":32,"column_end":43},"alias_span":null,"name":"sleep_until","value":"","parent":{"krate":0,"index":6947}},{"kind":"Use","ref_id":{"krate":0,"index":7780},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9637223,"byte_end":9637228,"line_start":99,"line_end":99,"column_start":45,"column_end":50},"alias_span":null,"name":"Sleep","value":"","parent":{"krate":0,"index":6947}},{"kind":"Use","ref_id":{"krate":0,"index":7466},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9637284,"byte_end":9637291,"line_start":104,"line_end":104,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":6947}},{"kind":"Use","ref_id":{"krate":0,"index":7283},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9637327,"byte_end":9637335,"line_start":107,"line_end":107,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":6947}},{"kind":"Use","ref_id":{"krate":0,"index":7284},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9637337,"byte_end":9637348,"line_start":107,"line_end":107,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":6947}},{"kind":"Use","ref_id":{"krate":0,"index":7489},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9637350,"byte_end":9637358,"line_start":107,"line_end":107,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":6947}},{"kind":"Use","ref_id":{"krate":0,"index":7308},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9637408,"byte_end":9637415,"line_start":111,"line_end":111,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":6947}},{"kind":"Use","ref_id":{"krate":0,"index":7310},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9637417,"byte_end":9637427,"line_start":111,"line_end":111,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":6947}},{"kind":"Use","ref_id":{"krate":0,"index":7742},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9637429,"byte_end":9637436,"line_start":111,"line_end":111,"column_start":40,"column_end":47},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":6947}},{"kind":"Use","ref_id":{"krate":2,"index":34427},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9637549,"byte_end":9637557,"line_start":119,"line_end":119,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":6947}},{"kind":"Use","ref_id":{"krate":0,"index":726},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/mod.rs","byte_start":140491,"byte_end":140503,"line_start":37,"line_end":37,"column_start":21,"column_end":33},"alias_span":null,"name":"thread_rng_n","value":"","parent":{"krate":0,"index":665}},{"kind":"Use","ref_id":{"krate":30,"index":54},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":16684,"byte_end":16715,"line_start":451,"line_end":451,"column_start":27,"column_end":58},"alias_span":null,"name":"select_priv_declare_output_enum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":49},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":17215,"byte_end":17222,"line_start":465,"line_end":465,"column_start":35,"column_end":42},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":30,"index":51},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":17266,"byte_end":17273,"line_start":466,"line_end":466,"column_start":35,"column_end":42},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":0,"byte_end":17571,"line_start":1,"line_end":481,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":744},{"krate":0,"index":79},{"krate":0,"index":123},{"krate":0,"index":300},{"krate":0,"index":368},{"krate":0,"index":553},{"krate":0,"index":644},{"krate":0,"index":4208},{"krate":0,"index":645},{"krate":0,"index":5287},{"krate":0,"index":664},{"krate":0,"index":6946},{"krate":0,"index":6947},{"krate":0,"index":665},{"krate":0,"index":732},{"krate":0,"index":7734},{"krate":0,"index":7735},{"krate":0,"index":7736}],"decl_id":null,"docs":" A runtime for writing reliable network applications without compromising speed.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":55,"byte_end":167,"line_start":2,"line_end":6,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":168,"byte_end":274,"line_start":7,"line_end":12,"column_start":1,"column_end":3}},{"value":"/ A runtime for writing reliable network applications without compromising speed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":483,"byte_end":566,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":567,"byte_end":570,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":571,"byte_end":651,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":652,"byte_end":724,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":725,"byte_end":761,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":762,"byte_end":765,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":766,"byte_end":833,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, sleeps, and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":834,"byte_end":914,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":915,"byte_end":938,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":939,"byte_end":1026,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1027,"byte_end":1100,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1101,"byte_end":1179,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1180,"byte_end":1260,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1261,"byte_end":1311,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1312,"byte_end":1315,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1316,"byte_end":1372,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1373,"byte_end":1376,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1377,"byte_end":1409,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1410,"byte_end":1433,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1434,"byte_end":1457,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1458,"byte_end":1484,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1485,"byte_end":1506,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1507,"byte_end":1526,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1527,"byte_end":1556,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1557,"byte_end":1584,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1585,"byte_end":1604,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1605,"byte_end":1634,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1635,"byte_end":1681,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1682,"byte_end":1685,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1686,"byte_end":1707,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1708,"byte_end":1711,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1712,"byte_end":1791,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1792,"byte_end":1865,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1866,"byte_end":1945,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1946,"byte_end":1961,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1962,"byte_end":1965,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":1966,"byte_end":2038,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2039,"byte_end":2076,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2077,"byte_end":2080,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2081,"byte_end":2092,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2093,"byte_end":2143,"line_start":60,"line_end":60,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2144,"byte_end":2151,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2152,"byte_end":2155,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2156,"byte_end":2186,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2187,"byte_end":2190,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2191,"byte_end":2272,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2273,"byte_end":2358,"line_start":66,"line_end":66,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2359,"byte_end":2443,"line_start":67,"line_end":67,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2444,"byte_end":2474,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2475,"byte_end":2478,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2479,"byte_end":2495,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2496,"byte_end":2499,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2500,"byte_end":2566,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2567,"byte_end":2570,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2571,"byte_end":2582,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2583,"byte_end":2633,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2634,"byte_end":2641,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2642,"byte_end":2645,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2646,"byte_end":2673,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2674,"byte_end":2677,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2678,"byte_end":2757,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2758,"byte_end":2840,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2841,"byte_end":2922,"line_start":82,"line_end":82,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2923,"byte_end":2958,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2959,"byte_end":2962,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2963,"byte_end":2979,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2980,"byte_end":2983,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":2984,"byte_end":3066,"line_start":87,"line_end":87,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3067,"byte_end":3117,"line_start":88,"line_end":88,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3118,"byte_end":3121,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3122,"byte_end":3133,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"rt\", \"net\"] }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3134,"byte_end":3189,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3190,"byte_end":3197,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3198,"byte_end":3201,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3202,"byte_end":3227,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3228,"byte_end":3231,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3232,"byte_end":3308,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3309,"byte_end":3392,"line_start":97,"line_end":97,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3393,"byte_end":3436,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3437,"byte_end":3440,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3441,"byte_end":3520,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3521,"byte_end":3604,"line_start":101,"line_end":101,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3605,"byte_end":3683,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3684,"byte_end":3703,"line_start":103,"line_end":103,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3704,"byte_end":3707,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt\" feature flag","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3708,"byte_end":3781,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ is enabled.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3782,"byte_end":3797,"line_start":106,"line_end":106,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3798,"byte_end":3801,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3802,"byte_end":3845,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3846,"byte_end":3878,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3879,"byte_end":3914,"line_start":110,"line_end":110,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3915,"byte_end":3958,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":3959,"byte_end":4012,"line_start":112,"line_end":112,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4013,"byte_end":4016,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4017,"byte_end":4095,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4096,"byte_end":4152,"line_start":115,"line_end":115,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4153,"byte_end":4156,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4157,"byte_end":4230,"line_start":117,"line_end":117,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4231,"byte_end":4251,"line_start":118,"line_end":118,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4252,"byte_end":4327,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4328,"byte_end":4340,"line_start":120,"line_end":120,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4341,"byte_end":4421,"line_start":121,"line_end":121,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4422,"byte_end":4452,"line_start":122,"line_end":122,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4453,"byte_end":4456,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4457,"byte_end":4533,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4534,"byte_end":4546,"line_start":125,"line_end":125,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4547,"byte_end":4550,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4551,"byte_end":4583,"line_start":127,"line_end":127,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4584,"byte_end":4617,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4618,"byte_end":4655,"line_start":129,"line_end":129,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4656,"byte_end":4693,"line_start":130,"line_end":130,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4694,"byte_end":4725,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4726,"byte_end":4759,"line_start":132,"line_end":132,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4760,"byte_end":4763,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4764,"byte_end":4835,"line_start":134,"line_end":134,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4836,"byte_end":4916,"line_start":135,"line_end":135,"column_start":1,"column_end":81}},{"value":"/ tasks, [sleeping][sleep] work to run in the future, or [repeating an operation at an","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":4917,"byte_end":5005,"line_start":136,"line_end":136,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":5006,"byte_end":5030,"line_start":137,"line_end":137,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":5031,"byte_end":5034,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":5035,"byte_end":5110,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":5111,"byte_end":5114,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":5115,"byte_end":5147,"line_start":141,"line_end":141,"column_start":1,"column_end":33}},{"value":"/ [sleep]: crate::time::sleep()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":5148,"byte_end":5181,"line_start":142,"line_end":142,"column_start":1,"column_end":34}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":5182,"byte_end":5221,"line_start":143,"line_end":143,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":5222,"byte_end":5259,"line_start":144,"line_end":144,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":5260,"byte_end":5263,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":5264,"byte_end":5342,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":5343,"byte_end":5427,"line_start":147,"line_end":147,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. However, this macro provides only basic configuration options. As","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":5428,"byte_end":5512,"line_start":148,"line_end":148,"column_start":1,"column_end":85}},{"value":"/ an alternative, the [`tokio::runtime`] module provides more powerful APIs for configuring","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":5513,"byte_end":5606,"line_start":149,"line_end":149,"column_start":1,"column_end":94}},{"value":"/ and managing runtimes. You should use that module if the `#[tokio::main]` macro doesn't","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":5607,"byte_end":5698,"line_start":150,"line_end":150,"column_start":1,"column_end":92}},{"value":"/ provide the functionality you need.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":5699,"byte_end":5738,"line_start":151,"line_end":151,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":5739,"byte_end":5742,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt\" or \"rt-multi-thread\" feature flags, to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":5743,"byte_end":5821,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ enable the basic [single-threaded scheduler][rt] and the [thread-pool","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":5822,"byte_end":5895,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ scheduler][rt-multi-thread], respectively. See the [`runtime` module","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":5896,"byte_end":5968,"line_start":155,"line_end":155,"column_start":1,"column_end":73}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":5969,"byte_end":6047,"line_start":156,"line_end":156,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":6048,"byte_end":6118,"line_start":157,"line_end":157,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":6119,"byte_end":6122,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":6123,"byte_end":6149,"line_start":159,"line_end":159,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":6150,"byte_end":6188,"line_start":160,"line_end":160,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":6189,"byte_end":6229,"line_start":161,"line_end":161,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":6230,"byte_end":6270,"line_start":162,"line_end":162,"column_start":1,"column_end":41}},{"value":"/ [rt]: runtime/index.html#basic-scheduler","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":6271,"byte_end":6315,"line_start":163,"line_end":163,"column_start":1,"column_end":45}},{"value":"/ [rt-multi-thread]: runtime/index.html#threaded-scheduler","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":6316,"byte_end":6376,"line_start":164,"line_end":164,"column_start":1,"column_end":61}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":6377,"byte_end":6432,"line_start":165,"line_end":165,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":6433,"byte_end":6436,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":6437,"byte_end":6477,"line_start":167,"line_end":167,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":6478,"byte_end":6481,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":6482,"byte_end":6561,"line_start":169,"line_end":169,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":6562,"byte_end":6639,"line_start":170,"line_end":170,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":6640,"byte_end":6720,"line_start":171,"line_end":171,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":6721,"byte_end":6795,"line_start":172,"line_end":172,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":6796,"byte_end":6875,"line_start":173,"line_end":173,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":6876,"byte_end":6953,"line_start":174,"line_end":174,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":6954,"byte_end":7027,"line_start":175,"line_end":175,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, can be used to run blocking code that would otherwise","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7028,"byte_end":7104,"line_start":176,"line_end":176,"column_start":1,"column_end":77}},{"value":"/ block other tasks from running and are kept alive when not used for a certain","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7105,"byte_end":7186,"line_start":177,"line_end":177,"column_start":1,"column_end":82}},{"value":"/ amount of time which can be configured with [`thread_keep_alive`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7187,"byte_end":7257,"line_start":178,"line_end":178,"column_start":1,"column_end":71}},{"value":"/ Since it is not possible for Tokio to swap out blocking tasks, like it","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7258,"byte_end":7332,"line_start":179,"line_end":179,"column_start":1,"column_end":75}},{"value":"/ can do with asynchronous code, the upper limit on the number of blocking","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7333,"byte_end":7409,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"/ threads is very large. These limits can be configured on the [`Builder`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7410,"byte_end":7487,"line_start":181,"line_end":181,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7488,"byte_end":7491,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7492,"byte_end":7569,"line_start":183,"line_end":183,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7570,"byte_end":7573,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7574,"byte_end":7614,"line_start":185,"line_end":185,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7615,"byte_end":7668,"line_start":186,"line_end":186,"column_start":1,"column_end":54}},{"value":"/ [`thread_keep_alive`]: crate::runtime::Builder::thread_keep_alive()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7669,"byte_end":7740,"line_start":187,"line_end":187,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7741,"byte_end":7744,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7745,"byte_end":7752,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7753,"byte_end":7771,"line_start":190,"line_end":190,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7772,"byte_end":7793,"line_start":191,"line_end":191,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7794,"byte_end":7838,"line_start":192,"line_end":192,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7839,"byte_end":7842,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7843,"byte_end":7903,"line_start":194,"line_end":194,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7904,"byte_end":7956,"line_start":195,"line_end":195,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7957,"byte_end":7992,"line_start":196,"line_end":196,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":7993,"byte_end":8004,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8005,"byte_end":8008,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8009,"byte_end":8064,"line_start":199,"line_end":199,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8065,"byte_end":8140,"line_start":200,"line_end":200,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8141,"byte_end":8158,"line_start":201,"line_end":201,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8159,"byte_end":8196,"line_start":202,"line_end":202,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8197,"byte_end":8202,"line_start":203,"line_end":203,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8203,"byte_end":8210,"line_start":204,"line_end":204,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8211,"byte_end":8214,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8215,"byte_end":8293,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8294,"byte_end":8370,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8371,"byte_end":8447,"line_start":208,"line_end":208,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8448,"byte_end":8472,"line_start":209,"line_end":209,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8473,"byte_end":8476,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8477,"byte_end":8511,"line_start":211,"line_end":211,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8512,"byte_end":8549,"line_start":212,"line_end":212,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8550,"byte_end":8553,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8554,"byte_end":8576,"line_start":214,"line_end":214,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8577,"byte_end":8580,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8581,"byte_end":8660,"line_start":216,"line_end":216,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8661,"byte_end":8708,"line_start":217,"line_end":217,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8709,"byte_end":8712,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8713,"byte_end":8792,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8793,"byte_end":8873,"line_start":220,"line_end":220,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8874,"byte_end":8954,"line_start":221,"line_end":221,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":8955,"byte_end":9026,"line_start":222,"line_end":222,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9027,"byte_end":9058,"line_start":223,"line_end":223,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9059,"byte_end":9062,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9063,"byte_end":9143,"line_start":225,"line_end":225,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9144,"byte_end":9204,"line_start":226,"line_end":226,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9205,"byte_end":9208,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9209,"byte_end":9288,"line_start":228,"line_end":228,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9289,"byte_end":9358,"line_start":229,"line_end":229,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9359,"byte_end":9436,"line_start":230,"line_end":230,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9437,"byte_end":9493,"line_start":231,"line_end":231,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9494,"byte_end":9574,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9575,"byte_end":9620,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9621,"byte_end":9700,"line_start":234,"line_end":234,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9701,"byte_end":9735,"line_start":235,"line_end":235,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9736,"byte_end":9739,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9740,"byte_end":9768,"line_start":237,"line_end":237,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9769,"byte_end":9808,"line_start":238,"line_end":238,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9809,"byte_end":9850,"line_start":239,"line_end":239,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9851,"byte_end":9896,"line_start":240,"line_end":240,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9897,"byte_end":9921,"line_start":241,"line_end":241,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9922,"byte_end":9952,"line_start":242,"line_end":242,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9953,"byte_end":9979,"line_start":243,"line_end":243,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::UdpSocket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":9980,"byte_end":10012,"line_start":244,"line_end":244,"column_start":1,"column_end":33}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10013,"byte_end":10040,"line_start":245,"line_end":245,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10041,"byte_end":10069,"line_start":246,"line_end":246,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10070,"byte_end":10094,"line_start":247,"line_end":247,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10095,"byte_end":10131,"line_start":248,"line_end":248,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10132,"byte_end":10170,"line_start":249,"line_end":249,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10171,"byte_end":10174,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10175,"byte_end":10189,"line_start":251,"line_end":251,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10190,"byte_end":10193,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10194,"byte_end":10223,"line_start":253,"line_end":253,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10224,"byte_end":10227,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10228,"byte_end":10241,"line_start":255,"line_end":255,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10242,"byte_end":10274,"line_start":256,"line_end":256,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10275,"byte_end":10324,"line_start":257,"line_end":257,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10325,"byte_end":10328,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10329,"byte_end":10347,"line_start":259,"line_end":259,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10348,"byte_end":10411,"line_start":260,"line_end":260,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10412,"byte_end":10478,"line_start":261,"line_end":261,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10479,"byte_end":10482,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10483,"byte_end":10497,"line_start":263,"line_end":263,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10498,"byte_end":10557,"line_start":264,"line_end":264,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10558,"byte_end":10561,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10562,"byte_end":10599,"line_start":266,"line_end":266,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10600,"byte_end":10640,"line_start":267,"line_end":267,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10641,"byte_end":10644,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10645,"byte_end":10725,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10726,"byte_end":10748,"line_start":270,"line_end":270,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10749,"byte_end":10812,"line_start":271,"line_end":271,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10813,"byte_end":10853,"line_start":272,"line_end":272,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10854,"byte_end":10904,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10905,"byte_end":10940,"line_start":274,"line_end":274,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10941,"byte_end":10976,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":10977,"byte_end":11060,"line_start":276,"line_end":276,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11061,"byte_end":11096,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11097,"byte_end":11122,"line_start":278,"line_end":278,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11123,"byte_end":11145,"line_start":279,"line_end":279,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11146,"byte_end":11149,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11150,"byte_end":11192,"line_start":281,"line_end":281,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11193,"byte_end":11265,"line_start":282,"line_end":282,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11266,"byte_end":11344,"line_start":283,"line_end":283,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11345,"byte_end":11376,"line_start":284,"line_end":284,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11377,"byte_end":11398,"line_start":285,"line_end":285,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11399,"byte_end":11416,"line_start":286,"line_end":286,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11417,"byte_end":11432,"line_start":287,"line_end":287,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11433,"byte_end":11442,"line_start":288,"line_end":288,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11443,"byte_end":11448,"line_start":289,"line_end":289,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11449,"byte_end":11456,"line_start":290,"line_end":290,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11457,"byte_end":11460,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11461,"byte_end":11481,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11482,"byte_end":11485,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11486,"byte_end":11567,"line_start":294,"line_end":294,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11568,"byte_end":11646,"line_start":295,"line_end":295,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11647,"byte_end":11727,"line_start":296,"line_end":296,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11728,"byte_end":11805,"line_start":297,"line_end":297,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11806,"byte_end":11889,"line_start":298,"line_end":298,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11890,"byte_end":11967,"line_start":299,"line_end":299,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":11968,"byte_end":12055,"line_start":300,"line_end":300,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":12056,"byte_end":12137,"line_start":301,"line_end":301,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":12138,"byte_end":12147,"line_start":302,"line_end":302,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":12148,"byte_end":12151,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below except `test-util`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":12152,"byte_end":12236,"line_start":304,"line_end":304,"column_start":1,"column_end":85}},{"value":"/ - `rt`: Enables `tokio::spawn`, the basic (current thread) scheduler,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":12237,"byte_end":12310,"line_start":305,"line_end":305,"column_start":1,"column_end":74}},{"value":"/         and non-scheduler utilities.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":12311,"byte_end":12351,"line_start":306,"line_end":306,"column_start":1,"column_end":41}},{"value":"/ - `rt-multi-thread`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":12352,"byte_end":12438,"line_start":307,"line_end":307,"column_start":1,"column_end":87}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":12439,"byte_end":12490,"line_start":308,"line_end":308,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":12491,"byte_end":12551,"line_start":309,"line_end":309,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":12552,"byte_end":12642,"line_start":310,"line_end":310,"column_start":1,"column_end":91}},{"value":"/          as well as (on Unix-like systems) `AsyncFd`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":12643,"byte_end":12699,"line_start":311,"line_end":311,"column_start":1,"column_end":57}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":12700,"byte_end":12777,"line_start":312,"line_end":312,"column_start":1,"column_end":78}},{"value":"/           the built in timer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":12778,"byte_end":12811,"line_start":313,"line_end":313,"column_start":1,"column_end":34}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":12812,"byte_end":12860,"line_start":314,"line_end":314,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":12861,"byte_end":12930,"line_start":315,"line_end":315,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":12931,"byte_end":12977,"line_start":316,"line_end":316,"column_start":1,"column_end":47}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":12978,"byte_end":13028,"line_start":317,"line_end":317,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13029,"byte_end":13067,"line_start":318,"line_end":318,"column_start":1,"column_end":39}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13068,"byte_end":13146,"line_start":319,"line_end":319,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13147,"byte_end":13150,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13151,"byte_end":13233,"line_start":321,"line_end":321,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13234,"byte_end":13256,"line_start":322,"line_end":322,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13257,"byte_end":13260,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13261,"byte_end":13286,"line_start":324,"line_end":324,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13287,"byte_end":13290,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13291,"byte_end":13359,"line_start":326,"line_end":326,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13360,"byte_end":13423,"line_start":327,"line_end":327,"column_start":1,"column_end":64}},{"value":"/ dependencies.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13424,"byte_end":13441,"line_start":328,"line_end":328,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13442,"byte_end":13445,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13446,"byte_end":13525,"line_start":330,"line_end":330,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13526,"byte_end":13603,"line_start":331,"line_end":331,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13604,"byte_end":13637,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13638,"byte_end":13641,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ ### Unstable features","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13642,"byte_end":13667,"line_start":334,"line_end":334,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13668,"byte_end":13671,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 1.x","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13672,"byte_end":13757,"line_start":336,"line_end":336,"column_start":1,"column_end":86}},{"value":"/ releases. To enable these features, the `--cfg tokio_unstable` must be passed to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13758,"byte_end":13842,"line_start":337,"line_end":337,"column_start":1,"column_end":85}},{"value":"/ `rustc` when compiling. This is easiest done using the `RUSTFLAGS` env variable:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13843,"byte_end":13927,"line_start":338,"line_end":338,"column_start":1,"column_end":85}},{"value":"/ `RUSTFLAGS=\"--cfg tokio_unstable\"`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13928,"byte_end":13967,"line_start":339,"line_end":339,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13968,"byte_end":13971,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ - `tracing`: Enables tracing events.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":13972,"byte_end":14012,"line_start":341,"line_end":341,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":14013,"byte_end":14016,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":14017,"byte_end":14114,"line_start":343,"line_end":343,"column_start":1,"column_end":98}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":733},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":75}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":14303,"byte_end":14315,"line_start":349,"line_end":349,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/mod.rs","byte_start":17608,"byte_end":17628,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":75},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":744},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1107},{"krate":0,"index":1181},{"krate":0,"index":1191},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1114}],"decl_id":null,"docs":" Asynchronous file and standard stream adaptation.","sig":null,"attributes":[{"value":"cfg(feature = \"fs\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":19051,"byte_end":19073,"line_start":51,"line_end":51,"column_start":13,"column_end":35}},{"value":"cfg(not(loom))","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8605878,"byte_end":8605896,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ Asynchronous file and standard stream adaptation.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8605898,"byte_end":8605951,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8605952,"byte_end":8605955,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains utility methods and adapter types for input/output to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8605956,"byte_end":8606034,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ files or standard streams (`Stdin`, `Stdout`, `Stderr`), and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8606035,"byte_end":8606099,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"/ filesystem manipulation, for use within (and only within) a Tokio runtime.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8606100,"byte_end":8606178,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8606179,"byte_end":8606182,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Tasks run by *worker* threads should not block, as this could delay","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8606183,"byte_end":8606254,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/ servicing reactor events. Portable filesystem operations are blocking,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8606255,"byte_end":8606329,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ however. This module offers adapters which use a `blocking` annotation","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8606330,"byte_end":8606404,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ to inform the runtime that a blocking operation is required. When","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8606405,"byte_end":8606474,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ necessary, this allows the runtime to convert the current thread from a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8606475,"byte_end":8606550,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ *worker* to a *backup* thread, where blocking is acceptable.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8606551,"byte_end":8606615,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8606616,"byte_end":8606619,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8606620,"byte_end":8606632,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8606633,"byte_end":8606636,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Where possible, users should prefer the provided asynchronous-specific","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8606637,"byte_end":8606711,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ traits such as [`AsyncRead`], or methods returning a `Future` or `Poll`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8606712,"byte_end":8606787,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ type. Adaptions also extend to traits like `std::io::Read` where methods","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8606788,"byte_end":8606864,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ return `std::io::Result`. Be warned that these adapted methods may return","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8606865,"byte_end":8606942,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ `std::io::ErrorKind::WouldBlock` if a *worker* thread can not be converted","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8606943,"byte_end":8607021,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ to a *backup* thread immediately.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607022,"byte_end":8607059,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607060,"byte_end":8607063,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@crate::io::AsyncRead","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/mod.rs","byte_start":8607064,"byte_end":8607109,"line_start":25,"line_end":25,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":751},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610627,"byte_end":8610639,"line_start":48,"line_end":48,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"pub async fn canonicalize<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical, absolute form of a path with all intermediate\n components normalized and symbolic links resolved.","sig":null,"attributes":[{"value":"/ Returns the canonical, absolute form of a path with all intermediate","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8609121,"byte_end":8609193,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ components normalized and symbolic links resolved.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8609194,"byte_end":8609248,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8609249,"byte_end":8609252,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::canonicalize`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8609253,"byte_end":8609315,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8609316,"byte_end":8609319,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::canonicalize","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8609320,"byte_end":8609352,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8609353,"byte_end":8609356,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8609357,"byte_end":8609389,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8609390,"byte_end":8609393,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `realpath` function on Unix","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8609394,"byte_end":8609468,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ and the `CreateFile` and `GetFinalPathNameByHandle` functions on Windows.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8609469,"byte_end":8609546,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8609547,"byte_end":8609603,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8609604,"byte_end":8609607,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ On Windows, this converts the path to use [extended length path][path]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8609608,"byte_end":8609682,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ syntax, which allows your program to use longer path names, but means you","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8609683,"byte_end":8609760,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ can only join backslash-delimited paths to it, and it may be incompatible","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8609761,"byte_end":8609838,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ with other applications (if passed to the application on the command-line,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8609839,"byte_end":8609917,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or written to a file another application may read).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8609918,"byte_end":8609973,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8609974,"byte_end":8609977,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8609978,"byte_end":8610063,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/ [path]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx#maxpath","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610064,"byte_end":8610163,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610164,"byte_end":8610167,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610168,"byte_end":8610180,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610181,"byte_end":8610184,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610185,"byte_end":8610263,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610264,"byte_end":8610296,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610297,"byte_end":8610300,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ * `path` does not exist.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610301,"byte_end":8610329,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ * A non-final component in path is not a directory.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610330,"byte_end":8610385,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610386,"byte_end":8610389,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610390,"byte_end":8610404,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610405,"byte_end":8610408,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610409,"byte_end":8610422,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610423,"byte_end":8610441,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610442,"byte_end":8610458,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610459,"byte_end":8610462,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610463,"byte_end":8610481,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610482,"byte_end":8610521,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/     let path = fs::canonicalize(\"../a/../foo.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610522,"byte_end":8610584,"line_start":44,"line_end":44,"column_start":1,"column_end":63}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610585,"byte_end":8610599,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610600,"byte_end":8610605,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/canonicalize.rs","byte_start":8610606,"byte_end":8610613,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":761},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8612196,"byte_end":8612206,"line_start":49,"line_end":49,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"pub async fn create_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty directory at the provided path","sig":null,"attributes":[{"value":"/ Creates a new, empty directory at the provided path","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8610850,"byte_end":8610905,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8610906,"byte_end":8610909,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8610910,"byte_end":8610970,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8610971,"byte_end":8610974,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::create_dir","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8610975,"byte_end":8611005,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611006,"byte_end":8611009,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611010,"byte_end":8611042,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611043,"byte_end":8611046,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611047,"byte_end":8611118,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611119,"byte_end":8611169,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611170,"byte_end":8611226,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611227,"byte_end":8611230,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611231,"byte_end":8611316,"line_start":18,"line_end":18,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611317,"byte_end":8611320,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: If a parent of the given path doesn't exist, this function will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611321,"byte_end":8611398,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ return an error. To create a directory and all its missing parents at the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611399,"byte_end":8611476,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ same time, use the [`create_dir_all`] function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611477,"byte_end":8611528,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611529,"byte_end":8611532,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611533,"byte_end":8611545,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611546,"byte_end":8611549,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611550,"byte_end":8611628,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611629,"byte_end":8611661,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611662,"byte_end":8611665,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * User lacks permissions to create directory at `path`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611666,"byte_end":8611725,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ * A parent of the given path doesn't exist. (To create a directory and all","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611726,"byte_end":8611804,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   its missing parents at the same time, use the [`create_dir_all`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611805,"byte_end":8611875,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/   function.)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611876,"byte_end":8611892,"line_start":32,"line_end":32,"column_start":1,"column_end":17}},{"value":"/ * `path` already exists.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611893,"byte_end":8611921,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611922,"byte_end":8611925,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: super::create_dir_all()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611926,"byte_end":8611973,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611974,"byte_end":8611977,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611978,"byte_end":8611992,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611993,"byte_end":8611996,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8611997,"byte_end":8612010,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8612011,"byte_end":8612029,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8612030,"byte_end":8612046,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8612047,"byte_end":8612050,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8612051,"byte_end":8612069,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8612070,"byte_end":8612109,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/     fs::create_dir(\"/some/dir\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8612110,"byte_end":8612153,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8612154,"byte_end":8612168,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8612169,"byte_end":8612174,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir.rs","byte_start":8612175,"byte_end":8612182,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":771},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613959,"byte_end":8613973,"line_start":50,"line_end":50,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"pub async fn create_dir_all<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Recursively creates a directory and all of its parent components if they\n are missing.","sig":null,"attributes":[{"value":"/ Recursively creates a directory and all of its parent components if they","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8612410,"byte_end":8612486,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ are missing.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8612487,"byte_end":8612503,"line_start":7,"line_end":7,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8612504,"byte_end":8612507,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::create_dir_all`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8612508,"byte_end":8612572,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8612573,"byte_end":8612576,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::create_dir_all","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8612577,"byte_end":8612611,"line_start":11,"line_end":11,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8612612,"byte_end":8612615,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8612616,"byte_end":8612648,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8612649,"byte_end":8612652,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `mkdir` function on Unix","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8612653,"byte_end":8612724,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ and the `CreateDirectory` function on Windows.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8612725,"byte_end":8612775,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8612776,"byte_end":8612832,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8612833,"byte_end":8612836,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8612837,"byte_end":8612922,"line_start":19,"line_end":19,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8612923,"byte_end":8612926,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8612927,"byte_end":8612939,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8612940,"byte_end":8612943,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8612944,"byte_end":8613022,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613023,"byte_end":8613055,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613056,"byte_end":8613059,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * If any directory in the path specified by `path` does not already exist","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613060,"byte_end":8613137,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ and it could not be created otherwise. The specific error conditions for","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613138,"byte_end":8613214,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ when a directory is being created (after it is determined to not exist) are","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613215,"byte_end":8613294,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ outlined by [`fs::create_dir`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613295,"byte_end":8613330,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613331,"byte_end":8613334,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Notable exception is made for situations where any of the directories","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613335,"byte_end":8613408,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ specified in the `path` could not be created as it was being created concurrently.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613409,"byte_end":8613495,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ Such cases are considered to be successful. That is, calling `create_dir_all`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613496,"byte_end":8613577,"line_start":33,"line_end":33,"column_start":1,"column_end":82}},{"value":"/ concurrently from multiple threads or processes is guaranteed not to fail","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613578,"byte_end":8613655,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ due to a race condition with itself.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613656,"byte_end":8613696,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613697,"byte_end":8613700,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`fs::create_dir`]: std::fs::create_dir","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613701,"byte_end":8613744,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613745,"byte_end":8613748,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613749,"byte_end":8613763,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613764,"byte_end":8613767,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613768,"byte_end":8613781,"line_start":41,"line_end":41,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613782,"byte_end":8613800,"line_start":42,"line_end":42,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613801,"byte_end":8613804,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613805,"byte_end":8613823,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613824,"byte_end":8613868,"line_start":45,"line_end":45,"column_start":1,"column_end":45}},{"value":"/     fs::create_dir_all(\"/some/dir\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613869,"byte_end":8613916,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613917,"byte_end":8613931,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613932,"byte_end":8613937,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/create_dir_all.rs","byte_start":8613938,"byte_end":8613945,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1118},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8614429,"byte_end":8614439,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::dir_builder::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":1119},{"krate":0,"index":1120}],"decl_id":null,"docs":" A builder for creating directories in various manners.","sig":null,"attributes":[{"value":"/ A builder for creating directories in various manners.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8614181,"byte_end":8614239,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8614240,"byte_end":8614243,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::DirBuilder`] for usage on","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8614244,"byte_end":8614317,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ the Tokio runtime.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8614318,"byte_end":8614340,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8614341,"byte_end":8614344,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std::fs::DirBuilder]: std::fs::DirBuilder","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8614345,"byte_end":8614391,"line_start":11,"line_end":11,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615078,"byte_end":8615081,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new set of options with default mode/security settings for all\n platforms and also non-recursive.","sig":null,"attributes":[{"value":"/ Creates a new set of options with default mode/security settings for all","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8614673,"byte_end":8614749,"line_start":23,"line_end":23,"column_start":5,"column_end":81}},{"value":"/ platforms and also non-recursive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8614754,"byte_end":8614791,"line_start":24,"line_end":24,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8614796,"byte_end":8614799,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::new`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8614804,"byte_end":8614869,"line_start":26,"line_end":26,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8614874,"byte_end":8614877,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::new","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8614882,"byte_end":8614917,"line_start":28,"line_end":28,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8614922,"byte_end":8614925,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8614930,"byte_end":8614944,"line_start":30,"line_end":30,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8614949,"byte_end":8614952,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8614957,"byte_end":8614970,"line_start":32,"line_end":32,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8614975,"byte_end":8615005,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615010,"byte_end":8615013,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615018,"byte_end":8615054,"line_start":35,"line_end":35,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615059,"byte_end":8615066,"line_start":36,"line_end":36,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615703,"byte_end":8615712,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"pub fn recursive(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether to create directories recursively (including all parent directories).\n Parents that do not exist are created with the same security and permissions settings.","sig":null,"attributes":[{"value":"/ Indicates whether to create directories recursively (including all parent directories).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615132,"byte_end":8615223,"line_start":41,"line_end":41,"column_start":5,"column_end":96}},{"value":"/ Parents that do not exist are created with the same security and permissions settings.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615228,"byte_end":8615318,"line_start":42,"line_end":42,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615323,"byte_end":8615326,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This option defaults to `false`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615331,"byte_end":8615367,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615372,"byte_end":8615375,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::recursive`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615380,"byte_end":8615451,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615456,"byte_end":8615459,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::recursive","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615464,"byte_end":8615505,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615510,"byte_end":8615513,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615518,"byte_end":8615532,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615537,"byte_end":8615540,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615545,"byte_end":8615558,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615563,"byte_end":8615593,"line_start":53,"line_end":53,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615598,"byte_end":8615601,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615606,"byte_end":8615646,"line_start":55,"line_end":55,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615651,"byte_end":8615679,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615684,"byte_end":8615691,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616917,"byte_end":8616923,"line_start":99,"line_end":99,"column_start":18,"column_end":24},"name":"create","qualname":"<DirBuilder>::create","value":"pub async fn create<'_,\n                    impl AsRef<Path>: AsRef<Path>>(&'_ Self, impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates the specified directory with the configured options.","sig":null,"attributes":[{"value":"/ Creates the specified directory with the configured options.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615816,"byte_end":8615880,"line_start":63,"line_end":63,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615885,"byte_end":8615888,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615893,"byte_end":8615961,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/ recursive mode is enabled.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8615966,"byte_end":8615996,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616001,"byte_end":8616004,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::DirBuilder::create`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616009,"byte_end":8616077,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616082,"byte_end":8616085,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::DirBuilder::create","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616090,"byte_end":8616128,"line_start":70,"line_end":70,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616133,"byte_end":8616136,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616141,"byte_end":8616153,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616158,"byte_end":8616161,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ An error will be returned under the following circumstances:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616166,"byte_end":8616230,"line_start":74,"line_end":74,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616235,"byte_end":8616238,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ * Path already points to an existing file.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616243,"byte_end":8616289,"line_start":76,"line_end":76,"column_start":5,"column_end":51}},{"value":"/ * Path already points to an existing directory and the mode is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616294,"byte_end":8616360,"line_start":77,"line_end":77,"column_start":5,"column_end":71}},{"value":"/   non-recursive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616365,"byte_end":8616385,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/ * The calling process doesn't have permissions to create the directory","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616390,"byte_end":8616464,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/   or its missing parents.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616469,"byte_end":8616498,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"/ * Other I/O error occurred.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616503,"byte_end":8616534,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616539,"byte_end":8616542,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616547,"byte_end":8616561,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616566,"byte_end":8616569,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616574,"byte_end":8616587,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::DirBuilder;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616592,"byte_end":8616622,"line_start":86,"line_end":86,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616627,"byte_end":8616643,"line_start":87,"line_end":87,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616648,"byte_end":8616651,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616656,"byte_end":8616674,"line_start":89,"line_end":89,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616679,"byte_end":8616718,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/     DirBuilder::new()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616723,"byte_end":8616748,"line_start":91,"line_end":91,"column_start":5,"column_end":30}},{"value":"/         .recursive(true)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616753,"byte_end":8616781,"line_start":92,"line_end":92,"column_start":5,"column_end":33}},{"value":"/         .create(\"/tmp/foo/bar/baz\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616786,"byte_end":8616825,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/         .await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616830,"byte_end":8616850,"line_start":94,"line_end":94,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616855,"byte_end":8616858,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616863,"byte_end":8616877,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616882,"byte_end":8616887,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8616892,"byte_end":8616899,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8617761,"byte_end":8617765,"line_start":132,"line_end":132,"column_start":16,"column_end":20},"name":"mode","qualname":"<DirBuilder>::mode","value":"pub fn mode(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the mode to create new directories with.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":817},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8620403,"byte_end":8620407,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":819}],"decl_id":null,"docs":" A reference to an open file on the filesystem.","sig":null,"attributes":[{"value":"/ A reference to an open file on the filesystem.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8618347,"byte_end":8618397,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8618398,"byte_end":8618401,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::File`][std] for usage from the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8618402,"byte_end":8618480,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ Tokio runtime.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8618481,"byte_end":8618499,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8618500,"byte_end":8618503,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ An instance of a `File` can be read and/or written depending on what options","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8618504,"byte_end":8618584,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ it was opened with. Files also implement [`AsyncSeek`] to alter the logical","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8618585,"byte_end":8618664,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ cursor that the file contains internally.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8618665,"byte_end":8618710,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8618711,"byte_end":8618714,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A file will not be closed immediately when it goes out of scope if there","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8618715,"byte_end":8618791,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ are any IO operations that have not yet completed. To ensure that a file is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8618792,"byte_end":8618871,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ closed immediately when it is dropped, you should call [`flush`] before","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8618872,"byte_end":8618947,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/ dropping it. Note that this does not ensure that the file has been fully","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8618948,"byte_end":8619024,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ written to disk; the operating system might keep the changes around in an","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619025,"byte_end":8619102,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ in-memory buffer. See the [`sync_all`] method for telling the OS to write","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619103,"byte_end":8619180,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ the data to disk.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619181,"byte_end":8619202,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619203,"byte_end":8619206,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Reading and writing to a `File` is usually done using the convenience","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619207,"byte_end":8619280,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ methods found on the [`AsyncReadExt`] and [`AsyncWriteExt`] traits.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619281,"byte_end":8619352,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619353,"byte_end":8619356,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [std]: struct@std::fs::File","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619357,"byte_end":8619388,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"/ [`AsyncSeek`]: trait@crate::io::AsyncSeek","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619389,"byte_end":8619434,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ [`flush`]: fn@crate::io::AsyncWriteExt::flush","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619435,"byte_end":8619484,"line_start":44,"line_end":44,"column_start":1,"column_end":50}},{"value":"/ [`sync_all`]: fn@crate::fs::File::sync_all","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619485,"byte_end":8619531,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619532,"byte_end":8619583,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619584,"byte_end":8619637,"line_start":47,"line_end":47,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619638,"byte_end":8619641,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619642,"byte_end":8619656,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619657,"byte_end":8619660,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Create a new file and asynchronously write bytes to it:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619661,"byte_end":8619720,"line_start":51,"line_end":51,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619721,"byte_end":8619724,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619725,"byte_end":8619738,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619739,"byte_end":8619763,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/ use tokio::io::AsyncWriteExt; // for write_all()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619764,"byte_end":8619816,"line_start":55,"line_end":55,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619817,"byte_end":8619820,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619821,"byte_end":8619866,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619867,"byte_end":8619917,"line_start":58,"line_end":58,"column_start":1,"column_end":51}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619918,"byte_end":8619962,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619963,"byte_end":8619975,"line_start":60,"line_end":60,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619976,"byte_end":8619983,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619984,"byte_end":8619991,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619992,"byte_end":8619995,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a buffer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8619996,"byte_end":8620041,"line_start":64,"line_end":64,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8620042,"byte_end":8620045,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8620046,"byte_end":8620059,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8620060,"byte_end":8620084,"line_start":67,"line_end":67,"column_start":1,"column_end":25}},{"value":"/ use tokio::io::AsyncReadExt; // for read_to_end()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8620085,"byte_end":8620138,"line_start":68,"line_end":68,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8620139,"byte_end":8620142,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8620143,"byte_end":8620188,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8620189,"byte_end":8620237,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8620238,"byte_end":8620241,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let mut contents = vec![];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8620242,"byte_end":8620272,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8620273,"byte_end":8620316,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8620317,"byte_end":8620320,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8620321,"byte_end":8620362,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8620363,"byte_end":8620375,"line_start":77,"line_end":77,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8620376,"byte_end":8620383,"line_start":78,"line_end":78,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8620384,"byte_end":8620391,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622017,"byte_end":8622021,"line_start":143,"line_end":143,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"pub async fn open<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to open a file in read-only mode.","sig":null,"attributes":[{"value":"/ Attempts to open a file in read-only mode.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8620980,"byte_end":8621026,"line_start":110,"line_end":110,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621031,"byte_end":8621034,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621039,"byte_end":8621080,"line_start":112,"line_end":112,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621085,"byte_end":8621088,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: super::OpenOptions","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621093,"byte_end":8621132,"line_start":114,"line_end":114,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621137,"byte_end":8621140,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621145,"byte_end":8621157,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621162,"byte_end":8621165,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if called from outside of the Tokio","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621170,"byte_end":8621244,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ runtime or if path does not already exist. Other errors may also be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621249,"byte_end":8621320,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ returned according to OpenOptions::open.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621325,"byte_end":8621369,"line_start":120,"line_end":120,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621374,"byte_end":8621377,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621382,"byte_end":8621396,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621401,"byte_end":8621404,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621409,"byte_end":8621422,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621427,"byte_end":8621451,"line_start":125,"line_end":125,"column_start":5,"column_end":29}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621456,"byte_end":8621488,"line_start":126,"line_end":126,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621493,"byte_end":8621496,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621501,"byte_end":8621546,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621551,"byte_end":8621599,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621604,"byte_end":8621607,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621612,"byte_end":8621642,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621647,"byte_end":8621690,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621695,"byte_end":8621698,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ println!(\"len = {}\", contents.len());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621703,"byte_end":8621744,"line_start":134,"line_end":134,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621749,"byte_end":8621761,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621766,"byte_end":8621773,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621778,"byte_end":8621785,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621790,"byte_end":8621793,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The [`read_to_end`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621798,"byte_end":8621870,"line_start":139,"line_end":139,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621875,"byte_end":8621878,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ [`read_to_end`]: fn@crate::io::AsyncReadExt::read_to_end","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621883,"byte_end":8621943,"line_start":141,"line_end":141,"column_start":5,"column_end":65}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8621948,"byte_end":8621999,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623246,"byte_end":8623252,"line_start":183,"line_end":183,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"pub async fn create<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622218,"byte_end":8622254,"line_start":150,"line_end":150,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622259,"byte_end":8622262,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622267,"byte_end":8622343,"line_start":152,"line_end":152,"column_start":5,"column_end":81}},{"value":"/ it if it does.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622348,"byte_end":8622366,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622371,"byte_end":8622374,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ See [`OpenOptions`] for more details.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622379,"byte_end":8622420,"line_start":155,"line_end":155,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622425,"byte_end":8622428,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions`]: super::OpenOptions","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622433,"byte_end":8622472,"line_start":157,"line_end":157,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622477,"byte_end":8622480,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622485,"byte_end":8622497,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622502,"byte_end":8622505,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Results in an error if called from outside of the Tokio runtime or if","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622510,"byte_end":8622583,"line_start":161,"line_end":161,"column_start":5,"column_end":78}},{"value":"/ the underlying [`create`] call results in an error.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622588,"byte_end":8622643,"line_start":162,"line_end":162,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622648,"byte_end":8622651,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ [`create`]: std::fs::File::create","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622656,"byte_end":8622693,"line_start":164,"line_end":164,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622698,"byte_end":8622701,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622706,"byte_end":8622720,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622725,"byte_end":8622728,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622733,"byte_end":8622746,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622751,"byte_end":8622775,"line_start":169,"line_end":169,"column_start":5,"column_end":29}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622780,"byte_end":8622813,"line_start":170,"line_end":170,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622818,"byte_end":8622821,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622826,"byte_end":8622871,"line_start":172,"line_end":172,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622876,"byte_end":8622926,"line_start":173,"line_end":173,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622931,"byte_end":8622975,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622980,"byte_end":8622992,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8622997,"byte_end":8623004,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623009,"byte_end":8623016,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623021,"byte_end":8623024,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623029,"byte_end":8623100,"line_start":179,"line_end":179,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623105,"byte_end":8623108,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623113,"byte_end":8623170,"line_start":181,"line_end":181,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623175,"byte_end":8623228,"line_start":182,"line_end":182,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623889,"byte_end":8623897,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"from_std","qualname":"<File>::from_std","value":"pub fn from_std(sys::File) -> File","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`std::fs::File`][std] to a [`tokio::fs::File`][file].","sig":null,"attributes":[{"value":"/ Converts a [`std::fs::File`][std] to a [`tokio::fs::File`][file].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623465,"byte_end":8623534,"line_start":189,"line_end":189,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623539,"byte_end":8623542,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623547,"byte_end":8623571,"line_start":191,"line_end":191,"column_start":5,"column_end":29}},{"value":"/ [file]: File","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623576,"byte_end":8623592,"line_start":192,"line_end":192,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623597,"byte_end":8623600,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623605,"byte_end":8623619,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623624,"byte_end":8623627,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623632,"byte_end":8623645,"line_start":196,"line_end":196,"column_start":5,"column_end":18}},{"value":"/ // This line could block. It is not recommended to do this on the Tokio","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623650,"byte_end":8623725,"line_start":197,"line_end":197,"column_start":5,"column_end":80}},{"value":"/ // runtime.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623730,"byte_end":8623745,"line_start":198,"line_end":198,"column_start":5,"column_end":20}},{"value":"/ let std_file = std::fs::File::open(\"foo.txt\").unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623750,"byte_end":8623809,"line_start":199,"line_end":199,"column_start":5,"column_end":64}},{"value":"/ let file = tokio::fs::File::from_std(std_file);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623814,"byte_end":8623865,"line_start":200,"line_end":200,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8623870,"byte_end":8623877,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624936,"byte_end":8624944,"line_start":236,"line_end":236,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"pub async fn sync_all<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Attempts to sync all OS-internal metadata to disk.","sig":null,"attributes":[{"value":"/ Attempts to sync all OS-internal metadata to disk.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624173,"byte_end":8624227,"line_start":213,"line_end":213,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624232,"byte_end":8624235,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This function will attempt to ensure that all in-core data reaches the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624240,"byte_end":8624314,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/ filesystem before returning.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624319,"byte_end":8624351,"line_start":216,"line_end":216,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624356,"byte_end":8624359,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624364,"byte_end":8624378,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624383,"byte_end":8624386,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624391,"byte_end":8624404,"line_start":220,"line_end":220,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624409,"byte_end":8624433,"line_start":221,"line_end":221,"column_start":5,"column_end":29}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624438,"byte_end":8624471,"line_start":222,"line_end":222,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624476,"byte_end":8624479,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624484,"byte_end":8624529,"line_start":224,"line_end":224,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624534,"byte_end":8624584,"line_start":225,"line_end":225,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624589,"byte_end":8624633,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624638,"byte_end":8624665,"line_start":227,"line_end":227,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624670,"byte_end":8624682,"line_start":228,"line_end":228,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624687,"byte_end":8624694,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624699,"byte_end":8624706,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624711,"byte_end":8624714,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624719,"byte_end":8624790,"line_start":232,"line_end":232,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624795,"byte_end":8624798,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624803,"byte_end":8624860,"line_start":234,"line_end":234,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8624865,"byte_end":8624918,"line_start":235,"line_end":235,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626138,"byte_end":8626147,"line_start":271,"line_end":271,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"pub async fn sync_data<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function is similar to `sync_all`, except that it may not\n synchronize file metadata to the filesystem.","sig":null,"attributes":[{"value":"/ This function is similar to `sync_all`, except that it may not","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625157,"byte_end":8625223,"line_start":244,"line_end":244,"column_start":5,"column_end":71}},{"value":"/ synchronize file metadata to the filesystem.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625228,"byte_end":8625276,"line_start":245,"line_end":245,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625281,"byte_end":8625284,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize content, but don't","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625289,"byte_end":8625364,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ need the metadata on disk. The goal of this method is to reduce disk","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625369,"byte_end":8625441,"line_start":248,"line_end":248,"column_start":5,"column_end":77}},{"value":"/ operations.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625446,"byte_end":8625461,"line_start":249,"line_end":249,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625466,"byte_end":8625469,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of `sync_all`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625474,"byte_end":8625552,"line_start":251,"line_end":251,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625557,"byte_end":8625560,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625565,"byte_end":8625579,"line_start":253,"line_end":253,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625584,"byte_end":8625587,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625592,"byte_end":8625605,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625610,"byte_end":8625634,"line_start":256,"line_end":256,"column_start":5,"column_end":29}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625639,"byte_end":8625672,"line_start":257,"line_end":257,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625677,"byte_end":8625680,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625685,"byte_end":8625730,"line_start":259,"line_end":259,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625735,"byte_end":8625785,"line_start":260,"line_end":260,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625790,"byte_end":8625834,"line_start":261,"line_end":261,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625839,"byte_end":8625867,"line_start":262,"line_end":262,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625872,"byte_end":8625884,"line_start":263,"line_end":263,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625889,"byte_end":8625896,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625901,"byte_end":8625908,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625913,"byte_end":8625916,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625921,"byte_end":8625992,"line_start":267,"line_end":267,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8625997,"byte_end":8626000,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626005,"byte_end":8626062,"line_start":269,"line_end":269,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626067,"byte_end":8626120,"line_start":270,"line_end":270,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8627425,"byte_end":8627432,"line_start":309,"line_end":309,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"pub async fn set_len<'_>(&'_ Self, u64) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the underlying file, updating the size of this file to become size.","sig":null,"attributes":[{"value":"/ Truncates or extends the underlying file, updating the size of this file to become size.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626361,"byte_end":8626453,"line_start":279,"line_end":279,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626458,"byte_end":8626461,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ If the size is less than the current file's size, then the file will be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626466,"byte_end":8626541,"line_start":281,"line_end":281,"column_start":5,"column_end":80}},{"value":"/ shrunk. If it is greater than the current file's size, then the file","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626546,"byte_end":8626618,"line_start":282,"line_end":282,"column_start":5,"column_end":77}},{"value":"/ will be extended to size and have all of the intermediate data filled in","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626623,"byte_end":8626699,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ with 0s.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626704,"byte_end":8626716,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626721,"byte_end":8626724,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626729,"byte_end":8626741,"line_start":286,"line_end":286,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626746,"byte_end":8626749,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the file is not opened for","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626754,"byte_end":8626822,"line_start":288,"line_end":288,"column_start":5,"column_end":73}},{"value":"/ writing.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626827,"byte_end":8626839,"line_start":289,"line_end":289,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626844,"byte_end":8626847,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626852,"byte_end":8626866,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626871,"byte_end":8626874,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626879,"byte_end":8626892,"line_start":293,"line_end":293,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626897,"byte_end":8626921,"line_start":294,"line_end":294,"column_start":5,"column_end":29}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626926,"byte_end":8626959,"line_start":295,"line_end":295,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626964,"byte_end":8626967,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8626972,"byte_end":8627017,"line_start":297,"line_end":297,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8627022,"byte_end":8627072,"line_start":298,"line_end":298,"column_start":5,"column_end":55}},{"value":"/ file.write_all(b\"hello, world!\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8627077,"byte_end":8627121,"line_start":299,"line_end":299,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8627126,"byte_end":8627154,"line_start":300,"line_end":300,"column_start":5,"column_end":33}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8627159,"byte_end":8627171,"line_start":301,"line_end":301,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8627176,"byte_end":8627183,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8627188,"byte_end":8627195,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8627200,"byte_end":8627203,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8627208,"byte_end":8627279,"line_start":305,"line_end":305,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8627284,"byte_end":8627287,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8627292,"byte_end":8627349,"line_start":307,"line_end":307,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8627354,"byte_end":8627407,"line_start":308,"line_end":308,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629016,"byte_end":8629024,"line_start":368,"line_end":368,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Queries metadata about the underlying file.","sig":null,"attributes":[{"value":"/ Queries metadata about the underlying file.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8628630,"byte_end":8628677,"line_start":353,"line_end":353,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8628682,"byte_end":8628685,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8628690,"byte_end":8628704,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8628709,"byte_end":8628712,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8628717,"byte_end":8628730,"line_start":357,"line_end":357,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8628735,"byte_end":8628759,"line_start":358,"line_end":358,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8628764,"byte_end":8628767,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8628772,"byte_end":8628817,"line_start":360,"line_end":360,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8628822,"byte_end":8628866,"line_start":361,"line_end":361,"column_start":5,"column_end":49}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8628871,"byte_end":8628913,"line_start":362,"line_end":362,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8628918,"byte_end":8628921,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", metadata);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8628926,"byte_end":8628957,"line_start":364,"line_end":364,"column_start":5,"column_end":36}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8628962,"byte_end":8628974,"line_start":365,"line_end":365,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8628979,"byte_end":8628986,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8628991,"byte_end":8628998,"line_start":367,"line_end":367,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629648,"byte_end":8629657,"line_start":388,"line_end":388,"column_start":18,"column_end":27},"name":"try_clone","qualname":"<File>::try_clone","value":"pub async fn try_clone<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Create a new `File` instance that shares the same underlying file handle\n as the existing `File` instance. Reads, writes, and seeks will affect both\n File instances simultaneously.","sig":null,"attributes":[{"value":"/ Create a new `File` instance that shares the same underlying file handle","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629152,"byte_end":8629228,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ as the existing `File` instance. Reads, writes, and seeks will affect both","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629233,"byte_end":8629311,"line_start":374,"line_end":374,"column_start":5,"column_end":83}},{"value":"/ File instances simultaneously.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629316,"byte_end":8629350,"line_start":375,"line_end":375,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629355,"byte_end":8629358,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629363,"byte_end":8629377,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629382,"byte_end":8629385,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629390,"byte_end":8629403,"line_start":379,"line_end":379,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629408,"byte_end":8629432,"line_start":380,"line_end":380,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629437,"byte_end":8629440,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629445,"byte_end":8629490,"line_start":382,"line_end":382,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629495,"byte_end":8629539,"line_start":383,"line_end":383,"column_start":5,"column_end":49}},{"value":"/ let file_clone = file.try_clone().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629544,"byte_end":8629589,"line_start":384,"line_end":384,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629594,"byte_end":8629606,"line_start":385,"line_end":385,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629611,"byte_end":8629618,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629623,"byte_end":8629630,"line_start":387,"line_end":387,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630387,"byte_end":8630395,"line_start":412,"line_end":412,"column_start":18,"column_end":26},"name":"into_std","qualname":"<File>::into_std","value":"pub async fn into_std(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Destructures `File` into a [`std::fs::File`][std]. This function is\n async to allow any in-flight operations to complete.","sig":null,"attributes":[{"value":"/ Destructures `File` into a [`std::fs::File`][std]. This function is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629836,"byte_end":8629907,"line_start":394,"line_end":394,"column_start":5,"column_end":76}},{"value":"/ async to allow any in-flight operations to complete.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629912,"byte_end":8629968,"line_start":395,"line_end":395,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629973,"byte_end":8629976,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Use `File::try_into_std` to attempt conversion immediately.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8629981,"byte_end":8630044,"line_start":397,"line_end":397,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630049,"byte_end":8630052,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630057,"byte_end":8630081,"line_start":399,"line_end":399,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630086,"byte_end":8630089,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630094,"byte_end":8630108,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630113,"byte_end":8630116,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630121,"byte_end":8630134,"line_start":403,"line_end":403,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630139,"byte_end":8630163,"line_start":404,"line_end":404,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630168,"byte_end":8630171,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630176,"byte_end":8630221,"line_start":406,"line_end":406,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630226,"byte_end":8630276,"line_start":407,"line_end":407,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.into_std().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630281,"byte_end":8630328,"line_start":408,"line_end":408,"column_start":5,"column_end":52}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630333,"byte_end":8630345,"line_start":409,"line_end":409,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630350,"byte_end":8630357,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630362,"byte_end":8630369,"line_start":411,"line_end":411,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8631109,"byte_end":8631121,"line_start":437,"line_end":437,"column_start":12,"column_end":24},"name":"try_into_std","qualname":"<File>::try_into_std","value":"pub fn try_into_std(Self) -> Result<sys::File, Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to immediately destructure `File` into a [`std::fs::File`][std].","sig":null,"attributes":[{"value":"/ Tries to immediately destructure `File` into a [`std::fs::File`][std].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630555,"byte_end":8630629,"line_start":417,"line_end":417,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630634,"byte_end":8630637,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::File","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630642,"byte_end":8630666,"line_start":419,"line_end":419,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630671,"byte_end":8630674,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630679,"byte_end":8630691,"line_start":421,"line_end":421,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630696,"byte_end":8630699,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ This function will return an error containing the file if some","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630704,"byte_end":8630770,"line_start":423,"line_end":423,"column_start":5,"column_end":71}},{"value":"/ operation is in-flight.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630775,"byte_end":8630802,"line_start":424,"line_end":424,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630807,"byte_end":8630810,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630815,"byte_end":8630829,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630834,"byte_end":8630837,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630842,"byte_end":8630855,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630860,"byte_end":8630884,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630889,"byte_end":8630892,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630897,"byte_end":8630942,"line_start":431,"line_end":431,"column_start":5,"column_end":50}},{"value":"/ let tokio_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8630947,"byte_end":8630997,"line_start":432,"line_end":432,"column_start":5,"column_end":55}},{"value":"/ let std_file = tokio_file.try_into_std().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8631002,"byte_end":8631056,"line_start":433,"line_end":433,"column_start":5,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8631061,"byte_end":8631073,"line_start":434,"line_end":434,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8631078,"byte_end":8631085,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8631090,"byte_end":8631097,"line_start":436,"line_end":436,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8632399,"byte_end":8632414,"line_start":476,"line_end":476,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"pub async fn set_permissions<'_>(&'_ Self, Permissions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the underlying file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the underlying file.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8631374,"byte_end":8631425,"line_start":447,"line_end":447,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8631430,"byte_end":8631433,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8631438,"byte_end":8631470,"line_start":449,"line_end":449,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8631475,"byte_end":8631478,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ This function currently corresponds to the `fchmod` function on Unix and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8631483,"byte_end":8631559,"line_start":451,"line_end":451,"column_start":5,"column_end":81}},{"value":"/ the `SetFileInformationByHandle` function on Windows. Note that, this","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8631564,"byte_end":8631637,"line_start":452,"line_end":452,"column_start":5,"column_end":78}},{"value":"/ [may change in the future][changes].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8631642,"byte_end":8631682,"line_start":453,"line_end":453,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8631687,"byte_end":8631690,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8631695,"byte_end":8631780,"line_start":455,"line_end":455,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8631785,"byte_end":8631788,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8631793,"byte_end":8631805,"line_start":457,"line_end":457,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8631810,"byte_end":8631813,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if the user lacks permission change","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8631818,"byte_end":8631892,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/ attributes on the underlying file. It may also return an error in other","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8631897,"byte_end":8631972,"line_start":460,"line_end":460,"column_start":5,"column_end":80}},{"value":"/ os-specific unspecified cases.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8631977,"byte_end":8632011,"line_start":461,"line_end":461,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8632016,"byte_end":8632019,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8632024,"byte_end":8632038,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8632043,"byte_end":8632046,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8632051,"byte_end":8632064,"line_start":465,"line_end":465,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8632069,"byte_end":8632093,"line_start":466,"line_end":466,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8632098,"byte_end":8632101,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8632106,"byte_end":8632151,"line_start":468,"line_end":468,"column_start":5,"column_end":50}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8632156,"byte_end":8632200,"line_start":469,"line_end":469,"column_start":5,"column_end":49}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8632205,"byte_end":8632262,"line_start":470,"line_end":470,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8632267,"byte_end":8632296,"line_start":471,"line_end":471,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8632301,"byte_end":8632340,"line_start":472,"line_end":472,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8632345,"byte_end":8632357,"line_start":473,"line_end":473,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8632362,"byte_end":8632369,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8632374,"byte_end":8632381,"line_start":475,"line_end":475,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":900},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642734,"byte_end":8642743,"line_start":41,"line_end":41,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"pub async fn hard_link<impl AsRef<Path>: AsRef<Path>,\n                       impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                      impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new hard link on the filesystem.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8641687,"byte_end":8641733,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8641734,"byte_end":8641737,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::hard_link`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8641738,"byte_end":8641797,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8641798,"byte_end":8641801,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::hard_link","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8641802,"byte_end":8641831,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8641832,"byte_end":8641835,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that systems","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8641836,"byte_end":8641915,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ often require these two paths to both be located on the same filesystem.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8641916,"byte_end":8641992,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8641993,"byte_end":8641996,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8641997,"byte_end":8642029,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642030,"byte_end":8642033,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `link` function on Unix","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642034,"byte_end":8642104,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ and the `CreateHardLink` function on Windows.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642105,"byte_end":8642154,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ Note that, this [may change in the future][changes].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642155,"byte_end":8642211,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642212,"byte_end":8642215,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642216,"byte_end":8642301,"line_start":21,"line_end":21,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642302,"byte_end":8642305,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642306,"byte_end":8642318,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642319,"byte_end":8642322,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642323,"byte_end":8642401,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642402,"byte_end":8642434,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642435,"byte_end":8642438,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * The `src` path is not a file or doesn't exist.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642439,"byte_end":8642491,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642492,"byte_end":8642495,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642496,"byte_end":8642510,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642511,"byte_end":8642514,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642515,"byte_end":8642528,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642529,"byte_end":8642547,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642548,"byte_end":8642551,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642552,"byte_end":8642570,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642571,"byte_end":8642615,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/     fs::hard_link(\"a.txt\", \"b.txt\").await?; // Hard link a.txt to b.txt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642616,"byte_end":8642691,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642692,"byte_end":8642706,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642707,"byte_end":8642712,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/hard_link.rs","byte_start":8642713,"byte_end":8642720,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":912},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8644138,"byte_end":8644146,"line_start":44,"line_end":44,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"pub async fn metadata<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Given a path, queries the file system to get information about a file,\n directory, etc.","sig":null,"attributes":[{"value":"/ Given a path, queries the file system to get information about a file,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643033,"byte_end":8643107,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ directory, etc.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643108,"byte_end":8643127,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643128,"byte_end":8643131,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::metadata`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643132,"byte_end":8643190,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643191,"byte_end":8643194,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643195,"byte_end":8643272,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ destination file.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643273,"byte_end":8643294,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643295,"byte_end":8643298,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643299,"byte_end":8643331,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643332,"byte_end":8643335,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function currently corresponds to the `stat` function on Unix and the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643336,"byte_end":8643414,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ `GetFileAttributesEx` function on Windows.  Note that, this [may change in","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643415,"byte_end":8643493,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ the future][changes].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643494,"byte_end":8643519,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643520,"byte_end":8643523,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::metadata","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643524,"byte_end":8643552,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [changes]: https://doc.rust-lang.org/std/io/index.html#platform-specific-behavior","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643553,"byte_end":8643638,"line_start":22,"line_end":22,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643639,"byte_end":8643642,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643643,"byte_end":8643655,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643656,"byte_end":8643659,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function will return an error in the following situations, but is not","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643660,"byte_end":8643738,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ limited to just these cases:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643739,"byte_end":8643771,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643772,"byte_end":8643775,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ * The user lacks permissions to perform `metadata` call on `path`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643776,"byte_end":8643846,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ * `path` does not exist.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643847,"byte_end":8643875,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643876,"byte_end":8643879,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643880,"byte_end":8643894,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643895,"byte_end":8643898,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643899,"byte_end":8643917,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643918,"byte_end":8643936,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643937,"byte_end":8643940,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643941,"byte_end":8643959,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8643960,"byte_end":8644004,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/     let attr = fs::metadata(\"/some/file/path.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8644005,"byte_end":8644067,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/     // inspect attr ...","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8644068,"byte_end":8644095,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8644096,"byte_end":8644110,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8644111,"byte_end":8644116,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/metadata.rs","byte_start":8644117,"byte_end":8644124,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1148},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646242,"byte_end":8646253,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" Options and flags which can be used to configure how a file is opened.","sig":null,"attributes":[{"value":"/ Options and flags which can be used to configure how a file is opened.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8644357,"byte_end":8644431,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8644432,"byte_end":8644435,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This builder exposes the ability to configure how a [`File`] is opened and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8644436,"byte_end":8644514,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ what operations are permitted on the open file. The [`File::open`] and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8644515,"byte_end":8644589,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ [`File::create`] methods are aliases for commonly used options using this","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8644590,"byte_end":8644667,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ builder.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8644668,"byte_end":8644680,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8644681,"byte_end":8644684,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Generally speaking, when using `OpenOptions`, you'll first call [`new`],","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8644685,"byte_end":8644761,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ then chain calls to methods to set each option, then call [`open`], passing","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8644762,"byte_end":8644841,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ the path of the file you're trying to open. This will give you a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8644842,"byte_end":8644910,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`][result] with a [`File`] inside that you can further operate","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8644911,"byte_end":8644989,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ on.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8644990,"byte_end":8644997,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8644998,"byte_end":8645001,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::OpenOptions`] for usage from","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645002,"byte_end":8645078,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ the Tokio runtime.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645079,"byte_end":8645101,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645102,"byte_end":8645105,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `From<std::fs::OpenOptions>` is implemented for more advanced configuration","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645106,"byte_end":8645185,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ than the methods provided here.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645186,"byte_end":8645221,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645222,"byte_end":8645225,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`new`]: OpenOptions::new","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645226,"byte_end":8645255,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ [`open`]: OpenOptions::open","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645256,"byte_end":8645287,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ [result]: std::io::Result","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645288,"byte_end":8645317,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ [`File`]: File","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645318,"byte_end":8645336,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ [`File::open`]: File::open","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645337,"byte_end":8645367,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ [`File::create`]: File::create","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645368,"byte_end":8645402,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::OpenOptions`]: std::fs::OpenOptions","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645403,"byte_end":8645453,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645454,"byte_end":8645457,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645458,"byte_end":8645472,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645473,"byte_end":8645476,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Opening a file to read:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645477,"byte_end":8645504,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645505,"byte_end":8645508,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645509,"byte_end":8645522,"line_start":37,"line_end":37,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645523,"byte_end":8645554,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645555,"byte_end":8645571,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645572,"byte_end":8645575,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645576,"byte_end":8645594,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645595,"byte_end":8645634,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645635,"byte_end":8645672,"line_start":43,"line_end":43,"column_start":1,"column_end":38}},{"value":"/         .read(true)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645673,"byte_end":8645696,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645697,"byte_end":8645725,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/         .await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645726,"byte_end":8645746,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645747,"byte_end":8645750,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645751,"byte_end":8645765,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645766,"byte_end":8645771,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645772,"byte_end":8645779,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645780,"byte_end":8645783,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Opening a file for both reading and writing, as well as creating it if it","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645784,"byte_end":8645861,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ doesn't exist:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645862,"byte_end":8645880,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645881,"byte_end":8645884,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645885,"byte_end":8645898,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645899,"byte_end":8645930,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645931,"byte_end":8645947,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645948,"byte_end":8645951,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645952,"byte_end":8645970,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8645971,"byte_end":8646010,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646011,"byte_end":8646048,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/         .read(true)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646049,"byte_end":8646072,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/         .write(true)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646073,"byte_end":8646097,"line_start":63,"line_end":63,"column_start":1,"column_end":25}},{"value":"/         .create(true)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646098,"byte_end":8646123,"line_start":64,"line_end":64,"column_start":1,"column_end":26}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646124,"byte_end":8646152,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/         .await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646153,"byte_end":8646173,"line_start":66,"line_end":66,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646174,"byte_end":8646177,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646178,"byte_end":8646192,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646193,"byte_end":8646198,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646199,"byte_end":8646206,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646774,"byte_end":8646777,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"pub fn new() -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank new set of options ready for configuration.","sig":null,"attributes":[{"value":"/ Creates a blank new set of options ready for configuration.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646301,"byte_end":8646364,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646369,"byte_end":8646372,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646377,"byte_end":8646422,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646427,"byte_end":8646430,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::new`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646435,"byte_end":8646501,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646506,"byte_end":8646509,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::new","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646514,"byte_end":8646550,"line_start":81,"line_end":81,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646555,"byte_end":8646558,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646563,"byte_end":8646577,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646582,"byte_end":8646585,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646590,"byte_end":8646603,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646608,"byte_end":8646639,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646644,"byte_end":8646647,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let mut options = OpenOptions::new();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646652,"byte_end":8646693,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/ let future = options.read(true).open(\"foo.txt\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646698,"byte_end":8646750,"line_start":89,"line_end":89,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646755,"byte_end":8646762,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647506,"byte_end":8647510,"line_start":120,"line_end":120,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"pub fn read(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for read access.","sig":null,"attributes":[{"value":"/ Sets the option for read access.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646857,"byte_end":8646893,"line_start":95,"line_end":95,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646898,"byte_end":8646901,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646906,"byte_end":8646971,"line_start":97,"line_end":97,"column_start":5,"column_end":70}},{"value":"/ `read`-able if opened.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646976,"byte_end":8647002,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647007,"byte_end":8647010,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::read`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647015,"byte_end":8647082,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647087,"byte_end":8647090,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::read","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647095,"byte_end":8647132,"line_start":102,"line_end":102,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647137,"byte_end":8647140,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647145,"byte_end":8647159,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647164,"byte_end":8647167,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647172,"byte_end":8647185,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647190,"byte_end":8647221,"line_start":107,"line_end":107,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647226,"byte_end":8647242,"line_start":108,"line_end":108,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647247,"byte_end":8647250,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647255,"byte_end":8647273,"line_start":110,"line_end":110,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647278,"byte_end":8647317,"line_start":111,"line_end":111,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647322,"byte_end":8647359,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/         .read(true)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647364,"byte_end":8647387,"line_start":113,"line_end":113,"column_start":5,"column_end":28}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647392,"byte_end":8647420,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647425,"byte_end":8647445,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647450,"byte_end":8647453,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647458,"byte_end":8647472,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647477,"byte_end":8647482,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647487,"byte_end":8647494,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648261,"byte_end":8648266,"line_start":150,"line_end":150,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"pub fn write(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for write access.","sig":null,"attributes":[{"value":"/ Sets the option for write access.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647607,"byte_end":8647644,"line_start":125,"line_end":125,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647649,"byte_end":8647652,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This option, when true, will indicate that the file should be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647657,"byte_end":8647722,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/ `write`-able if opened.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647727,"byte_end":8647754,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647759,"byte_end":8647762,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::write`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647767,"byte_end":8647835,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647840,"byte_end":8647843,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::write","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647848,"byte_end":8647886,"line_start":132,"line_end":132,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647891,"byte_end":8647894,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647899,"byte_end":8647913,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647918,"byte_end":8647921,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647926,"byte_end":8647939,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647944,"byte_end":8647975,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8647980,"byte_end":8647996,"line_start":138,"line_end":138,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648001,"byte_end":8648004,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648009,"byte_end":8648027,"line_start":140,"line_end":140,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648032,"byte_end":8648071,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648076,"byte_end":8648113,"line_start":142,"line_end":142,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648118,"byte_end":8648142,"line_start":143,"line_end":143,"column_start":5,"column_end":29}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648147,"byte_end":8648175,"line_start":144,"line_end":144,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648180,"byte_end":8648200,"line_start":145,"line_end":145,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648205,"byte_end":8648208,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648213,"byte_end":8648227,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648232,"byte_end":8648237,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648242,"byte_end":8648249,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650496,"byte_end":8650502,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"pub fn append(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for the append mode.","sig":null,"attributes":[{"value":"/ Sets the option for the append mode.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648366,"byte_end":8648406,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648411,"byte_end":8648414,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This option, when true, means that writes will append to a file instead","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648419,"byte_end":8648494,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ of overwriting previous contents.  Note that setting","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648499,"byte_end":8648555,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/ `.write(true).append(true)` has the same effect as setting only","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648560,"byte_end":8648627,"line_start":159,"line_end":159,"column_start":5,"column_end":72}},{"value":"/ `.append(true)`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648632,"byte_end":8648652,"line_start":160,"line_end":160,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648657,"byte_end":8648660,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ For most filesystems, the operating system guarantees that all writes are","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648665,"byte_end":8648742,"line_start":162,"line_end":162,"column_start":5,"column_end":82}},{"value":"/ atomic: no writes get mangled because another process writes at the same","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648747,"byte_end":8648823,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ time.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648828,"byte_end":8648837,"line_start":164,"line_end":164,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648842,"byte_end":8648845,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ One maybe obvious note when using append-mode: make sure that all data","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648850,"byte_end":8648924,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ that belongs together is written to the file in one operation. This","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8648929,"byte_end":8649000,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ can be done by concatenating strings before passing them to [`write()`],","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649005,"byte_end":8649081,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ or using a buffered writer (with a buffer of adequate size),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649086,"byte_end":8649150,"line_start":169,"line_end":169,"column_start":5,"column_end":69}},{"value":"/ and calling [`flush()`] when the message is complete.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649155,"byte_end":8649212,"line_start":170,"line_end":170,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649217,"byte_end":8649220,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ If a file is opened with both read and append access, beware that after","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649225,"byte_end":8649300,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ opening, and after every write, the position for reading may be set at the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649305,"byte_end":8649383,"line_start":173,"line_end":173,"column_start":5,"column_end":83}},{"value":"/ end of the file. So, before writing, save the current position (using","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649388,"byte_end":8649461,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/ [`seek`]`(`[`SeekFrom`]`::`[`Current`]`(0))`), and restore it before the next read.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649466,"byte_end":8649553,"line_start":175,"line_end":175,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649558,"byte_end":8649561,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::append`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649566,"byte_end":8649635,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649640,"byte_end":8649643,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::append","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649648,"byte_end":8649687,"line_start":179,"line_end":179,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649692,"byte_end":8649695,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649700,"byte_end":8649711,"line_start":181,"line_end":181,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649716,"byte_end":8649719,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ This function doesn't create the file if it doesn't exist. Use the [`create`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649724,"byte_end":8649805,"line_start":183,"line_end":183,"column_start":5,"column_end":86}},{"value":"/ method to do so.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649810,"byte_end":8649830,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649835,"byte_end":8649838,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`write()`]: crate::io::AsyncWriteExt::write","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649843,"byte_end":8649891,"line_start":186,"line_end":186,"column_start":5,"column_end":53}},{"value":"/ [`flush()`]: crate::io::AsyncWriteExt::flush","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649896,"byte_end":8649944,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/ [`seek`]: crate::io::AsyncSeekExt::seek","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649949,"byte_end":8649992,"line_start":188,"line_end":188,"column_start":5,"column_end":48}},{"value":"/ [`SeekFrom`]: std::io::SeekFrom","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8649997,"byte_end":8650032,"line_start":189,"line_end":189,"column_start":5,"column_end":40}},{"value":"/ [`Current`]: std::io::SeekFrom::Current","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650037,"byte_end":8650080,"line_start":190,"line_end":190,"column_start":5,"column_end":48}},{"value":"/ [`create`]: OpenOptions::create","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650085,"byte_end":8650120,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650125,"byte_end":8650128,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650133,"byte_end":8650147,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650152,"byte_end":8650155,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650160,"byte_end":8650173,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650178,"byte_end":8650209,"line_start":196,"line_end":196,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650214,"byte_end":8650230,"line_start":197,"line_end":197,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650235,"byte_end":8650238,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650243,"byte_end":8650261,"line_start":199,"line_end":199,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650266,"byte_end":8650305,"line_start":200,"line_end":200,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650310,"byte_end":8650347,"line_start":201,"line_end":201,"column_start":5,"column_end":42}},{"value":"/         .append(true)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650352,"byte_end":8650377,"line_start":202,"line_end":202,"column_start":5,"column_end":30}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650382,"byte_end":8650410,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650415,"byte_end":8650435,"line_start":204,"line_end":204,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650440,"byte_end":8650443,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650448,"byte_end":8650462,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650467,"byte_end":8650472,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650477,"byte_end":8650484,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651419,"byte_end":8651427,"line_start":242,"line_end":242,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"pub fn truncate(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for truncating a previous file.","sig":null,"attributes":[{"value":"/ Sets the option for truncating a previous file.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650605,"byte_end":8650656,"line_start":214,"line_end":214,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650661,"byte_end":8650664,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a file is successfully opened with this option set it will truncate","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650669,"byte_end":8650743,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ the file to 0 length if it already exists.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650748,"byte_end":8650794,"line_start":217,"line_end":217,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650799,"byte_end":8650802,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write access for truncate to work.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650807,"byte_end":8650874,"line_start":219,"line_end":219,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650879,"byte_end":8650882,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::truncate`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650887,"byte_end":8650958,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650963,"byte_end":8650966,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::truncate","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8650971,"byte_end":8651012,"line_start":223,"line_end":223,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651017,"byte_end":8651020,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651025,"byte_end":8651039,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651044,"byte_end":8651047,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651052,"byte_end":8651065,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651070,"byte_end":8651101,"line_start":228,"line_end":228,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651106,"byte_end":8651122,"line_start":229,"line_end":229,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651127,"byte_end":8651130,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651135,"byte_end":8651153,"line_start":231,"line_end":231,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651158,"byte_end":8651197,"line_start":232,"line_end":232,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651202,"byte_end":8651239,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651244,"byte_end":8651268,"line_start":234,"line_end":234,"column_start":5,"column_end":29}},{"value":"/         .truncate(true)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651273,"byte_end":8651300,"line_start":235,"line_end":235,"column_start":5,"column_end":32}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651305,"byte_end":8651333,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651338,"byte_end":8651358,"line_start":237,"line_end":237,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651363,"byte_end":8651366,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651371,"byte_end":8651385,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651390,"byte_end":8651395,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651400,"byte_end":8651407,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652424,"byte_end":8652430,"line_start":278,"line_end":278,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"pub fn create(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for creating a new file.","sig":null,"attributes":[{"value":"/ Sets the option for creating a new file.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651536,"byte_end":8651580,"line_start":247,"line_end":247,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651585,"byte_end":8651588,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This option indicates whether a new file will be created if the file","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651593,"byte_end":8651665,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ does not yet already exist.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651670,"byte_end":8651701,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651706,"byte_end":8651709,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ In order for the file to be created, [`write`] or [`append`] access must","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651714,"byte_end":8651790,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ be used.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651795,"byte_end":8651807,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651812,"byte_end":8651815,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::create`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651820,"byte_end":8651889,"line_start":255,"line_end":255,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651894,"byte_end":8651897,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::create","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651902,"byte_end":8651941,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/ [`write`]: OpenOptions::write","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651946,"byte_end":8651979,"line_start":258,"line_end":258,"column_start":5,"column_end":38}},{"value":"/ [`append`]: OpenOptions::append","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8651984,"byte_end":8652019,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652024,"byte_end":8652027,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652032,"byte_end":8652046,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652051,"byte_end":8652054,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652059,"byte_end":8652072,"line_start":263,"line_end":263,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652077,"byte_end":8652108,"line_start":264,"line_end":264,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652113,"byte_end":8652129,"line_start":265,"line_end":265,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652134,"byte_end":8652137,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652142,"byte_end":8652160,"line_start":267,"line_end":267,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652165,"byte_end":8652204,"line_start":268,"line_end":268,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652209,"byte_end":8652246,"line_start":269,"line_end":269,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652251,"byte_end":8652275,"line_start":270,"line_end":270,"column_start":5,"column_end":29}},{"value":"/         .create(true)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652280,"byte_end":8652305,"line_start":271,"line_end":271,"column_start":5,"column_end":30}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652310,"byte_end":8652338,"line_start":272,"line_end":272,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652343,"byte_end":8652363,"line_start":273,"line_end":273,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652368,"byte_end":8652371,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652376,"byte_end":8652390,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652395,"byte_end":8652400,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652405,"byte_end":8652412,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653829,"byte_end":8653839,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"pub fn create_new(&mut Self, bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the option to always create a new file.","sig":null,"attributes":[{"value":"/ Sets the option to always create a new file.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652533,"byte_end":8652581,"line_start":283,"line_end":283,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652586,"byte_end":8652589,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This option indicates whether a new file will be created.  No file is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652594,"byte_end":8652667,"line_start":285,"line_end":285,"column_start":5,"column_end":78}},{"value":"/ allowed to exist at the target location, also no (dangling) symlink.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652672,"byte_end":8652744,"line_start":286,"line_end":286,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652749,"byte_end":8652752,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This option is useful because it is atomic. Otherwise between checking","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652757,"byte_end":8652831,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ whether a file exists and creating a new one, the file may have been","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652836,"byte_end":8652908,"line_start":289,"line_end":289,"column_start":5,"column_end":77}},{"value":"/ created by another process (a TOCTOU race condition / attack).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652913,"byte_end":8652979,"line_start":290,"line_end":290,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652984,"byte_end":8652987,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ If `.create_new(true)` is set, [`.create()`] and [`.truncate()`] are","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8652992,"byte_end":8653064,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ ignored.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653069,"byte_end":8653081,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653086,"byte_end":8653089,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ The file must be opened with write or append access in order to create a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653094,"byte_end":8653170,"line_start":295,"line_end":295,"column_start":5,"column_end":81}},{"value":"/ new file.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653175,"byte_end":8653188,"line_start":296,"line_end":296,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653193,"byte_end":8653196,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::create_new`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653201,"byte_end":8653274,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653279,"byte_end":8653282,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::create_new","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653287,"byte_end":8653330,"line_start":300,"line_end":300,"column_start":5,"column_end":48}},{"value":"/ [`.create()`]: OpenOptions::create","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653335,"byte_end":8653373,"line_start":301,"line_end":301,"column_start":5,"column_end":43}},{"value":"/ [`.truncate()`]: OpenOptions::truncate","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653378,"byte_end":8653420,"line_start":302,"line_end":302,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653425,"byte_end":8653428,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653433,"byte_end":8653447,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653452,"byte_end":8653455,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653460,"byte_end":8653473,"line_start":306,"line_end":306,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653478,"byte_end":8653509,"line_start":307,"line_end":307,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653514,"byte_end":8653530,"line_start":308,"line_end":308,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653535,"byte_end":8653538,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653543,"byte_end":8653561,"line_start":310,"line_end":310,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653566,"byte_end":8653605,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653610,"byte_end":8653647,"line_start":312,"line_end":312,"column_start":5,"column_end":42}},{"value":"/         .write(true)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653652,"byte_end":8653676,"line_start":313,"line_end":313,"column_start":5,"column_end":29}},{"value":"/         .create_new(true)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653681,"byte_end":8653710,"line_start":314,"line_end":314,"column_start":5,"column_end":34}},{"value":"/         .open(\"foo.txt\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653715,"byte_end":8653743,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/         .await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653748,"byte_end":8653768,"line_start":316,"line_end":316,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653773,"byte_end":8653776,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653781,"byte_end":8653795,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653800,"byte_end":8653805,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653810,"byte_end":8653817,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8656291,"byte_end":8656295,"line_start":378,"line_end":378,"column_start":18,"column_end":22},"name":"open","qualname":"<OpenOptions>::open","value":"pub async fn open<'_,\n                  impl AsRef<Path>: AsRef<Path>>(&'_ Self, impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a file at `path` with the options specified by `self`.","sig":null,"attributes":[{"value":"/ Opens a file at `path` with the options specified by `self`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8653954,"byte_end":8654018,"line_start":326,"line_end":326,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654023,"byte_end":8654026,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ This is an async version of [`std::fs::OpenOptions::open`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654031,"byte_end":8654098,"line_start":328,"line_end":328,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654103,"byte_end":8654106,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ [std]: std::fs::OpenOptions::open","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654111,"byte_end":8654148,"line_start":330,"line_end":330,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654153,"byte_end":8654156,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654161,"byte_end":8654173,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654178,"byte_end":8654181,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function will return an error under a number of different","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654186,"byte_end":8654252,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/ circumstances. Some of these error conditions are listed here, together","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654257,"byte_end":8654332,"line_start":335,"line_end":335,"column_start":5,"column_end":80}},{"value":"/ with their [`ErrorKind`]. The mapping to [`ErrorKind`]s is not part of","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654337,"byte_end":8654411,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ the compatibility contract of the function, especially the `Other` kind","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654416,"byte_end":8654491,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ might change to more specific kinds in the future.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654496,"byte_end":8654550,"line_start":338,"line_end":338,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654555,"byte_end":8654558,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ * [`NotFound`]: The specified file does not exist and neither `create`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654563,"byte_end":8654637,"line_start":340,"line_end":340,"column_start":5,"column_end":79}},{"value":"/   or `create_new` is set.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654642,"byte_end":8654671,"line_start":341,"line_end":341,"column_start":5,"column_end":34}},{"value":"/ * [`NotFound`]: One of the directory components of the file path does","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654676,"byte_end":8654749,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/   not exist.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654754,"byte_end":8654770,"line_start":343,"line_end":343,"column_start":5,"column_end":21}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to get the specified","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654775,"byte_end":8654849,"line_start":344,"line_end":344,"column_start":5,"column_end":79}},{"value":"/   access rights for the file.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654854,"byte_end":8654887,"line_start":345,"line_end":345,"column_start":5,"column_end":38}},{"value":"/ * [`PermissionDenied`]: The user lacks permission to open one of the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654892,"byte_end":8654964,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/   directory components of the specified path.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8654969,"byte_end":8655018,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/ * [`AlreadyExists`]: `create_new` was specified and the file already","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655023,"byte_end":8655095,"line_start":348,"line_end":348,"column_start":5,"column_end":77}},{"value":"/   exists.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655100,"byte_end":8655113,"line_start":349,"line_end":349,"column_start":5,"column_end":18}},{"value":"/ * [`InvalidInput`]: Invalid combinations of open options (truncate","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655118,"byte_end":8655188,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/   without write access, no access mode set, etc.).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655193,"byte_end":8655247,"line_start":351,"line_end":351,"column_start":5,"column_end":59}},{"value":"/ * [`Other`]: One of the directory components of the specified file path","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655252,"byte_end":8655327,"line_start":352,"line_end":352,"column_start":5,"column_end":80}},{"value":"/   was not, in fact, a directory.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655332,"byte_end":8655368,"line_start":353,"line_end":353,"column_start":5,"column_end":41}},{"value":"/ * [`Other`]: Filesystem-level errors: full disk, write permission","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655373,"byte_end":8655442,"line_start":354,"line_end":354,"column_start":5,"column_end":74}},{"value":"/   requested on a read-only file system, exceeded disk quota, too many","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655447,"byte_end":8655520,"line_start":355,"line_end":355,"column_start":5,"column_end":78}},{"value":"/   open files, too long filename, too many symbolic links in the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655525,"byte_end":8655592,"line_start":356,"line_end":356,"column_start":5,"column_end":72}},{"value":"/   specified path (Unix-like systems only), etc.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655597,"byte_end":8655648,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655653,"byte_end":8655656,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655661,"byte_end":8655675,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655680,"byte_end":8655683,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655688,"byte_end":8655701,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::OpenOptions;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655706,"byte_end":8655737,"line_start":362,"line_end":362,"column_start":5,"column_end":36}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655742,"byte_end":8655758,"line_start":363,"line_end":363,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655763,"byte_end":8655766,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655771,"byte_end":8655789,"line_start":365,"line_end":365,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655794,"byte_end":8655833,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/     let file = OpenOptions::new().open(\"foo.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655838,"byte_end":8655899,"line_start":367,"line_end":367,"column_start":5,"column_end":66}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655904,"byte_end":8655918,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655923,"byte_end":8655928,"line_start":369,"line_end":369,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655933,"byte_end":8655940,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655945,"byte_end":8655948,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind`]: std::io::ErrorKind","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655953,"byte_end":8655990,"line_start":372,"line_end":372,"column_start":5,"column_end":42}},{"value":"/ [`AlreadyExists`]: std::io::ErrorKind::AlreadyExists","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8655995,"byte_end":8656051,"line_start":373,"line_end":373,"column_start":5,"column_end":61}},{"value":"/ [`InvalidInput`]: std::io::ErrorKind::InvalidInput","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8656056,"byte_end":8656110,"line_start":374,"line_end":374,"column_start":5,"column_end":59}},{"value":"/ [`NotFound`]: std::io::ErrorKind::NotFound","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8656115,"byte_end":8656161,"line_start":375,"line_end":375,"column_start":5,"column_end":51}},{"value":"/ [`Other`]: std::io::ErrorKind::Other","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8656166,"byte_end":8656206,"line_start":376,"line_end":376,"column_start":5,"column_end":45}},{"value":"/ [`PermissionDenied`]: std::io::ErrorKind::PermissionDenied","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8656211,"byte_end":8656273,"line_start":377,"line_end":377,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8657742,"byte_end":8657746,"line_start":421,"line_end":421,"column_start":16,"column_end":20},"name":"mode","qualname":"<OpenOptions>::mode","value":"pub fn mode(&mut Self, u32) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Sets the mode bits that a new file will be created with.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8658857,"byte_end":8658869,"line_start":453,"line_end":453,"column_start":16,"column_end":28},"name":"custom_flags","qualname":"<OpenOptions>::custom_flags","value":"pub fn custom_flags(&mut Self, i32) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Pass custom flags to the `flags` argument of `open`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":948},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8668561,"byte_end":8668565,"line_start":44,"line_end":44,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"pub async fn read<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file into a bytes vector.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file into a bytes vector.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8667237,"byte_end":8667297,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8667298,"byte_end":8667301,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8667302,"byte_end":8667356,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8667357,"byte_end":8667360,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8667361,"byte_end":8667385,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8667386,"byte_end":8667389,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for using [`File::open`] and [`read_to_end`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8667390,"byte_end":8667469,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ with fewer imports and without an intermediate variable. It pre-allocates a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8667470,"byte_end":8667549,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ buffer based on the file size when available, so it is generally faster than","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8667550,"byte_end":8667630,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ reading into a vector created with `Vec::new()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8667631,"byte_end":8667683,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8667684,"byte_end":8667687,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`File::open`]: super::File::open","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8667688,"byte_end":8667725,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/ [`read_to_end`]: crate::io::AsyncReadExt::read_to_end","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8667726,"byte_end":8667783,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8667784,"byte_end":8667787,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8667788,"byte_end":8667800,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8667801,"byte_end":8667804,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This function will return an error if `path` does not already exist.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8667805,"byte_end":8667877,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ Other errors may also be returned according to [`OpenOptions::open`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8667878,"byte_end":8667951,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8667952,"byte_end":8667955,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`OpenOptions::open`]: super::OpenOptions::open","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8667956,"byte_end":8668007,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8668008,"byte_end":8668011,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ It will also return an error if it encounters while reading an error","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8668012,"byte_end":8668084,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ of a kind other than [`ErrorKind::Interrupted`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8668085,"byte_end":8668137,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8668138,"byte_end":8668141,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`ErrorKind::Interrupted`]: std::io::ErrorKind::Interrupted","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8668142,"byte_end":8668205,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8668206,"byte_end":8668209,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8668210,"byte_end":8668224,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8668225,"byte_end":8668228,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8668229,"byte_end":8668242,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8668243,"byte_end":8668261,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/ use std::net::SocketAddr;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8668262,"byte_end":8668291,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8668292,"byte_end":8668295,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8668296,"byte_end":8668314,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error + 'static>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8668315,"byte_end":8668388,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/     let contents = fs::read(\"address.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8668389,"byte_end":8668443,"line_start":39,"line_end":39,"column_start":1,"column_end":55}},{"value":"/     let foo: SocketAddr = String::from_utf8_lossy(&contents).parse()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8668444,"byte_end":8668518,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8668519,"byte_end":8668533,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8668534,"byte_end":8668539,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read.rs","byte_start":8668540,"byte_end":8668547,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":971},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669102,"byte_end":8669110,"line_start":16,"line_end":16,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"pub async fn read_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8668954,"byte_end":8669011,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669012,"byte_end":8669015,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_dir`](std::fs::read_dir)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669016,"byte_end":8669088,"line_start":15,"line_end":15,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1159},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8670057,"byte_end":8670064,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read the the entries in a directory.","sig":null,"attributes":[{"value":"/ Read the the entries in a directory.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669304,"byte_end":8669344,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669345,"byte_end":8669348,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This struct is returned from the [`read_dir`] function of this module and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669349,"byte_end":8669426,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ will yield instances of [`DirEntry`]. Through a [`DirEntry`] information","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669427,"byte_end":8669503,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ like the entry's path and possibly other metadata can be learned.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669504,"byte_end":8669573,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669574,"byte_end":8669577,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ A `ReadDir` can be turned into a `Stream` with [`ReadDirStream`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669578,"byte_end":8669647,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669648,"byte_end":8669651,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`ReadDirStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.ReadDirStream.html","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669652,"byte_end":8669755,"line_start":31,"line_end":31,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669756,"byte_end":8669759,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669760,"byte_end":8669772,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669773,"byte_end":8669776,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This stream will return an [`Err`] if there's some sort of intermittent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669777,"byte_end":8669852,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ IO error during iteration.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669853,"byte_end":8669883,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669884,"byte_end":8669887,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: read_dir","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669888,"byte_end":8669914,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ [`DirEntry`]: DirEntry","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669915,"byte_end":8669941,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/ [`Err`]: std::result::Result::Err","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669942,"byte_end":8669979,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8669997,"byte_end":8670045,"line_start":42,"line_end":42,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8670318,"byte_end":8670328,"line_start":53,"line_end":53,"column_start":18,"column_end":28},"name":"next_entry","qualname":"<ReadDir>::next_entry","value":"pub async fn next_entry<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next entry in the directory stream.\n","sig":null,"attributes":[{"value":"/ Returns the next entry in the directory stream.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8670249,"byte_end":8670300,"line_start":52,"line_end":52,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8671362,"byte_end":8671377,"line_start":76,"line_end":76,"column_start":12,"column_end":27},"name":"poll_next_entry","qualname":"<ReadDir>::poll_next_entry","value":"pub fn poll_next_entry(&mut Self, &mut Context)\n-> Poll<io::Result<Option<DirEntry>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next directory entry in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next directory entry in the stream.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8670474,"byte_end":8670527,"line_start":58,"line_end":58,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8670532,"byte_end":8670535,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8670540,"byte_end":8670564,"line_start":60,"line_end":60,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8670569,"byte_end":8670572,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next directory entry is not yet available.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8670577,"byte_end":8670649,"line_start":62,"line_end":62,"column_start":5,"column_end":77}},{"value":"/  * `Poll::Ready(Ok(Some(entry)))` if the next directory entry is available.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8670654,"byte_end":8670733,"line_start":63,"line_end":63,"column_start":5,"column_end":84}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more directory entries in this","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8670738,"byte_end":8670815,"line_start":64,"line_end":64,"column_start":5,"column_end":82}},{"value":"/    stream.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8670820,"byte_end":8670834,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the next","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8670839,"byte_end":8670916,"line_start":66,"line_end":66,"column_start":5,"column_end":82}},{"value":"/    directory entry.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8670921,"byte_end":8670944,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8670949,"byte_end":8670952,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8670957,"byte_end":8671029,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when the next directory entry","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8671034,"byte_end":8671110,"line_start":70,"line_end":70,"column_start":5,"column_end":81}},{"value":"/ becomes available on the underlying IO resource.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8671115,"byte_end":8671167,"line_start":71,"line_end":71,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8671172,"byte_end":8671175,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_entry`, only the `Waker` from","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8671180,"byte_end":8671255,"line_start":73,"line_end":73,"column_start":5,"column_end":80}},{"value":"/ the `Context` passed to the most recent call is scheduled to receive a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8671260,"byte_end":8671334,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ wakeup.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8671339,"byte_end":8671350,"line_start":75,"line_end":75,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8672975,"byte_end":8672978,"line_start":128,"line_end":128,"column_start":16,"column_end":19},"name":"ino","qualname":"<DirEntry>::ino","value":"pub fn ino(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying `d_ino` field in the contained `dirent`\n structure.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1176},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673499,"byte_end":8673507,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::read_dir::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" Entries returned by the [`ReadDir`] stream.","sig":null,"attributes":[{"value":"/ Entries returned by the [`ReadDir`] stream.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673048,"byte_end":8673095,"line_start":134,"line_end":134,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673096,"byte_end":8673099,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ [`ReadDir`]: struct@ReadDir","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673100,"byte_end":8673131,"line_start":136,"line_end":136,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673132,"byte_end":8673135,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is a specialized version of [`std::fs::DirEntry`] for usage from the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673136,"byte_end":8673213,"line_start":138,"line_end":138,"column_start":1,"column_end":78}},{"value":"/ Tokio runtime.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673214,"byte_end":8673232,"line_start":139,"line_end":139,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673233,"byte_end":8673236,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ An instance of `DirEntry` represents an entry inside of a directory on the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673237,"byte_end":8673315,"line_start":141,"line_end":141,"column_start":1,"column_end":79}},{"value":"/ filesystem. Each entry can be inspected via methods to learn about the full","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673316,"byte_end":8673395,"line_start":142,"line_end":142,"column_start":1,"column_end":80}},{"value":"/ path or possibly other metadata through per-platform extension traits.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673396,"byte_end":8673470,"line_start":143,"line_end":143,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674339,"byte_end":8674343,"line_start":177,"line_end":177,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"pub fn path(&Self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to the file that this entry represents.","sig":null,"attributes":[{"value":"/ Returns the full path to the file that this entry represents.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673554,"byte_end":8673619,"line_start":148,"line_end":148,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673624,"byte_end":8673627,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path to `read_dir`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673632,"byte_end":8673703,"line_start":150,"line_end":150,"column_start":5,"column_end":76}},{"value":"/ with the filename of this entry.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673708,"byte_end":8673744,"line_start":151,"line_end":151,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673749,"byte_end":8673752,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673757,"byte_end":8673771,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673776,"byte_end":8673779,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673784,"byte_end":8673797,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673802,"byte_end":8673820,"line_start":156,"line_end":156,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673825,"byte_end":8673828,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673833,"byte_end":8673878,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673883,"byte_end":8673930,"line_start":159,"line_end":159,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673935,"byte_end":8673938,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673943,"byte_end":8674000,"line_start":161,"line_end":161,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674005,"byte_end":8674044,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674049,"byte_end":8674054,"line_start":163,"line_end":163,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674059,"byte_end":8674071,"line_start":164,"line_end":164,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674076,"byte_end":8674083,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674088,"byte_end":8674095,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674100,"byte_end":8674103,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This prints output like:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674108,"byte_end":8674136,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674141,"byte_end":8674144,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674149,"byte_end":8674160,"line_start":170,"line_end":170,"column_start":5,"column_end":16}},{"value":"/ \"./whatever.txt\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674165,"byte_end":8674185,"line_start":171,"line_end":171,"column_start":5,"column_end":25}},{"value":"/ \"./foo.html\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674190,"byte_end":8674206,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/ \"./hello_world.rs\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674211,"byte_end":8674233,"line_start":173,"line_end":173,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674238,"byte_end":8674245,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674250,"byte_end":8674253,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ The exact text, of course, depends on what files you have in `.`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674258,"byte_end":8674327,"line_start":176,"line_end":176,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674863,"byte_end":8674872,"line_start":198,"line_end":198,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"pub fn file_name(&Self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare file name of this directory entry without any other\n leading path component.","sig":null,"attributes":[{"value":"/ Returns the bare file name of this directory entry without any other","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674397,"byte_end":8674469,"line_start":181,"line_end":181,"column_start":5,"column_end":77}},{"value":"/ leading path component.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674474,"byte_end":8674501,"line_start":182,"line_end":182,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674506,"byte_end":8674509,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674514,"byte_end":8674528,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674533,"byte_end":8674536,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674541,"byte_end":8674548,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674553,"byte_end":8674571,"line_start":187,"line_end":187,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674576,"byte_end":8674579,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674584,"byte_end":8674629,"line_start":189,"line_end":189,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674634,"byte_end":8674681,"line_start":190,"line_end":190,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674686,"byte_end":8674689,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674694,"byte_end":8674751,"line_start":192,"line_end":192,"column_start":5,"column_end":62}},{"value":"/     println!(\"{:?}\", entry.file_name());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674756,"byte_end":8674800,"line_start":193,"line_end":193,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674805,"byte_end":8674810,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674815,"byte_end":8674827,"line_start":195,"line_end":195,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674832,"byte_end":8674839,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674844,"byte_end":8674851,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675969,"byte_end":8675977,"line_start":232,"line_end":232,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"pub async fn metadata<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the metadata for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the metadata for the file that this entry points at.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8674932,"byte_end":8674996,"line_start":202,"line_end":202,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675001,"byte_end":8675004,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675009,"byte_end":8675079,"line_start":204,"line_end":204,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675084,"byte_end":8675096,"line_start":205,"line_end":205,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675101,"byte_end":8675104,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675109,"byte_end":8675141,"line_start":207,"line_end":207,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675146,"byte_end":8675149,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ On Windows this function is cheap to call (no extra system calls","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675154,"byte_end":8675222,"line_start":209,"line_end":209,"column_start":5,"column_end":73}},{"value":"/ needed), but on Unix platforms this function is the equivalent of","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675227,"byte_end":8675296,"line_start":210,"line_end":210,"column_start":5,"column_end":74}},{"value":"/ calling `symlink_metadata` on the path.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675301,"byte_end":8675344,"line_start":211,"line_end":211,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675349,"byte_end":8675352,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675357,"byte_end":8675371,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675376,"byte_end":8675379,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675384,"byte_end":8675391,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675396,"byte_end":8675414,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675419,"byte_end":8675422,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675427,"byte_end":8675472,"line_start":218,"line_end":218,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675477,"byte_end":8675524,"line_start":219,"line_end":219,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675529,"byte_end":8675532,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675537,"byte_end":8675594,"line_start":221,"line_end":221,"column_start":5,"column_end":62}},{"value":"/     if let Ok(metadata) = entry.metadata().await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675599,"byte_end":8675653,"line_start":222,"line_end":222,"column_start":5,"column_end":59}},{"value":"/         // Now let's show our entry's permissions!","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675658,"byte_end":8675712,"line_start":223,"line_end":223,"column_start":5,"column_end":59}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), metadata.permissions());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675717,"byte_end":8675790,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/     } else {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675795,"byte_end":8675811,"line_start":225,"line_end":225,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675816,"byte_end":8675886,"line_start":226,"line_end":226,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675891,"byte_end":8675900,"line_start":227,"line_end":227,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675905,"byte_end":8675910,"line_start":228,"line_end":228,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675915,"byte_end":8675927,"line_start":229,"line_end":229,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675932,"byte_end":8675939,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8675944,"byte_end":8675951,"line_start":231,"line_end":231,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8677161,"byte_end":8677170,"line_start":267,"line_end":267,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"pub async fn file_type<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the file type for the file that this entry points at.","sig":null,"attributes":[{"value":"/ Returns the file type for the file that this entry points at.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676103,"byte_end":8676168,"line_start":237,"line_end":237,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676173,"byte_end":8676176,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symlinks if this entry points at a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676181,"byte_end":8676251,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ symlink.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676256,"byte_end":8676268,"line_start":240,"line_end":240,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676273,"byte_end":8676276,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Platform-specific behavior","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676281,"byte_end":8676313,"line_start":242,"line_end":242,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676318,"byte_end":8676321,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ On Windows and most Unix platforms this function is free (no extra","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676326,"byte_end":8676396,"line_start":244,"line_end":244,"column_start":5,"column_end":75}},{"value":"/ system calls needed), but some Unix platforms may require the equivalent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676401,"byte_end":8676477,"line_start":245,"line_end":245,"column_start":5,"column_end":81}},{"value":"/ call to `symlink_metadata` to learn about the target file type.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676482,"byte_end":8676549,"line_start":246,"line_end":246,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676554,"byte_end":8676557,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676562,"byte_end":8676576,"line_start":248,"line_end":248,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676581,"byte_end":8676584,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676589,"byte_end":8676596,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676601,"byte_end":8676619,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676624,"byte_end":8676627,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676632,"byte_end":8676677,"line_start":253,"line_end":253,"column_start":5,"column_end":50}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676682,"byte_end":8676729,"line_start":254,"line_end":254,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676734,"byte_end":8676737,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ while let Some(entry) = entries.next_entry().await? {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676742,"byte_end":8676799,"line_start":256,"line_end":256,"column_start":5,"column_end":62}},{"value":"/     if let Ok(file_type) = entry.file_type().await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676804,"byte_end":8676860,"line_start":257,"line_end":257,"column_start":5,"column_end":61}},{"value":"/         // Now let's show our entry's file type!","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676865,"byte_end":8676917,"line_start":258,"line_end":258,"column_start":5,"column_end":57}},{"value":"/         println!(\"{:?}: {:?}\", entry.path(), file_type);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676922,"byte_end":8676982,"line_start":259,"line_end":259,"column_start":5,"column_end":65}},{"value":"/     } else {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8676987,"byte_end":8677003,"line_start":260,"line_end":260,"column_start":5,"column_end":21}},{"value":"/         println!(\"Couldn't get file type for {:?}\", entry.path());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8677008,"byte_end":8677078,"line_start":261,"line_end":261,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8677083,"byte_end":8677092,"line_start":262,"line_end":262,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8677097,"byte_end":8677102,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8677107,"byte_end":8677119,"line_start":264,"line_end":264,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8677124,"byte_end":8677131,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8677136,"byte_end":8677143,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1006},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_link.rs","byte_start":8677713,"byte_end":8677722,"line_start":11,"line_end":11,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"pub async fn read_link<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_link.rs","byte_start":8677531,"byte_end":8677601,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_link.rs","byte_start":8677602,"byte_end":8677605,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::read_link`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_link.rs","byte_start":8677606,"byte_end":8677665,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_link.rs","byte_start":8677666,"byte_end":8677669,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::read_link","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_link.rs","byte_start":8677670,"byte_end":8677699,"line_start":10,"line_end":10,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":1017},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_to_string.rs","byte_start":8678430,"byte_end":8678444,"line_start":23,"line_end":23,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"pub async fn read_to_string<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will open a file for reading and read the entire\n contents into a string and return said string.","sig":null,"attributes":[{"value":"/ Creates a future which will open a file for reading and read the entire","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_to_string.rs","byte_start":8677923,"byte_end":8677998,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents into a string and return said string.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_to_string.rs","byte_start":8677999,"byte_end":8678049,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_to_string.rs","byte_start":8678050,"byte_end":8678053,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of [`std::fs::read_to_string`][std].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_to_string.rs","byte_start":8678054,"byte_end":8678123,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_to_string.rs","byte_start":8678124,"byte_end":8678127,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::read_to_string","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_to_string.rs","byte_start":8678128,"byte_end":8678165,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_to_string.rs","byte_start":8678166,"byte_end":8678169,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_to_string.rs","byte_start":8678170,"byte_end":8678184,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_to_string.rs","byte_start":8678185,"byte_end":8678188,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_to_string.rs","byte_start":8678189,"byte_end":8678202,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_to_string.rs","byte_start":8678203,"byte_end":8678221,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_to_string.rs","byte_start":8678222,"byte_end":8678225,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_to_string.rs","byte_start":8678226,"byte_end":8678271,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/ let contents = fs::read_to_string(\"foo.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_to_string.rs","byte_start":8678272,"byte_end":8678328,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"/ println!(\"foo.txt contains {} bytes\", contents.len());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_to_string.rs","byte_start":8678329,"byte_end":8678387,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_to_string.rs","byte_start":8678388,"byte_end":8678400,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_to_string.rs","byte_start":8678401,"byte_end":8678408,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_to_string.rs","byte_start":8678409,"byte_end":8678416,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1027},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/remove_dir.rs","byte_start":8678792,"byte_end":8678802,"line_start":9,"line_end":9,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"pub async fn remove_dir<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes an existing, empty directory.","sig":null,"attributes":[{"value":"/ Removes an existing, empty directory.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/remove_dir.rs","byte_start":8678656,"byte_end":8678697,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/remove_dir.rs","byte_start":8678698,"byte_end":8678701,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir`](std::fs::remove_dir)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/remove_dir.rs","byte_start":8678702,"byte_end":8678778,"line_start":8,"line_end":8,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":1037},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/remove_dir_all.rs","byte_start":8679216,"byte_end":8679230,"line_start":11,"line_end":11,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"pub async fn remove_dir_all<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory at this path, after removing all its contents. Use carefully!","sig":null,"attributes":[{"value":"/ Removes a directory at this path, after removing all its contents. Use carefully!","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/remove_dir_all.rs","byte_start":8679006,"byte_end":8679091,"line_start":6,"line_end":6,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/remove_dir_all.rs","byte_start":8679092,"byte_end":8679095,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_dir_all`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/remove_dir_all.rs","byte_start":8679096,"byte_end":8679160,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/remove_dir_all.rs","byte_start":8679161,"byte_end":8679164,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::remove_dir_all","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/remove_dir_all.rs","byte_start":8679165,"byte_end":8679202,"line_start":10,"line_end":10,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":1047},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/remove_file.rs","byte_start":8679767,"byte_end":8679778,"line_start":15,"line_end":15,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"pub async fn remove_file<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Removes a file from the filesystem.","sig":null,"attributes":[{"value":"/ Removes a file from the filesystem.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/remove_file.rs","byte_start":8679438,"byte_end":8679477,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/remove_file.rs","byte_start":8679478,"byte_end":8679481,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that there is no guarantee that the file is immediately deleted (e.g.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/remove_file.rs","byte_start":8679482,"byte_end":8679560,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ depending on platform, other open file descriptors may prevent immediate","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/remove_file.rs","byte_start":8679561,"byte_end":8679637,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ removal).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/remove_file.rs","byte_start":8679638,"byte_end":8679651,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/remove_file.rs","byte_start":8679652,"byte_end":8679655,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::remove_file`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/remove_file.rs","byte_start":8679656,"byte_end":8679717,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/remove_file.rs","byte_start":8679718,"byte_end":8679721,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [std]: std::fs::remove_file","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/remove_file.rs","byte_start":8679722,"byte_end":8679753,"line_start":14,"line_end":14,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":1057},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/rename.rs","byte_start":8680246,"byte_end":8680252,"line_start":12,"line_end":12,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"pub async fn rename<impl AsRef<Path>: AsRef<Path>,\n                    impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                   impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new name, replacing the original file if\n `to` already exists.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new name, replacing the original file if","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/rename.rs","byte_start":8679983,"byte_end":8680060,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ `to` already exists.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/rename.rs","byte_start":8680061,"byte_end":8680085,"line_start":7,"line_end":7,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/rename.rs","byte_start":8680086,"byte_end":8680089,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This will not work if the new name is on a different mount point.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/rename.rs","byte_start":8680090,"byte_end":8680159,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/rename.rs","byte_start":8680160,"byte_end":8680163,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::rename`](std::fs::rename)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/rename.rs","byte_start":8680164,"byte_end":8680232,"line_start":11,"line_end":11,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1069},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/set_permissions.rs","byte_start":8680728,"byte_end":8680743,"line_start":12,"line_end":12,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"pub async fn set_permissions<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                            Permissions)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions found on a file or a directory.","sig":null,"attributes":[{"value":"/ Changes the permissions found on a file or a directory.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/set_permissions.rs","byte_start":8680542,"byte_end":8680601,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/set_permissions.rs","byte_start":8680602,"byte_end":8680605,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::set_permissions`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/set_permissions.rs","byte_start":8680606,"byte_end":8680671,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/set_permissions.rs","byte_start":8680672,"byte_end":8680675,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::set_permissions","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/set_permissions.rs","byte_start":8680676,"byte_end":8680714,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1080},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/symlink_metadata.rs","byte_start":8681172,"byte_end":8681188,"line_start":12,"line_end":12,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"pub async fn symlink_metadata<impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Queries the file system metadata for a path.","sig":null,"attributes":[{"value":"/ Queries the file system metadata for a path.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/symlink_metadata.rs","byte_start":8680995,"byte_end":8681043,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/symlink_metadata.rs","byte_start":8681044,"byte_end":8681047,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::fs::symlink_metadata`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/symlink_metadata.rs","byte_start":8681048,"byte_end":8681114,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/symlink_metadata.rs","byte_start":8681115,"byte_end":8681118,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::symlink_metadata","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/symlink_metadata.rs","byte_start":8681119,"byte_end":8681158,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1091},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/write.rs","byte_start":8681798,"byte_end":8681803,"line_start":22,"line_end":22,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"pub async fn write<impl AsRef<Path>: AsRef<Path>,\n                   impl AsRef<[u8]>: AsRef<[u8]>>(impl AsRef<Path>,\n                                                  impl AsRef<[u8]>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that will open a file for writing and write the entire\n contents of `contents` to it.","sig":null,"attributes":[{"value":"/ Creates a future that will open a file for writing and write the entire","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/write.rs","byte_start":8681392,"byte_end":8681467,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ contents of `contents` to it.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/write.rs","byte_start":8681468,"byte_end":8681501,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/write.rs","byte_start":8681502,"byte_end":8681505,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of [`std::fs::write`][std].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/write.rs","byte_start":8681506,"byte_end":8681566,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/write.rs","byte_start":8681567,"byte_end":8681570,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::write","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/write.rs","byte_start":8681571,"byte_end":8681599,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/write.rs","byte_start":8681600,"byte_end":8681603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/write.rs","byte_start":8681604,"byte_end":8681618,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/write.rs","byte_start":8681619,"byte_end":8681622,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/write.rs","byte_start":8681623,"byte_end":8681636,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/write.rs","byte_start":8681637,"byte_end":8681655,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/write.rs","byte_start":8681656,"byte_end":8681659,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/write.rs","byte_start":8681660,"byte_end":8681705,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/ fs::write(\"foo.txt\", b\"Hello world!\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/write.rs","byte_start":8681706,"byte_end":8681755,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/write.rs","byte_start":8681756,"byte_end":8681768,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/write.rs","byte_start":8681769,"byte_end":8681776,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/write.rs","byte_start":8681777,"byte_end":8681784,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1101},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/copy.rs","byte_start":8682564,"byte_end":8682568,"line_start":23,"line_end":23,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"pub async fn copy<impl AsRef<Path>: AsRef<Path>,\n                  impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                 impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents of one file to another. This function will also copy the permission bits\n of the original file to the destination file.\n This function will overwrite the contents of to.","sig":null,"attributes":[{"value":"/ Copies the contents of one file to another. This function will also copy the permission bits","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/copy.rs","byte_start":8682076,"byte_end":8682172,"line_start":4,"line_end":4,"column_start":1,"column_end":97}},{"value":"/ of the original file to the destination file.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/copy.rs","byte_start":8682173,"byte_end":8682222,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/ This function will overwrite the contents of to.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/copy.rs","byte_start":8682223,"byte_end":8682275,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/copy.rs","byte_start":8682276,"byte_end":8682279,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is the async equivalent of [`std::fs::copy`][std].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/copy.rs","byte_start":8682280,"byte_end":8682339,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/copy.rs","byte_start":8682340,"byte_end":8682343,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [std]: fn@std::fs::copy","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/copy.rs","byte_start":8682344,"byte_end":8682371,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/copy.rs","byte_start":8682372,"byte_end":8682375,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/copy.rs","byte_start":8682376,"byte_end":8682390,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/copy.rs","byte_start":8682391,"byte_end":8682394,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/copy.rs","byte_start":8682395,"byte_end":8682408,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ use tokio::fs;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/copy.rs","byte_start":8682409,"byte_end":8682427,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/copy.rs","byte_start":8682428,"byte_end":8682431,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/copy.rs","byte_start":8682432,"byte_end":8682477,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/ fs::copy(\"foo.txt\", \"bar.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/copy.rs","byte_start":8682478,"byte_end":8682520,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/copy.rs","byte_start":8682521,"byte_end":8682533,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/copy.rs","byte_start":8682534,"byte_end":8682541,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/copy.rs","byte_start":8682542,"byte_end":8682549,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1185},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/symlink.rs","byte_start":8683090,"byte_end":8683097,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"symlink","qualname":"::fs::symlink::symlink","value":"pub async fn symlink<impl AsRef<Path>: AsRef<Path>,\n                     impl AsRef<Path>: AsRef<Path>>(impl AsRef<Path>,\n                                                    impl AsRef<Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new symbolic link on the filesystem.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/symlink.rs","byte_start":8682837,"byte_end":8682887,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/symlink.rs","byte_start":8682888,"byte_end":8682891,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a symbolic link pointing to the `src` path.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/symlink.rs","byte_start":8682892,"byte_end":8682962,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/symlink.rs","byte_start":8682963,"byte_end":8682966,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is an async version of [`std::os::unix::fs::symlink`][std]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/symlink.rs","byte_start":8682967,"byte_end":8683034,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/symlink.rs","byte_start":8683035,"byte_end":8683038,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [std]: std::os::unix::fs::symlink","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/symlink.rs","byte_start":8683039,"byte_end":8683076,"line_start":12,"line_end":12,"column_start":1,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1194},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":32363,"byte_end":32369,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":1192},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":32328,"byte_end":32358,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1197},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":32423,"byte_end":32427,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":1192},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":32380,"byte_end":32418,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1200},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":32589,"byte_end":32593,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":1192},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":32446,"byte_end":32512,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":32517,"byte_end":32584,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":1192},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":32299,"byte_end":32308,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":1194},{"krate":0,"index":1197},{"krate":0,"index":1200}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":32235,"byte_end":32272,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":89},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":32756,"byte_end":32766,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":32711,"byte_end":32748,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":33169,"byte_end":33179,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":32885,"byte_end":32970,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":32975,"byte_end":33046,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":33051,"byte_end":33124,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":33129,"byte_end":33157,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":33557,"byte_end":33568,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":33436,"byte_end":33503,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":33508,"byte_end":33531,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":33536,"byte_end":33545,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":106},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/poll_fn.rs","byte_start":34802,"byte_end":34808,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":108}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/poll_fn.rs","byte_start":34750,"byte_end":34790,"line_start":10,"line_end":10,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":111},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/poll_fn.rs","byte_start":34938,"byte_end":34945,"line_start":18,"line_end":18,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/poll_fn.rs","byte_start":34859,"byte_end":34930,"line_start":17,"line_end":17,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1223},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/ready.rs","byte_start":8683617,"byte_end":8683622,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/ready.rs","byte_start":8683388,"byte_end":8683429,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/ready.rs","byte_start":8683430,"byte_end":8683433,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/ready.rs","byte_start":8683434,"byte_end":8683511,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/ready.rs","byte_start":8683580,"byte_end":8683605,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":123},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":124},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":1324},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1547},{"krate":0,"index":1573},{"krate":0,"index":1734},{"krate":0,"index":1835},{"krate":0,"index":1846},{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":3206}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":35459,"byte_end":35536,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":35537,"byte_end":35540,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":35541,"byte_end":35612,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":35613,"byte_end":35693,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":35694,"byte_end":35768,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":35769,"byte_end":35772,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":35773,"byte_end":35803,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":35804,"byte_end":35807,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":35808,"byte_end":35888,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":35889,"byte_end":35966,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":35967,"byte_end":36044,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":36045,"byte_end":36125,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":36126,"byte_end":36204,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":36205,"byte_end":36270,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":36271,"byte_end":36274,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":36275,"byte_end":36347,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":36348,"byte_end":36415,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":36416,"byte_end":36495,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":36496,"byte_end":36570,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":36571,"byte_end":36645,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":36646,"byte_end":36663,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":36664,"byte_end":36667,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":36668,"byte_end":36732,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":36733,"byte_end":36808,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":36809,"byte_end":36884,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":36885,"byte_end":36962,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":36963,"byte_end":36966,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":36967,"byte_end":37043,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37044,"byte_end":37119,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37120,"byte_end":37200,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37201,"byte_end":37272,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37273,"byte_end":37342,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37343,"byte_end":37346,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37347,"byte_end":37419,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37420,"byte_end":37500,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37501,"byte_end":37554,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37555,"byte_end":37558,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37559,"byte_end":37572,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37573,"byte_end":37613,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37614,"byte_end":37638,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37639,"byte_end":37642,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37643,"byte_end":37661,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37662,"byte_end":37701,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37702,"byte_end":37751,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37752,"byte_end":37785,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37786,"byte_end":37789,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37790,"byte_end":37820,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37821,"byte_end":37864,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37865,"byte_end":37868,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37869,"byte_end":37919,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37920,"byte_end":37934,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37935,"byte_end":37940,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37941,"byte_end":37948,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37949,"byte_end":37952,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37953,"byte_end":37982,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":37983,"byte_end":38023,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38024,"byte_end":38060,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38061,"byte_end":38102,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38103,"byte_end":38106,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38107,"byte_end":38142,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38143,"byte_end":38146,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38147,"byte_end":38228,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38229,"byte_end":38303,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38304,"byte_end":38382,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38383,"byte_end":38427,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38428,"byte_end":38431,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38432,"byte_end":38502,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38503,"byte_end":38581,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38582,"byte_end":38660,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38661,"byte_end":38738,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38739,"byte_end":38742,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38743,"byte_end":38818,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38819,"byte_end":38857,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38858,"byte_end":38861,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38862,"byte_end":38875,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38876,"byte_end":38930,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38931,"byte_end":38955,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38956,"byte_end":38959,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38960,"byte_end":38978,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":38979,"byte_end":39018,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39019,"byte_end":39064,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39065,"byte_end":39108,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39109,"byte_end":39148,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39149,"byte_end":39152,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39153,"byte_end":39187,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39188,"byte_end":39233,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39234,"byte_end":39237,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39238,"byte_end":39269,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39270,"byte_end":39284,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39285,"byte_end":39290,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39291,"byte_end":39298,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39299,"byte_end":39302,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39303,"byte_end":39384,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39385,"byte_end":39463,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39464,"byte_end":39526,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39527,"byte_end":39530,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39531,"byte_end":39544,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39545,"byte_end":39597,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39598,"byte_end":39622,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39623,"byte_end":39626,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39627,"byte_end":39645,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39646,"byte_end":39685,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39686,"byte_end":39733,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39734,"byte_end":39743,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39744,"byte_end":39791,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39792,"byte_end":39795,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39796,"byte_end":39838,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39839,"byte_end":39880,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39881,"byte_end":39884,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39885,"byte_end":39945,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39946,"byte_end":39980,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39981,"byte_end":39984,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":39985,"byte_end":40075,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40076,"byte_end":40079,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40080,"byte_end":40094,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40095,"byte_end":40100,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40101,"byte_end":40108,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40109,"byte_end":40112,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40113,"byte_end":40158,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40159,"byte_end":40201,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40202,"byte_end":40247,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40248,"byte_end":40287,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40288,"byte_end":40327,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40328,"byte_end":40331,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40332,"byte_end":40376,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40377,"byte_end":40380,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40381,"byte_end":40463,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40464,"byte_end":40543,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40544,"byte_end":40618,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40619,"byte_end":40692,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40693,"byte_end":40753,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40754,"byte_end":40757,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40758,"byte_end":40799,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40800,"byte_end":40803,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40804,"byte_end":40872,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40873,"byte_end":40942,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":40943,"byte_end":41009,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41010,"byte_end":41073,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41074,"byte_end":41141,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41142,"byte_end":41211,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41212,"byte_end":41282,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41283,"byte_end":41361,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41362,"byte_end":41387,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41388,"byte_end":41391,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41392,"byte_end":41468,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41469,"byte_end":41472,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41473,"byte_end":41504,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41505,"byte_end":41508,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41509,"byte_end":41589,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41590,"byte_end":41666,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41667,"byte_end":41714,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41715,"byte_end":41718,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41719,"byte_end":41792,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41793,"byte_end":41869,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41870,"byte_end":41946,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41947,"byte_end":41950,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41951,"byte_end":41972,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41973,"byte_end":41996,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":41997,"byte_end":42019,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42020,"byte_end":42023,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42024,"byte_end":42046,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42047,"byte_end":42050,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42051,"byte_end":42127,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42128,"byte_end":42175,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42176,"byte_end":42179,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42180,"byte_end":42214,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42215,"byte_end":42251,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42252,"byte_end":42292,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42293,"byte_end":42335,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42336,"byte_end":42409,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Encoder.html","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42410,"byte_end":42493,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Decoder.html","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42494,"byte_end":42577,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42578,"byte_end":42605,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42606,"byte_end":42639,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42640,"byte_end":42667,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42668,"byte_end":42695,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42696,"byte_end":42727,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42728,"byte_end":42798,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.3/futures/stream/trait.Stream.html","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42799,"byte_end":42875,"line_start":181,"line_end":181,"column_start":1,"column_end":77}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":42876,"byte_end":42905,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":132},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45583,"byte_end":45595,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":44906,"byte_end":44937,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":44938,"byte_end":44941,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":44942,"byte_end":45014,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45015,"byte_end":45093,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45094,"byte_end":45180,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45181,"byte_end":45258,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45259,"byte_end":45270,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45271,"byte_end":45274,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45275,"byte_end":45343,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45344,"byte_end":45368,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45369,"byte_end":45372,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45373,"byte_end":45415,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45416,"byte_end":45466,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45467,"byte_end":45520,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45521,"byte_end":45572,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":46693,"byte_end":46706,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45613,"byte_end":45698,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45703,"byte_end":45744,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45749,"byte_end":45752,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45757,"byte_end":45804,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45809,"byte_end":45812,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45817,"byte_end":45876,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45881,"byte_end":45939,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45944,"byte_end":46025,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":46030,"byte_end":46056,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":46061,"byte_end":46064,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":46069,"byte_end":46140,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":46145,"byte_end":46207,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":46212,"byte_end":46283,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":46288,"byte_end":46369,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":46374,"byte_end":46450,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":46455,"byte_end":46506,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":46511,"byte_end":46514,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":46519,"byte_end":46590,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":46595,"byte_end":46598,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":46603,"byte_end":46642,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":46647,"byte_end":46685,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":47609,"byte_end":47616,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":46784,"byte_end":46858,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":46863,"byte_end":46930,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":46935,"byte_end":46938,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":46943,"byte_end":47014,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":47019,"byte_end":47088,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":47093,"byte_end":47167,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":47172,"byte_end":47249,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":47254,"byte_end":47324,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":47329,"byte_end":47382,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":47387,"byte_end":47390,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":47395,"byte_end":47467,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":47472,"byte_end":47494,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":47499,"byte_end":47502,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":47507,"byte_end":47546,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":47551,"byte_end":47601,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":160},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50930,"byte_end":50939,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":161}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":49243,"byte_end":49273,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":49274,"byte_end":49277,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":49278,"byte_end":49357,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":49358,"byte_end":49432,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":49433,"byte_end":49512,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":49513,"byte_end":49590,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":49591,"byte_end":49602,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":49603,"byte_end":49606,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":49607,"byte_end":49684,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":49685,"byte_end":49703,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":49704,"byte_end":49707,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(()))` means that data was immediately read and placed into","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":49708,"byte_end":49788,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   the output buffer. The amount of data read can be determined by the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":49789,"byte_end":49862,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/   increase in the length of the slice returned by `ReadBuf::filled`. If the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":49863,"byte_end":49942,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   difference is 0, EOF has been reached.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":49943,"byte_end":49987,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":49988,"byte_end":49991,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":49992,"byte_end":50057,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50058,"byte_end":50138,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50139,"byte_end":50218,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50219,"byte_end":50292,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50293,"byte_end":50366,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50367,"byte_end":50388,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50389,"byte_end":50392,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50393,"byte_end":50477,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50478,"byte_end":50502,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50503,"byte_end":50506,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50507,"byte_end":50580,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50581,"byte_end":50660,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50661,"byte_end":50664,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50665,"byte_end":50730,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50731,"byte_end":50752,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50753,"byte_end":50756,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50757,"byte_end":50796,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50797,"byte_end":50833,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50834,"byte_end":50873,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50874,"byte_end":50919,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":51429,"byte_end":51438,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":50946,"byte_end":50999,"line_start":44,"line_end":44,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":51004,"byte_end":51007,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))` and fills `buf` with data","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":51012,"byte_end":51083,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ read. If no data was read (`buf.filled().is_empty()`) it implies that","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":51088,"byte_end":51161,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ EOF has been reached.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":51166,"byte_end":51191,"line_start":48,"line_end":48,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":51196,"byte_end":51199,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns `Poll::Pending`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":51204,"byte_end":51279,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ and arranges for the current task (via `cx.waker()`) to receive a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":51284,"byte_end":51353,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ notification when the object becomes readable or is closed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":51358,"byte_end":51421,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":185},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54034,"byte_end":54043,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":53552,"byte_end":53582,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":53583,"byte_end":53586,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":53587,"byte_end":53661,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":53662,"byte_end":53732,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":53733,"byte_end":53802,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":53803,"byte_end":53806,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":53807,"byte_end":53872,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":53873,"byte_end":53894,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":53895,"byte_end":53898,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":53899,"byte_end":53935,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":53936,"byte_end":53977,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":53978,"byte_end":54023,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54685,"byte_end":54695,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, SeekFrom) -> io::Result<()>","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54050,"byte_end":54107,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54112,"byte_end":54115,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54120,"byte_end":54193,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54198,"byte_end":54224,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54229,"byte_end":54232,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54237,"byte_end":54312,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54317,"byte_end":54373,"line_start":25,"line_end":25,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54378,"byte_end":54381,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54386,"byte_end":54398,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54403,"byte_end":54406,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This function can return [`io::ErrorKind::Other`] in case there is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54411,"byte_end":54481,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ another seek in progress. To avoid this, it is advisable that any call","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54486,"byte_end":54560,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ to `start_seek` is preceded by a call to `poll_complete` to ensure all","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54565,"byte_end":54639,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pending seeks have completed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54644,"byte_end":54677,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":55218,"byte_end":55231,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":185},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54762,"byte_end":54805,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54810,"byte_end":54813,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54818,"byte_end":54867,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54872,"byte_end":54942,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`]. Repeatedly","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":54947,"byte_end":55019,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ calling this function without calling `start_seek` might return the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":55024,"byte_end":55095,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ same result.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":55100,"byte_end":55116,"line_start":41,"line_end":41,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":55121,"byte_end":55124,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":55129,"byte_end":55141,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":55146,"byte_end":55149,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":55154,"byte_end":55210,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":211},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58522,"byte_end":58532,"line_start":45,"line_end":45,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":218}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":56659,"byte_end":56691,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":56692,"byte_end":56695,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":56696,"byte_end":56778,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":56779,"byte_end":56854,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":56855,"byte_end":56922,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":56923,"byte_end":56926,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":56927,"byte_end":57007,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57008,"byte_end":57026,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57027,"byte_end":57030,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57031,"byte_end":57102,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57103,"byte_end":57117,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57118,"byte_end":57121,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57122,"byte_end":57190,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57191,"byte_end":57271,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57272,"byte_end":57351,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57352,"byte_end":57425,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57426,"byte_end":57499,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57500,"byte_end":57521,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57522,"byte_end":57525,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57526,"byte_end":57610,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57611,"byte_end":57635,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57636,"byte_end":57639,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57640,"byte_end":57722,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57723,"byte_end":57806,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57807,"byte_end":57810,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57811,"byte_end":57895,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57896,"byte_end":57980,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":57981,"byte_end":58059,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58060,"byte_end":58139,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58140,"byte_end":58201,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58202,"byte_end":58205,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58206,"byte_end":58272,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58273,"byte_end":58295,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58296,"byte_end":58299,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58300,"byte_end":58338,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58339,"byte_end":58383,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58384,"byte_end":58423,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58424,"byte_end":58463,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58464,"byte_end":58511,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58916,"byte_end":58926,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58539,"byte_end":58593,"line_start":46,"line_end":46,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58598,"byte_end":58601,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58606,"byte_end":58667,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58672,"byte_end":58675,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58680,"byte_end":58742,"line_start":50,"line_end":50,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58747,"byte_end":58805,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58810,"byte_end":58877,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":58882,"byte_end":58908,"line_start":53,"line_end":53,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":59467,"byte_end":59477,"line_start":69,"line_end":69,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":59054,"byte_end":59125,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":59130,"byte_end":59152,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":59157,"byte_end":59160,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":59165,"byte_end":59211,"line_start":63,"line_end":63,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":59216,"byte_end":59219,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":59224,"byte_end":59288,"line_start":65,"line_end":65,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":59293,"byte_end":59351,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":59356,"byte_end":59424,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":59429,"byte_end":59459,"line_start":68,"line_end":68,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62763,"byte_end":62776,"line_start":129,"line_end":129,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":59559,"byte_end":59633,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":59638,"byte_end":59686,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":59691,"byte_end":59694,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":59699,"byte_end":59770,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":59775,"byte_end":59851,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":59856,"byte_end":59932,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":59937,"byte_end":60012,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":60017,"byte_end":60088,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":60093,"byte_end":60169,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":60174,"byte_end":60202,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":60207,"byte_end":60210,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":60215,"byte_end":60276,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":60281,"byte_end":60352,"line_start":83,"line_end":83,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":60357,"byte_end":60429,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":60434,"byte_end":60509,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":60514,"byte_end":60587,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":60592,"byte_end":60667,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":60672,"byte_end":60744,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":60749,"byte_end":60760,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":60765,"byte_end":60768,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":60773,"byte_end":60847,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":60852,"byte_end":60924,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":60929,"byte_end":60998,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":61003,"byte_end":61071,"line_start":94,"line_end":94,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":61076,"byte_end":61137,"line_start":95,"line_end":95,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":61142,"byte_end":61145,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":61150,"byte_end":61168,"line_start":97,"line_end":97,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":61173,"byte_end":61176,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":61181,"byte_end":61251,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":61256,"byte_end":61259,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":61264,"byte_end":61327,"line_start":101,"line_end":101,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":61332,"byte_end":61401,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":61406,"byte_end":61481,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":61486,"byte_end":61559,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":61564,"byte_end":61615,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":61620,"byte_end":61623,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":61628,"byte_end":61698,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":61703,"byte_end":61778,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":61783,"byte_end":61855,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":61860,"byte_end":61930,"line_start":110,"line_end":110,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":61935,"byte_end":62010,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62015,"byte_end":62018,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62023,"byte_end":62104,"line_start":113,"line_end":113,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62109,"byte_end":62184,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62189,"byte_end":62256,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62261,"byte_end":62264,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62269,"byte_end":62281,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62286,"byte_end":62289,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62294,"byte_end":62365,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62370,"byte_end":62436,"line_start":120,"line_end":120,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62441,"byte_end":62515,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62520,"byte_end":62584,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62589,"byte_end":62628,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62633,"byte_end":62636,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62641,"byte_end":62653,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62658,"byte_end":62661,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62666,"byte_end":62741,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62746,"byte_end":62755,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63889,"byte_end":63908,"line_start":154,"line_end":154,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"::io::async_write::AsyncWrite::poll_write_vectored","value":"pub fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Like [`poll_write`], except that it writes from a slice of buffers.","sig":null,"attributes":[{"value":"/ Like [`poll_write`], except that it writes from a slice of buffers.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62858,"byte_end":62929,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62934,"byte_end":62937,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Data is copied from each buffer in order, with the final buffer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":62942,"byte_end":63009,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ read from possibly being only partially consumed. This method must","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63014,"byte_end":63084,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/ behave as a call to [`write`] with the buffers concatenated would.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63089,"byte_end":63159,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63164,"byte_end":63167,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ The default implementation calls [`poll_write`] with either the first nonempty","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63172,"byte_end":63254,"line_start":137,"line_end":137,"column_start":5,"column_end":87}},{"value":"/ buffer provided, or an empty one if none exists.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63259,"byte_end":63311,"line_start":138,"line_end":138,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63316,"byte_end":63319,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63324,"byte_end":63385,"line_start":140,"line_end":140,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63390,"byte_end":63393,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63398,"byte_end":63460,"line_start":142,"line_end":142,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63465,"byte_end":63523,"line_start":143,"line_end":143,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63528,"byte_end":63595,"line_start":144,"line_end":144,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63600,"byte_end":63626,"line_start":145,"line_end":145,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63631,"byte_end":63634,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63639,"byte_end":63649,"line_start":147,"line_end":147,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63654,"byte_end":63657,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This should be implemented as a single \"atomic\" write action. If any","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63662,"byte_end":63734,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ data has been partially written, it is wrong to return an error or","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63739,"byte_end":63809,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"/ pending.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63814,"byte_end":63826,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63831,"byte_end":63834,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":63839,"byte_end":63881,"line_start":153,"line_end":153,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":64676,"byte_end":64693,"line_start":176,"line_end":176,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"::io::async_write::AsyncWrite::is_write_vectored","value":"pub fn is_write_vectored(&Self) -> bool","parent":{"krate":0,"index":211},"children":[],"decl_id":null,"docs":" Determines if this writer has an efficient [`poll_write_vectored`]\n implementation.","sig":null,"attributes":[{"value":"/ Determines if this writer has an efficient [`poll_write_vectored`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":64206,"byte_end":64276,"line_start":166,"line_end":166,"column_start":5,"column_end":75}},{"value":"/ implementation.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":64281,"byte_end":64300,"line_start":167,"line_end":167,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":64305,"byte_end":64308,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ If a writer does not override the default [`poll_write_vectored`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":64313,"byte_end":64382,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/ implementation, code using it may want to avoid the method all together","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":64387,"byte_end":64462,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ and coalesce writes into a single buffer for higher performance.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":64467,"byte_end":64535,"line_start":171,"line_end":171,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":64540,"byte_end":64543,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns `false`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":64548,"byte_end":64595,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":64600,"byte_end":64603,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_vectored`]: AsyncWrite::poll_write_vectored","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":64608,"byte_end":64668,"line_start":175,"line_end":175,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":267},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":71933,"byte_end":71940,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"ReadBuf","qualname":"::io::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271}],"decl_id":null,"docs":" A wrapper around a byte buffer that is incrementally filled and initialized.","sig":null,"attributes":[{"value":"/ A wrapper around a byte buffer that is incrementally filled and initialized.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":70985,"byte_end":71065,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":71066,"byte_end":71069,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a sort of \"double cursor\". It tracks three regions in the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":71070,"byte_end":71144,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ buffer: a region at the beginning of the buffer that has been logically","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":71145,"byte_end":71220,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ filled with data, a region that has been initialized at some point but not","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":71221,"byte_end":71299,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ yet logically filled, and a region at the end that may be uninitialized.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":71300,"byte_end":71376,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ The filled region is guaranteed to be a subset of the initialized region.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":71377,"byte_end":71454,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":71455,"byte_end":71458,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ In summary, the contents of the buffer can be visualized as:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":71459,"byte_end":71523,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":71524,"byte_end":71527,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```not_rust","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":71528,"byte_end":71543,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/ [             capacity              ]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":71544,"byte_end":71585,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ [ filled |         unfilled         ]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":71586,"byte_end":71627,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ [    initialized    | uninitialized ]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":71628,"byte_end":71669,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":71670,"byte_end":71677,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":71678,"byte_end":71681,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ It is undefined behavior to de-initialize any bytes from the uninitialized","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":71682,"byte_end":71760,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ region, since it is merely unknown whether this region is uninitialized or","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":71761,"byte_end":71839,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ not, and if part of it turns out to be initialized, it must stay initialized.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":71840,"byte_end":71921,"line_start":26,"line_end":26,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":72142,"byte_end":72145,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuf>::new","value":"pub fn new(&'a mut [u8]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully initialized buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully initialized buffer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":72056,"byte_end":72116,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":72121,"byte_end":72130,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":72591,"byte_end":72597,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"uninit","qualname":"<ReadBuf>::uninit","value":"pub fn uninit(&'a mut [MaybeUninit<u8>]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully uninitialized buffer.","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully uninitialized buffer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":72410,"byte_end":72472,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":72477,"byte_end":72480,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Use `assume_init` if part of the buffer is known to be already inintialized.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":72485,"byte_end":72565,"line_start":48,"line_end":48,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":72570,"byte_end":72579,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":72825,"byte_end":72833,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ReadBuf>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total capacity of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns the total capacity of the buffer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":72754,"byte_end":72799,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":72804,"byte_end":72813,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":72979,"byte_end":72985,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"filled","qualname":"<ReadBuf>::filled","value":"pub fn filled(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the filled portion of the buffer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":72886,"byte_end":72953,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":72958,"byte_end":72967,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":73439,"byte_end":73449,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"filled_mut","qualname":"<ReadBuf>::filled_mut","value":"pub fn filled_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the filled portion of the buffer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":73345,"byte_end":73413,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":73418,"byte_end":73427,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":73927,"byte_end":73931,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"take","qualname":"<ReadBuf>::take","value":"pub fn take(&mut Self, usize) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ReadBuf` comprised of the unfilled section up to `n`.\n","sig":null,"attributes":[{"value":"/ Returns a new `ReadBuf` comprised of the unfilled section up to `n`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":73829,"byte_end":73901,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":73906,"byte_end":73915,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":74337,"byte_end":74348,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"initialized","qualname":"<ReadBuf>::initialized","value":"pub fn initialized(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the initialized portion of the buffer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":74189,"byte_end":74261,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":74266,"byte_end":74269,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":74274,"byte_end":74311,"line_start":94,"line_end":94,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":74316,"byte_end":74325,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":74860,"byte_end":74875,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"initialized_mut","qualname":"<ReadBuf>::initialized_mut","value":"pub fn initialized_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the initialized portion of the buffer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":74711,"byte_end":74784,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":74789,"byte_end":74792,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":74797,"byte_end":74834,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":74839,"byte_end":74848,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":76098,"byte_end":76107,"line_start":131,"line_end":131,"column_start":19,"column_end":28},"name":"inner_mut","qualname":"<ReadBuf>::inner_mut","value":"pub unsafe fn inner_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the entire buffer, without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the entire buffer, without ensuring that it has been fully","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":75258,"byte_end":75351,"line_start":116,"line_end":116,"column_start":5,"column_end":98}},{"value":"/ initialized.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":75356,"byte_end":75372,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":75377,"byte_end":75380,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The elements between 0 and `self.filled().len()` are filled, and those between 0 and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":75385,"byte_end":75473,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/ `self.initialized().len()` are initialized (and so can be transmuted to a `&mut [u8]`).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":75478,"byte_end":75569,"line_start":120,"line_end":120,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":75574,"byte_end":75577,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ The caller of this method must ensure that these invariants are upheld. For example, if the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":75582,"byte_end":75677,"line_start":122,"line_end":122,"column_start":5,"column_end":100}},{"value":"/ caller initializes some of the uninitialized section of the buffer, it must call","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":75682,"byte_end":75766,"line_start":123,"line_end":123,"column_start":5,"column_end":89}},{"value":"/ [`assume_init`](Self::assume_init) with the number of bytes initialized.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":75771,"byte_end":75847,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":75852,"byte_end":75855,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":75860,"byte_end":75872,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":75877,"byte_end":75880,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":75885,"byte_end":75981,"line_start":128,"line_end":128,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":75986,"byte_end":76065,"line_start":129,"line_end":129,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":76070,"byte_end":76079,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":76553,"byte_end":76565,"line_start":143,"line_end":143,"column_start":19,"column_end":31},"name":"unfilled_mut","qualname":"<ReadBuf>::unfilled_mut","value":"pub unsafe fn unfilled_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":76175,"byte_end":76281,"line_start":135,"line_end":135,"column_start":5,"column_end":111}},{"value":"/ initialized.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":76286,"byte_end":76302,"line_start":136,"line_end":136,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":76307,"byte_end":76310,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":76315,"byte_end":76327,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":76332,"byte_end":76335,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":76340,"byte_end":76436,"line_start":140,"line_end":140,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":76441,"byte_end":76520,"line_start":141,"line_end":141,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":76525,"byte_end":76534,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":76927,"byte_end":76946,"line_start":152,"line_end":152,"column_start":12,"column_end":31},"name":"initialize_unfilled","qualname":"<ReadBuf>::initialize_unfilled","value":"pub fn initialize_unfilled(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":76653,"byte_end":76754,"line_start":147,"line_end":147,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":76759,"byte_end":76762,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Since `ReadBuf` tracks the region of the buffer that has been initialized, this is effectively \"free\" after","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":76767,"byte_end":76878,"line_start":149,"line_end":149,"column_start":5,"column_end":116}},{"value":"/ the first use.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":76883,"byte_end":76901,"line_start":150,"line_end":150,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":76906,"byte_end":76915,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":77284,"byte_end":77306,"line_start":163,"line_end":163,"column_start":12,"column_end":34},"name":"initialize_unfilled_to","qualname":"<ReadBuf>::initialize_unfilled_to","value":"pub fn initialize_unfilled_to(&mut Self, usize) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is\n fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":77038,"byte_end":77143,"line_start":156,"line_end":156,"column_start":5,"column_end":110}},{"value":"/ fully initialized.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":77148,"byte_end":77170,"line_start":157,"line_end":157,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":77175,"byte_end":77178,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":77183,"byte_end":77195,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":77200,"byte_end":77203,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `n`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":77208,"byte_end":77258,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":77263,"byte_end":77272,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":78151,"byte_end":78160,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"remaining","qualname":"<ReadBuf>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes at the end of the slice that have not yet been filled.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes at the end of the slice that have not yet been filled.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":78039,"byte_end":78125,"line_start":184,"line_end":184,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":78130,"byte_end":78139,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":78427,"byte_end":78432,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"clear","qualname":"<ReadBuf>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, resetting the filled region to empty.","sig":null,"attributes":[{"value":"/ Clears the buffer, resetting the filled region to empty.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":78228,"byte_end":78288,"line_start":190,"line_end":190,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":78293,"byte_end":78296,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed, and the contents of the buffer are not modified.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":78301,"byte_end":78401,"line_start":192,"line_end":192,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":78406,"byte_end":78415,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":78761,"byte_end":78768,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"advance","qualname":"<ReadBuf>::advance","value":"pub fn advance(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Advances the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Advances the size of the filled region of the buffer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":78482,"byte_end":78539,"line_start":198,"line_end":198,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":78544,"byte_end":78547,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":78552,"byte_end":78603,"line_start":200,"line_end":200,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":78608,"byte_end":78611,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":78616,"byte_end":78628,"line_start":202,"line_end":202,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":78633,"byte_end":78636,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":78641,"byte_end":78735,"line_start":204,"line_end":204,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":78740,"byte_end":78749,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":79378,"byte_end":79388,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"set_filled","qualname":"<ReadBuf>::set_filled","value":"pub fn set_filled(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Sets the size of the filled region of the buffer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":78905,"byte_end":78958,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":78963,"byte_end":78966,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":78971,"byte_end":79022,"line_start":213,"line_end":213,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":79027,"byte_end":79030,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that this can be used to *shrink* the filled region of the buffer in addition to growing it (for","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":79035,"byte_end":79140,"line_start":215,"line_end":215,"column_start":5,"column_end":110}},{"value":"/ example, by a `AsyncRead` implementation that compresses data in-place).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":79145,"byte_end":79221,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":79226,"byte_end":79229,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":79234,"byte_end":79246,"line_start":218,"line_end":218,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":79251,"byte_end":79254,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the intialized region.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":79259,"byte_end":79352,"line_start":220,"line_end":220,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":79357,"byte_end":79366,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":79992,"byte_end":80003,"line_start":239,"line_end":239,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ReadBuf>::assume_init","value":"pub unsafe fn assume_init(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Asserts that the first `n` unfilled bytes of the buffer are initialized.","sig":null,"attributes":[{"value":"/ Asserts that the first `n` unfilled bytes of the buffer are initialized.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":79572,"byte_end":79648,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":79653,"byte_end":79656,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ `ReadBuf` assumes that bytes are never de-initialized, so this method does nothing when called with fewer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":79661,"byte_end":79770,"line_start":232,"line_end":232,"column_start":5,"column_end":114}},{"value":"/ bytes than are already known to be initialized.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":79775,"byte_end":79826,"line_start":233,"line_end":233,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":79831,"byte_end":79834,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":79839,"byte_end":79851,"line_start":235,"line_end":235,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":79856,"byte_end":79859,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `n` unfilled bytes of the buffer have already been initialized.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":79864,"byte_end":79959,"line_start":237,"line_end":237,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":79964,"byte_end":79973,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":80383,"byte_end":80392,"line_start":252,"line_end":252,"column_start":12,"column_end":21},"name":"put_slice","qualname":"<ReadBuf>::put_slice","value":"pub fn put_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Appends data to the buffer, advancing the written position and possibly also the initialized position.","sig":null,"attributes":[{"value":"/ Appends data to the buffer, advancing the written position and possibly also the initialized position.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":80155,"byte_end":80261,"line_start":246,"line_end":246,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":80266,"byte_end":80269,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":80274,"byte_end":80286,"line_start":248,"line_end":248,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":80291,"byte_end":80294,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `buf.len()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":80299,"byte_end":80357,"line_start":250,"line_end":250,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":80362,"byte_end":80371,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1574},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702097,"byte_end":8702105,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"Interest","qualname":"::io::driver::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Readiness event interest","sig":null,"attributes":[{"value":"/ Readiness event interest","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8701853,"byte_end":8701881,"line_start":8,"line_end":8,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8701882,"byte_end":8701885,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Specifies the readiness events the caller is interested in when awaiting on","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8701886,"byte_end":8701965,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ I/O resource readiness states.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8701966,"byte_end":8702000,"line_start":11,"line_end":11,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":1330},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702257,"byte_end":8702265,"line_start":20,"line_end":20,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::io::driver::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Interest in all readable events.","sig":null,"attributes":[{"value":"/ Interest in all readable events.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702143,"byte_end":8702179,"line_start":17,"line_end":17,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702184,"byte_end":8702187,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Readable interest includes read-closed events.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702192,"byte_end":8702242,"line_start":19,"line_end":19,"column_start":5,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":1331},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702432,"byte_end":8702440,"line_start":25,"line_end":25,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::io::driver::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":1329},"children":[],"decl_id":null,"docs":" Interest in all writable events","sig":null,"attributes":[{"value":"/ Interest in all writable events","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702318,"byte_end":8702353,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702358,"byte_end":8702361,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Writable interest includes write-closed events.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702366,"byte_end":8702417,"line_start":24,"line_end":24,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702876,"byte_end":8702887,"line_start":40,"line_end":40,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"pub const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable interest.","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable interest.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702493,"byte_end":8702550,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702555,"byte_end":8702558,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702563,"byte_end":8702577,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702582,"byte_end":8702585,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702590,"byte_end":8702597,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702602,"byte_end":8702630,"line_start":32,"line_end":32,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702635,"byte_end":8702638,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ assert!(Interest::READABLE.is_readable());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702643,"byte_end":8702689,"line_start":34,"line_end":34,"column_start":5,"column_end":51}},{"value":"/ assert!(!Interest::WRITABLE.is_readable());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702694,"byte_end":8702741,"line_start":35,"line_end":35,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702746,"byte_end":8702749,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let both = Interest::READABLE | Interest::WRITABLE;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702754,"byte_end":8702809,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/ assert!(both.is_readable());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702814,"byte_end":8702846,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702851,"byte_end":8702858,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703327,"byte_end":8703338,"line_start":57,"line_end":57,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"pub const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable interest.","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable interest.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702944,"byte_end":8703001,"line_start":44,"line_end":44,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703006,"byte_end":8703009,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703014,"byte_end":8703028,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703033,"byte_end":8703036,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703041,"byte_end":8703048,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703053,"byte_end":8703081,"line_start":49,"line_end":49,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703086,"byte_end":8703089,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ assert!(!Interest::READABLE.is_writable());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703094,"byte_end":8703141,"line_start":51,"line_end":51,"column_start":5,"column_end":52}},{"value":"/ assert!(Interest::WRITABLE.is_writable());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703146,"byte_end":8703192,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703197,"byte_end":8703200,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let both = Interest::READABLE | Interest::WRITABLE;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703205,"byte_end":8703260,"line_start":54,"line_end":54,"column_start":5,"column_end":60}},{"value":"/ assert!(both.is_writable());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703265,"byte_end":8703297,"line_start":55,"line_end":55,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703302,"byte_end":8703309,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1334},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703756,"byte_end":8703759,"line_start":74,"line_end":74,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"pub const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interst` values.","sig":null,"attributes":[{"value":"/ Add together two `Interst` values.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703395,"byte_end":8703433,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703438,"byte_end":8703441,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function works from a `const` context.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703446,"byte_end":8703493,"line_start":63,"line_end":63,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703498,"byte_end":8703501,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703506,"byte_end":8703520,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703525,"byte_end":8703528,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703533,"byte_end":8703540,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703545,"byte_end":8703573,"line_start":68,"line_end":68,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703578,"byte_end":8703581,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ const BOTH: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703586,"byte_end":8703656,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703661,"byte_end":8703664,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ assert!(BOTH.is_readable());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703669,"byte_end":8703701,"line_start":72,"line_end":72,"column_start":5,"column_end":37}},{"value":"/ assert!(BOTH.is_writable());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8703706,"byte_end":8703738,"line_start":73,"line_end":73,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1587},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8705137,"byte_end":8705142,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Ready","qualname":"::io::driver::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Describes the readiness state of an I/O resources.","sig":null,"attributes":[{"value":"/ Describes the readiness state of an I/O resources.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8704902,"byte_end":8704956,"line_start":11,"line_end":11,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8704957,"byte_end":8704960,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `Ready` tracks which operation an I/O resource is ready to perform.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8704961,"byte_end":8705032,"line_start":13,"line_end":13,"column_start":1,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":1353},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8705218,"byte_end":8705223,"line_start":20,"line_end":20,"column_start":15,"column_end":20},"name":"EMPTY","qualname":"::io::driver::ready::Ready::EMPTY","value":"Ready","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" Returns the empty `Ready` set.\n","sig":null,"attributes":[{"value":"/ Returns the empty `Ready` set.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8705169,"byte_end":8705203,"line_start":19,"line_end":19,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":1354},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8705317,"byte_end":8705325,"line_start":23,"line_end":23,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::io::driver::ready::Ready::READABLE","value":"Ready","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing readable readiness.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8705248,"byte_end":8705302,"line_start":22,"line_end":22,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":1355},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8705426,"byte_end":8705434,"line_start":26,"line_end":26,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::io::driver::ready::Ready::WRITABLE","value":"Ready","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing writable readiness.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8705357,"byte_end":8705411,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":1356},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8705538,"byte_end":8705549,"line_start":29,"line_end":29,"column_start":15,"column_end":26},"name":"READ_CLOSED","qualname":"::io::driver::ready::Ready::READ_CLOSED","value":"Ready","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing read closed readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing read closed readiness.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8705466,"byte_end":8705523,"line_start":28,"line_end":28,"column_start":5,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":1357},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8705657,"byte_end":8705669,"line_start":32,"line_end":32,"column_start":15,"column_end":27},"name":"WRITE_CLOSED","qualname":"::io::driver::ready::Ready::WRITE_CLOSED","value":"Ready","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing write closed readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing write closed readiness.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8705584,"byte_end":8705642,"line_start":31,"line_end":31,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":1358},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8705784,"byte_end":8705787,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"ALL","qualname":"::io::driver::ready::Ready::ALL","value":"Ready","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing readiness for all operations.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing readiness for all operations.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8705705,"byte_end":8705769,"line_start":34,"line_end":34,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706644,"byte_end":8706652,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Ready>::is_empty","value":"pub fn is_empty(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Ready` is the empty set","sig":null,"attributes":[{"value":"/ Returns true if `Ready` is the empty set","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706403,"byte_end":8706447,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706452,"byte_end":8706455,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706460,"byte_end":8706474,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706479,"byte_end":8706482,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706487,"byte_end":8706494,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706499,"byte_end":8706524,"line_start":65,"line_end":65,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706529,"byte_end":8706532,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ assert!(Ready::EMPTY.is_empty());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706537,"byte_end":8706574,"line_start":67,"line_end":67,"column_start":5,"column_end":42}},{"value":"/ assert!(!Ready::READABLE.is_empty());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706579,"byte_end":8706620,"line_start":68,"line_end":68,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706625,"byte_end":8706632,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707063,"byte_end":8707074,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Ready>::is_readable","value":"pub fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes `readable`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes `readable`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706709,"byte_end":8706760,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706765,"byte_end":8706768,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706773,"byte_end":8706787,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706792,"byte_end":8706795,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706800,"byte_end":8706807,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706812,"byte_end":8706837,"line_start":79,"line_end":79,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706842,"byte_end":8706845,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_readable());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706850,"byte_end":8706891,"line_start":81,"line_end":81,"column_start":5,"column_end":46}},{"value":"/ assert!(Ready::READABLE.is_readable());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706896,"byte_end":8706939,"line_start":82,"line_end":82,"column_start":5,"column_end":48}},{"value":"/ assert!(Ready::READ_CLOSED.is_readable());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706944,"byte_end":8706990,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/ assert!(!Ready::WRITABLE.is_readable());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8706995,"byte_end":8707039,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707044,"byte_end":8707051,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707531,"byte_end":8707542,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Ready>::is_writable","value":"pub fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes writable `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes writable `readiness`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707166,"byte_end":8707227,"line_start":90,"line_end":90,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707232,"byte_end":8707235,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707240,"byte_end":8707254,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707259,"byte_end":8707262,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707267,"byte_end":8707274,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707279,"byte_end":8707304,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707309,"byte_end":8707312,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_writable());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707317,"byte_end":8707358,"line_start":97,"line_end":97,"column_start":5,"column_end":46}},{"value":"/ assert!(!Ready::READABLE.is_writable());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707363,"byte_end":8707407,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/ assert!(Ready::WRITABLE.is_writable());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707412,"byte_end":8707455,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"/ assert!(Ready::WRITE_CLOSED.is_writable());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707460,"byte_end":8707507,"line_start":100,"line_end":100,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707512,"byte_end":8707519,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707963,"byte_end":8707977,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Ready>::is_read_closed","value":"pub fn is_read_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes read-closed `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes read-closed `readiness`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707635,"byte_end":8707699,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707704,"byte_end":8707707,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707712,"byte_end":8707726,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707731,"byte_end":8707734,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707739,"byte_end":8707746,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707751,"byte_end":8707776,"line_start":111,"line_end":111,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707781,"byte_end":8707784,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_read_closed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707789,"byte_end":8707833,"line_start":113,"line_end":113,"column_start":5,"column_end":49}},{"value":"/ assert!(!Ready::READABLE.is_read_closed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707838,"byte_end":8707885,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/ assert!(Ready::READ_CLOSED.is_read_closed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707890,"byte_end":8707939,"line_start":115,"line_end":115,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8707944,"byte_end":8707951,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8708380,"byte_end":8708395,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Ready>::is_write_closed","value":"pub fn is_write_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes write-closed `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes write-closed `readiness`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8708047,"byte_end":8708112,"line_start":121,"line_end":121,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8708117,"byte_end":8708120,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8708125,"byte_end":8708139,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8708144,"byte_end":8708147,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8708152,"byte_end":8708159,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8708164,"byte_end":8708189,"line_start":126,"line_end":126,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8708194,"byte_end":8708197,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_write_closed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8708202,"byte_end":8708247,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"/ assert!(!Ready::WRITABLE.is_write_closed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8708252,"byte_end":8708300,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/ assert!(Ready::WRITE_CLOSED.is_write_closed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8708305,"byte_end":8708356,"line_start":130,"line_end":130,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8708361,"byte_end":8708368,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1748},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8752138,"byte_end":8752145,"line_start":137,"line_end":137,"column_start":12,"column_end":19},"name":"AsyncFd","qualname":"::io::async_fd::AsyncFd","value":"AsyncFd {  }","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1751}],"decl_id":null,"docs":" Associates an IO object backed by a Unix file descriptor with the tokio\n reactor, allowing for readiness to be polled. The file descriptor must be of\n a type that can be used with the OS polling facilities (ie, `poll`, `epoll`,\n `kqueue`, etc), such as a network socket or pipe.","sig":null,"attributes":[{"value":"/ Associates an IO object backed by a Unix file descriptor with the tokio","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8746772,"byte_end":8746847,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ reactor, allowing for readiness to be polled. The file descriptor must be of","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8746848,"byte_end":8746928,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ a type that can be used with the OS polling facilities (ie, `poll`, `epoll`,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8746929,"byte_end":8747009,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ `kqueue`, etc), such as a network socket or pipe.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8747010,"byte_end":8747063,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8747064,"byte_end":8747067,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Creating an AsyncFd registers the file descriptor with the current tokio","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8747068,"byte_end":8747144,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ Reactor, allowing you to directly await the file descriptor being readable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8747145,"byte_end":8747223,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ or writable. Once registered, the file descriptor remains registered until","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8747224,"byte_end":8747302,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ the AsyncFd is dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8747303,"byte_end":8747330,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8747331,"byte_end":8747334,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The AsyncFd takes ownership of an arbitrary object to represent the IO","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8747335,"byte_end":8747409,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ object. It is intended that this object will handle closing the file","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8747410,"byte_end":8747482,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ descriptor when it is dropped, avoiding resource leaks and ensuring that the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8747483,"byte_end":8747563,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ AsyncFd can clean up the registration before closing the file descriptor.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8747564,"byte_end":8747641,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ The [`AsyncFd::into_inner`] function can be used to extract the inner object","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8747642,"byte_end":8747722,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ to retake control from the tokio IO reactor.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8747723,"byte_end":8747771,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8747772,"byte_end":8747775,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The inner object is required to implement [`AsRawFd`]. This file descriptor","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8747776,"byte_end":8747855,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ must not change while [`AsyncFd`] owns the inner object, i.e. the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8747856,"byte_end":8747925,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"/ [`AsRawFd::as_raw_fd`] method on the inner type must always return the same","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8747926,"byte_end":8748005,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ file descriptor when called multiple times. Failure to uphold this results","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8748006,"byte_end":8748084,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ in unspecified behavior in the IO driver, which may include breaking","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8748085,"byte_end":8748157,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ notifications for other sockets/etc.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8748158,"byte_end":8748198,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8748199,"byte_end":8748202,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Polling for readiness is done by calling the async functions [`readable`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8748203,"byte_end":8748280,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ and [`writable`]. These functions complete when the associated readiness","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8748281,"byte_end":8748357,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ condition is observed. Any number of tasks can query the same `AsyncFd` in","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8748358,"byte_end":8748436,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ parallel, on the same or different conditions.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8748437,"byte_end":8748487,"line_start":35,"line_end":35,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8748488,"byte_end":8748491,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ On some platforms, the readiness detecting mechanism relies on","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8748492,"byte_end":8748558,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ edge-triggered notifications. This means that the OS will only notify Tokio","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8748559,"byte_end":8748638,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ when the file descriptor transitions from not-ready to ready. Tokio","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8748639,"byte_end":8748710,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ internally tracks when it has received a ready notification, and when","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8748711,"byte_end":8748784,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ readiness checking functions like [`readable`] and [`writable`] are called,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8748785,"byte_end":8748864,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ if the readiness flag is set, these async functions will complete","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8748865,"byte_end":8748934,"line_start":42,"line_end":42,"column_start":1,"column_end":70}},{"value":"/ immediately.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8748935,"byte_end":8748951,"line_start":43,"line_end":43,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8748952,"byte_end":8748955,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This however does mean that it is critical to ensure that this ready flag is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8748956,"byte_end":8749036,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ cleared when (and only when) the file descriptor ceases to be ready. The","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8749037,"byte_end":8749113,"line_start":46,"line_end":46,"column_start":1,"column_end":77}},{"value":"/ [`AsyncFdReadyGuard`] returned from readiness checking functions serves this","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8749114,"byte_end":8749194,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/ function; after calling a readiness-checking async function, you must use","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8749195,"byte_end":8749272,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ this [`AsyncFdReadyGuard`] to signal to tokio whether the file descriptor is no","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8749273,"byte_end":8749356,"line_start":49,"line_end":49,"column_start":1,"column_end":84}},{"value":"/ longer in a ready state.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8749357,"byte_end":8749385,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8749386,"byte_end":8749389,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ## Use with to a poll-based API","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8749390,"byte_end":8749425,"line_start":52,"line_end":52,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8749426,"byte_end":8749429,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ In some cases it may be desirable to use `AsyncFd` from APIs similar to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8749430,"byte_end":8749505,"line_start":54,"line_end":54,"column_start":1,"column_end":76}},{"value":"/ [`TcpStream::poll_read_ready`]. The [`AsyncFd::poll_read_ready`] and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8749506,"byte_end":8749578,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ [`AsyncFd::poll_write_ready`] functions are provided for this purpose.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8749579,"byte_end":8749653,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ Because these functions don't create a future to hold their state, they have","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8749654,"byte_end":8749734,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ the limitation that only one task can wait on each direction (read or write)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8749735,"byte_end":8749815,"line_start":58,"line_end":58,"column_start":1,"column_end":81}},{"value":"/ at a time.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8749816,"byte_end":8749830,"line_start":59,"line_end":59,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8749831,"byte_end":8749834,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8749835,"byte_end":8749849,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8749850,"byte_end":8749853,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This example shows how to turn [`std::net::TcpStream`] asynchronous using","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8749854,"byte_end":8749931,"line_start":63,"line_end":63,"column_start":1,"column_end":78}},{"value":"/ `AsyncFd`.  It implements `read` as an async fn, and `AsyncWrite` as a trait","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8749932,"byte_end":8750012,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/ to show how to implement both approaches.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750013,"byte_end":8750058,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750059,"byte_end":8750062,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750063,"byte_end":8750076,"line_start":67,"line_end":67,"column_start":1,"column_end":14}},{"value":"/ use futures::ready;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750077,"byte_end":8750100,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/ use std::io::{self, Read, Write};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750101,"byte_end":8750138,"line_start":69,"line_end":69,"column_start":1,"column_end":38}},{"value":"/ use std::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750139,"byte_end":8750167,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750168,"byte_end":8750190,"line_start":71,"line_end":71,"column_start":1,"column_end":23}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750191,"byte_end":8750226,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/ use tokio::io::AsyncWrite;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750227,"byte_end":8750257,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/ use tokio::io::unix::AsyncFd;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750258,"byte_end":8750291,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750292,"byte_end":8750295,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ pub struct AsyncTcpStream {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750296,"byte_end":8750327,"line_start":76,"line_end":76,"column_start":1,"column_end":32}},{"value":"/     inner: AsyncFd<TcpStream>,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750328,"byte_end":8750362,"line_start":77,"line_end":77,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750363,"byte_end":8750368,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750369,"byte_end":8750372,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ impl AsyncTcpStream {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750373,"byte_end":8750398,"line_start":80,"line_end":80,"column_start":1,"column_end":26}},{"value":"/     pub fn new(tcp: TcpStream) -> io::Result<Self> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750399,"byte_end":8750455,"line_start":81,"line_end":81,"column_start":1,"column_end":57}},{"value":"/         Ok(Self {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750456,"byte_end":8750477,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/             inner: AsyncFd::new(tcp)?,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750478,"byte_end":8750520,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/         })","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750521,"byte_end":8750535,"line_start":84,"line_end":84,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750536,"byte_end":8750545,"line_start":85,"line_end":85,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750546,"byte_end":8750549,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     pub async fn read(&self, out: &mut [u8]) -> io::Result<usize> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750550,"byte_end":8750621,"line_start":87,"line_end":87,"column_start":1,"column_end":72}},{"value":"/         loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750622,"byte_end":8750640,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/             let mut guard = self.inner.readable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750641,"byte_end":8750702,"line_start":89,"line_end":89,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750703,"byte_end":8750706,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/             match guard.try_io(|inner| inner.get_ref().read(out)) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750707,"byte_end":8750778,"line_start":91,"line_end":91,"column_start":1,"column_end":72}},{"value":"/                 Ok(result) => return result,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750779,"byte_end":8750827,"line_start":92,"line_end":92,"column_start":1,"column_end":49}},{"value":"/                 Err(_would_block) => continue,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750828,"byte_end":8750878,"line_start":93,"line_end":93,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750879,"byte_end":8750896,"line_start":94,"line_end":94,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750897,"byte_end":8750910,"line_start":95,"line_end":95,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750911,"byte_end":8750920,"line_start":96,"line_end":96,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750921,"byte_end":8750926,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750927,"byte_end":8750930,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ impl AsyncWrite for AsyncTcpStream {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750931,"byte_end":8750971,"line_start":99,"line_end":99,"column_start":1,"column_end":41}},{"value":"/     fn poll_write(","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750972,"byte_end":8750994,"line_start":100,"line_end":100,"column_start":1,"column_end":23}},{"value":"/         self: Pin<&mut Self>,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8750995,"byte_end":8751028,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/         cx: &mut Context<'_>,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751029,"byte_end":8751062,"line_start":102,"line_end":102,"column_start":1,"column_end":34}},{"value":"/         buf: &[u8]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751063,"byte_end":8751085,"line_start":103,"line_end":103,"column_start":1,"column_end":23}},{"value":"/     ) -> Poll<io::Result<usize>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751086,"byte_end":8751124,"line_start":104,"line_end":104,"column_start":1,"column_end":39}},{"value":"/         loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751125,"byte_end":8751143,"line_start":105,"line_end":105,"column_start":1,"column_end":19}},{"value":"/             let mut guard = ready!(self.inner.poll_write_ready(cx))?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751144,"byte_end":8751217,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751218,"byte_end":8751221,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/             match guard.try_io(|inner| inner.get_ref().write(buf)) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751222,"byte_end":8751294,"line_start":108,"line_end":108,"column_start":1,"column_end":73}},{"value":"/                 Ok(result) => return Poll::Ready(result),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751295,"byte_end":8751356,"line_start":109,"line_end":109,"column_start":1,"column_end":62}},{"value":"/                 Err(_would_block) => continue,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751357,"byte_end":8751407,"line_start":110,"line_end":110,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751408,"byte_end":8751425,"line_start":111,"line_end":111,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751426,"byte_end":8751439,"line_start":112,"line_end":112,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751440,"byte_end":8751449,"line_start":113,"line_end":113,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751450,"byte_end":8751453,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     fn poll_flush(","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751454,"byte_end":8751476,"line_start":115,"line_end":115,"column_start":1,"column_end":23}},{"value":"/         self: Pin<&mut Self>,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751477,"byte_end":8751510,"line_start":116,"line_end":116,"column_start":1,"column_end":34}},{"value":"/         cx: &mut Context<'_>,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751511,"byte_end":8751544,"line_start":117,"line_end":117,"column_start":1,"column_end":34}},{"value":"/     ) -> Poll<io::Result<()>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751545,"byte_end":8751580,"line_start":118,"line_end":118,"column_start":1,"column_end":36}},{"value":"/         // tcp flush is a no-op","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751581,"byte_end":8751616,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751617,"byte_end":8751648,"line_start":120,"line_end":120,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751649,"byte_end":8751658,"line_start":121,"line_end":121,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751659,"byte_end":8751662,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/     fn poll_shutdown(","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751663,"byte_end":8751688,"line_start":123,"line_end":123,"column_start":1,"column_end":26}},{"value":"/         self: Pin<&mut Self>,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751689,"byte_end":8751722,"line_start":124,"line_end":124,"column_start":1,"column_end":34}},{"value":"/         cx: &mut Context<'_>,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751723,"byte_end":8751756,"line_start":125,"line_end":125,"column_start":1,"column_end":34}},{"value":"/     ) -> Poll<io::Result<()>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751757,"byte_end":8751792,"line_start":126,"line_end":126,"column_start":1,"column_end":36}},{"value":"/         self.inner.get_ref().shutdown(std::net::Shutdown::Write)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751793,"byte_end":8751863,"line_start":127,"line_end":127,"column_start":1,"column_end":71}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751864,"byte_end":8751895,"line_start":128,"line_end":128,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751896,"byte_end":8751905,"line_start":129,"line_end":129,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751906,"byte_end":8751911,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751912,"byte_end":8751919,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751920,"byte_end":8751923,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751924,"byte_end":8751963,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ [`writable`]: method@Self::writable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8751964,"byte_end":8752003,"line_start":134,"line_end":134,"column_start":1,"column_end":40}},{"value":"/ [`AsyncFdReadyGuard`]: struct@self::AsyncFdReadyGuard","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8752004,"byte_end":8752061,"line_start":135,"line_end":135,"column_start":1,"column_end":58}},{"value":"/ [`TcpStream::poll_read_ready`]: struct@crate::net::TcpStream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8752062,"byte_end":8752126,"line_start":136,"line_end":136,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1752},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8752653,"byte_end":8752670,"line_start":148,"line_end":148,"column_start":12,"column_end":29},"name":"AsyncFdReadyGuard","qualname":"::io::async_fd::AsyncFdReadyGuard","value":"AsyncFdReadyGuard {  }","parent":null,"children":[{"krate":0,"index":1755},{"krate":0,"index":1756}],"decl_id":null,"docs":" Represents an IO-ready event detected on a particular file descriptor that\n has not yet been acknowledged. This is a `must_use` structure to help ensure\n that you do not forget to explicitly clear (or not clear) the event.","sig":null,"attributes":[{"value":"/ Represents an IO-ready event detected on a particular file descriptor that","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8752217,"byte_end":8752295,"line_start":142,"line_end":142,"column_start":1,"column_end":79}},{"value":"/ has not yet been acknowledged. This is a `must_use` structure to help ensure","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8752296,"byte_end":8752376,"line_start":143,"line_end":143,"column_start":1,"column_end":81}},{"value":"/ that you do not forget to explicitly clear (or not clear) the event.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8752377,"byte_end":8752449,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8752450,"byte_end":8752453,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ This type exposes an immutable reference to the underlying IO object.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8752454,"byte_end":8752527,"line_start":146,"line_end":146,"column_start":1,"column_end":74}},{"value":"must_use =\n  \"You must explicitly choose whether to clear the readiness state by calling a method on ReadyGuard\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8752528,"byte_end":8752641,"line_start":147,"line_end":147,"column_start":1,"column_end":114}}]},{"kind":"Struct","id":{"krate":0,"index":1757},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8753186,"byte_end":8753206,"line_start":159,"line_end":159,"column_start":12,"column_end":32},"name":"AsyncFdReadyMutGuard","qualname":"::io::async_fd::AsyncFdReadyMutGuard","value":"AsyncFdReadyMutGuard {  }","parent":null,"children":[{"krate":0,"index":1760},{"krate":0,"index":1761}],"decl_id":null,"docs":" Represents an IO-ready event detected on a particular file descriptor that\n has not yet been acknowledged. This is a `must_use` structure to help ensure\n that you do not forget to explicitly clear (or not clear) the event.","sig":null,"attributes":[{"value":"/ Represents an IO-ready event detected on a particular file descriptor that","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8752753,"byte_end":8752831,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ has not yet been acknowledged. This is a `must_use` structure to help ensure","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8752832,"byte_end":8752912,"line_start":154,"line_end":154,"column_start":1,"column_end":81}},{"value":"/ that you do not forget to explicitly clear (or not clear) the event.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8752913,"byte_end":8752985,"line_start":155,"line_end":155,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8752986,"byte_end":8752989,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ This type exposes a mutable reference to the underlying IO object.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8752990,"byte_end":8753060,"line_start":157,"line_end":157,"column_start":1,"column_end":71}},{"value":"must_use =\n  \"You must explicitly choose whether to clear the readiness state by calling a method on ReadyGuard\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8753061,"byte_end":8753174,"line_start":158,"line_end":158,"column_start":1,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8753680,"byte_end":8753683,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"new","qualname":"<AsyncFd<T>>::new","value":"pub fn new(T) -> io::Result<Self> where T: AsRawFd","parent":null,"children":[],"decl_id":null,"docs":" Creates an AsyncFd backed by (and taking ownership of) an object\n implementing [`AsRawFd`]. The backing file descriptor is cached at the\n time of creation.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8753403,"byte_end":8753412,"line_start":167,"line_end":167,"column_start":5,"column_end":14}},{"value":"/ Creates an AsyncFd backed by (and taking ownership of) an object","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8753417,"byte_end":8753485,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/ implementing [`AsRawFd`]. The backing file descriptor is cached at the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8753490,"byte_end":8753564,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ time of creation.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8753569,"byte_end":8753590,"line_start":170,"line_end":170,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8753595,"byte_end":8753598,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This method must be called in the context of a tokio runtime.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8753603,"byte_end":8753668,"line_start":172,"line_end":172,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8754008,"byte_end":8754021,"line_start":183,"line_end":183,"column_start":12,"column_end":25},"name":"with_interest","qualname":"<AsyncFd<T>>::with_interest","value":"pub fn with_interest(T, Interest) -> io::Result<Self> where T: AsRawFd","parent":null,"children":[],"decl_id":null,"docs":" Creates new instance as `new` with additional ability to customize interest,\n allowing to specify whether file descriptor will be polled for read, write or both.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8753810,"byte_end":8753819,"line_start":180,"line_end":180,"column_start":5,"column_end":14}},{"value":"/ Creates new instance as `new` with additional ability to customize interest,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8753824,"byte_end":8753904,"line_start":181,"line_end":181,"column_start":5,"column_end":85}},{"value":"/ allowing to specify whether file descriptor will be polled for read, write or both.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8753909,"byte_end":8753996,"line_start":182,"line_end":182,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8754699,"byte_end":8754706,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AsyncFd<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the backing object of this [`AsyncFd`]\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the backing object of this [`AsyncFd`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8754601,"byte_end":8754673,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8754678,"byte_end":8754687,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8754869,"byte_end":8754876,"line_start":214,"line_end":214,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AsyncFd<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the backing object of this [`AsyncFd`]\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the backing object of this [`AsyncFd`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8754770,"byte_end":8754843,"line_start":212,"line_end":212,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8754848,"byte_end":8754857,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8755301,"byte_end":8755311,"line_start":230,"line_end":230,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AsyncFd<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Deregisters this file descriptor and returns ownership of the backing\n object.\n","sig":null,"attributes":[{"value":"/ Deregisters this file descriptor and returns ownership of the backing","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8755200,"byte_end":8755273,"line_start":228,"line_end":228,"column_start":5,"column_end":78}},{"value":"/ object.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8755278,"byte_end":8755289,"line_start":229,"line_end":229,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8756838,"byte_end":8756853,"line_start":261,"line_end":261,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<AsyncFd<T>>::poll_read_ready","value":"pub fn poll_read_ready<'a>(&'a Self, &mut Context)\n-> Poll<io::Result<AsyncFdReadyGuard>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8755375,"byte_end":8755404,"line_start":234,"line_end":234,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8755409,"byte_end":8755412,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ If the file descriptor is not currently ready for reading, this method","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8755417,"byte_end":8755491,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ will store a clone of the [`Waker`] from the provided [`Context`]. When the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8755496,"byte_end":8755575,"line_start":237,"line_end":237,"column_start":5,"column_end":84}},{"value":"/ file descriptor becomes ready for reading, [`Waker::wake`] will be called.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8755580,"byte_end":8755658,"line_start":238,"line_end":238,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8755663,"byte_end":8755666,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to [`poll_read_ready`] or","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8755671,"byte_end":8755728,"line_start":240,"line_end":240,"column_start":5,"column_end":62}},{"value":"/ [`poll_read_ready_mut`], only the `Waker` from the `Context` passed to the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8755733,"byte_end":8755811,"line_start":241,"line_end":241,"column_start":5,"column_end":83}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8755816,"byte_end":8755880,"line_start":242,"line_end":242,"column_start":5,"column_end":69}},{"value":"/ [`poll_write_ready`] retains a second, independent waker).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8755885,"byte_end":8755947,"line_start":243,"line_end":243,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8755952,"byte_end":8755955,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This method is intended for cases where creating and pinning a future","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8755960,"byte_end":8756033,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8756038,"byte_end":8756113,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8756118,"byte_end":8756186,"line_start":247,"line_end":247,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8756191,"byte_end":8756194,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This method takes `&self`, so it is possible to call this method","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8756199,"byte_end":8756267,"line_start":249,"line_end":249,"column_start":5,"column_end":73}},{"value":"/ concurrently with other methods on this struct. This method only","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8756272,"byte_end":8756340,"line_start":250,"line_end":250,"column_start":5,"column_end":73}},{"value":"/ provides shared access to the inner IO resource when handling the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8756345,"byte_end":8756414,"line_start":251,"line_end":251,"column_start":5,"column_end":74}},{"value":"/ [`AsyncFdReadyGuard`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8756419,"byte_end":8756445,"line_start":252,"line_end":252,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8756450,"byte_end":8756453,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8756458,"byte_end":8756511,"line_start":254,"line_end":254,"column_start":5,"column_end":58}},{"value":"/ [`poll_read_ready_mut`]: method@Self::poll_read_ready_mut","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8756516,"byte_end":8756577,"line_start":255,"line_end":255,"column_start":5,"column_end":66}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8756582,"byte_end":8756637,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8756642,"byte_end":8756681,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/ [`Context`]: struct@std::task::Context","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8756686,"byte_end":8756728,"line_start":258,"line_end":258,"column_start":5,"column_end":47}},{"value":"/ [`Waker`]: struct@std::task::Waker","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8756733,"byte_end":8756771,"line_start":259,"line_end":259,"column_start":5,"column_end":43}},{"value":"/ [`Waker::wake`]: method@std::task::Waker::wake","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8756776,"byte_end":8756826,"line_start":260,"line_end":260,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8758520,"byte_end":8758539,"line_start":299,"line_end":299,"column_start":12,"column_end":31},"name":"poll_read_ready_mut","qualname":"<AsyncFd<T>>::poll_read_ready_mut","value":"pub fn poll_read_ready_mut<'a>(&'a mut Self, &mut Context)\n-> Poll<io::Result<AsyncFdReadyMutGuard>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8757159,"byte_end":8757188,"line_start":274,"line_end":274,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8757193,"byte_end":8757196,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ If the file descriptor is not currently ready for reading, this method","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8757201,"byte_end":8757275,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/ will store a clone of the [`Waker`] from the provided [`Context`]. When the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8757280,"byte_end":8757359,"line_start":277,"line_end":277,"column_start":5,"column_end":84}},{"value":"/ file descriptor becomes ready for reading, [`Waker::wake`] will be called.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8757364,"byte_end":8757442,"line_start":278,"line_end":278,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8757447,"byte_end":8757450,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to [`poll_read_ready`] or","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8757455,"byte_end":8757512,"line_start":280,"line_end":280,"column_start":5,"column_end":62}},{"value":"/ [`poll_read_ready_mut`], only the `Waker` from the `Context` passed to the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8757517,"byte_end":8757595,"line_start":281,"line_end":281,"column_start":5,"column_end":83}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8757600,"byte_end":8757664,"line_start":282,"line_end":282,"column_start":5,"column_end":69}},{"value":"/ [`poll_write_ready`] retains a second, independent waker).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8757669,"byte_end":8757731,"line_start":283,"line_end":283,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8757736,"byte_end":8757739,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This method is intended for cases where creating and pinning a future","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8757744,"byte_end":8757817,"line_start":285,"line_end":285,"column_start":5,"column_end":78}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8757822,"byte_end":8757897,"line_start":286,"line_end":286,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8757902,"byte_end":8757970,"line_start":287,"line_end":287,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8757975,"byte_end":8757978,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This method takes `&mut self`, so it is possible to access the inner IO","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8757983,"byte_end":8758058,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/ resource mutably when handling the [`AsyncFdReadyMutGuard`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8758063,"byte_end":8758127,"line_start":290,"line_end":290,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8758132,"byte_end":8758135,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8758140,"byte_end":8758193,"line_start":292,"line_end":292,"column_start":5,"column_end":58}},{"value":"/ [`poll_read_ready_mut`]: method@Self::poll_read_ready_mut","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8758198,"byte_end":8758259,"line_start":293,"line_end":293,"column_start":5,"column_end":66}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8758264,"byte_end":8758319,"line_start":294,"line_end":294,"column_start":5,"column_end":60}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8758324,"byte_end":8758363,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/ [`Context`]: struct@std::task::Context","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8758368,"byte_end":8758410,"line_start":296,"line_end":296,"column_start":5,"column_end":47}},{"value":"/ [`Waker`]: struct@std::task::Waker","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8758415,"byte_end":8758453,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/ [`Waker::wake`]: method@std::task::Waker::wake","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8758458,"byte_end":8758508,"line_start":298,"line_end":298,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8760322,"byte_end":8760338,"line_start":339,"line_end":339,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<AsyncFd<T>>::poll_write_ready","value":"pub fn poll_write_ready<'a>(&'a Self, &mut Context)\n-> Poll<io::Result<AsyncFdReadyGuard>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8758855,"byte_end":8758885,"line_start":312,"line_end":312,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8758890,"byte_end":8758893,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If the file descriptor is not currently ready for writing, this method","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8758898,"byte_end":8758972,"line_start":314,"line_end":314,"column_start":5,"column_end":79}},{"value":"/ will store a clone of the [`Waker`] from the provided [`Context`]. When the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8758977,"byte_end":8759056,"line_start":315,"line_end":315,"column_start":5,"column_end":84}},{"value":"/ file descriptor becomes ready for writing, [`Waker::wake`] will be called.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8759061,"byte_end":8759139,"line_start":316,"line_end":316,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8759144,"byte_end":8759147,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to [`poll_write_ready`] or","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8759152,"byte_end":8759210,"line_start":318,"line_end":318,"column_start":5,"column_end":63}},{"value":"/ [`poll_write_ready_mut`], only the `Waker` from the `Context` passed to the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8759215,"byte_end":8759294,"line_start":319,"line_end":319,"column_start":5,"column_end":84}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8759299,"byte_end":8759363,"line_start":320,"line_end":320,"column_start":5,"column_end":69}},{"value":"/ [`poll_read_ready`] retains a second, independent waker).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8759368,"byte_end":8759429,"line_start":321,"line_end":321,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8759434,"byte_end":8759437,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ This method is intended for cases where creating and pinning a future","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8759442,"byte_end":8759515,"line_start":323,"line_end":323,"column_start":5,"column_end":78}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8759520,"byte_end":8759595,"line_start":324,"line_end":324,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8759600,"byte_end":8759668,"line_start":325,"line_end":325,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8759673,"byte_end":8759676,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ This method takes `&self`, so it is possible to call this method","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8759681,"byte_end":8759749,"line_start":327,"line_end":327,"column_start":5,"column_end":73}},{"value":"/ concurrently with other methods on this struct. This method only","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8759754,"byte_end":8759822,"line_start":328,"line_end":328,"column_start":5,"column_end":73}},{"value":"/ provides shared access to the inner IO resource when handling the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8759827,"byte_end":8759896,"line_start":329,"line_end":329,"column_start":5,"column_end":74}},{"value":"/ [`AsyncFdReadyGuard`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8759901,"byte_end":8759927,"line_start":330,"line_end":330,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8759932,"byte_end":8759935,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8759940,"byte_end":8759993,"line_start":332,"line_end":332,"column_start":5,"column_end":58}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8759998,"byte_end":8760053,"line_start":333,"line_end":333,"column_start":5,"column_end":60}},{"value":"/ [`poll_write_ready_mut`]: method@Self::poll_write_ready_mut","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8760058,"byte_end":8760121,"line_start":334,"line_end":334,"column_start":5,"column_end":68}},{"value":"/ [`writable`]: method@Self::readable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8760126,"byte_end":8760165,"line_start":335,"line_end":335,"column_start":5,"column_end":44}},{"value":"/ [`Context`]: struct@std::task::Context","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8760170,"byte_end":8760212,"line_start":336,"line_end":336,"column_start":5,"column_end":47}},{"value":"/ [`Waker`]: struct@std::task::Waker","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8760217,"byte_end":8760255,"line_start":337,"line_end":337,"column_start":5,"column_end":43}},{"value":"/ [`Waker::wake`]: method@std::task::Waker::wake","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8760260,"byte_end":8760310,"line_start":338,"line_end":338,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8762010,"byte_end":8762030,"line_start":377,"line_end":377,"column_start":12,"column_end":32},"name":"poll_write_ready_mut","qualname":"<AsyncFd<T>>::poll_write_ready_mut","value":"pub fn poll_write_ready_mut<'a>(&'a mut Self, &mut Context)\n-> Poll<io::Result<AsyncFdReadyMutGuard>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8760645,"byte_end":8760675,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8760680,"byte_end":8760683,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If the file descriptor is not currently ready for writing, this method","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8760688,"byte_end":8760762,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/ will store a clone of the [`Waker`] from the provided [`Context`]. When the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8760767,"byte_end":8760846,"line_start":355,"line_end":355,"column_start":5,"column_end":84}},{"value":"/ file descriptor becomes ready for writing, [`Waker::wake`] will be called.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8760851,"byte_end":8760929,"line_start":356,"line_end":356,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8760934,"byte_end":8760937,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to [`poll_write_ready`] or","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8760942,"byte_end":8761000,"line_start":358,"line_end":358,"column_start":5,"column_end":63}},{"value":"/ [`poll_write_ready_mut`], only the `Waker` from the `Context` passed to the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8761005,"byte_end":8761084,"line_start":359,"line_end":359,"column_start":5,"column_end":84}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8761089,"byte_end":8761153,"line_start":360,"line_end":360,"column_start":5,"column_end":69}},{"value":"/ [`poll_read_ready`] retains a second, independent waker).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8761158,"byte_end":8761219,"line_start":361,"line_end":361,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8761224,"byte_end":8761227,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This method is intended for cases where creating and pinning a future","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8761232,"byte_end":8761305,"line_start":363,"line_end":363,"column_start":5,"column_end":78}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8761310,"byte_end":8761385,"line_start":364,"line_end":364,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8761390,"byte_end":8761458,"line_start":365,"line_end":365,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8761463,"byte_end":8761466,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ This method takes `&mut self`, so it is possible to access the inner IO","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8761471,"byte_end":8761546,"line_start":367,"line_end":367,"column_start":5,"column_end":80}},{"value":"/ resource mutably when handling the [`AsyncFdReadyMutGuard`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8761551,"byte_end":8761615,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8761620,"byte_end":8761623,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8761628,"byte_end":8761681,"line_start":370,"line_end":370,"column_start":5,"column_end":58}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8761686,"byte_end":8761741,"line_start":371,"line_end":371,"column_start":5,"column_end":60}},{"value":"/ [`poll_write_ready_mut`]: method@Self::poll_write_ready_mut","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8761746,"byte_end":8761809,"line_start":372,"line_end":372,"column_start":5,"column_end":68}},{"value":"/ [`writable`]: method@Self::readable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8761814,"byte_end":8761853,"line_start":373,"line_end":373,"column_start":5,"column_end":44}},{"value":"/ [`Context`]: struct@std::task::Context","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8761858,"byte_end":8761900,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/ [`Waker`]: struct@std::task::Waker","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8761905,"byte_end":8761943,"line_start":375,"line_end":375,"column_start":5,"column_end":43}},{"value":"/ [`Waker::wake`]: method@std::task::Waker::wake","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8761948,"byte_end":8761998,"line_start":376,"line_end":376,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8763440,"byte_end":8763448,"line_start":420,"line_end":420,"column_start":18,"column_end":26},"name":"readable","qualname":"<AsyncFd<T>>::readable","value":"pub async fn readable<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the file descriptor to become readable, returning a\n [`AsyncFdReadyGuard`] that must be dropped to resume read-readiness\n polling.","sig":null,"attributes":[{"value":"/ Waits for the file descriptor to become readable, returning a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8762920,"byte_end":8762985,"line_start":411,"line_end":411,"column_start":5,"column_end":70}},{"value":"/ [`AsyncFdReadyGuard`] that must be dropped to resume read-readiness","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8762990,"byte_end":8763061,"line_start":412,"line_end":412,"column_start":5,"column_end":76}},{"value":"/ polling.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8763066,"byte_end":8763078,"line_start":413,"line_end":413,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8763083,"byte_end":8763086,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ This method takes `&self`, so it is possible to call this method","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8763091,"byte_end":8763159,"line_start":415,"line_end":415,"column_start":5,"column_end":73}},{"value":"/ concurrently with other methods on this struct. This method only","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8763164,"byte_end":8763232,"line_start":416,"line_end":416,"column_start":5,"column_end":73}},{"value":"/ provides shared access to the inner IO resource when handling the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8763237,"byte_end":8763306,"line_start":417,"line_end":417,"column_start":5,"column_end":74}},{"value":"/ [`AsyncFdReadyGuard`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8763311,"byte_end":8763337,"line_start":418,"line_end":418,"column_start":5,"column_end":31}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8763342,"byte_end":8763378,"line_start":419,"line_end":419,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8763986,"byte_end":8763998,"line_start":431,"line_end":431,"column_start":18,"column_end":30},"name":"readable_mut","qualname":"<AsyncFd<T>>::readable_mut","value":"pub async fn readable_mut<'a>(&'a mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the file descriptor to become readable, returning a\n [`AsyncFdReadyMutGuard`] that must be dropped to resume read-readiness\n polling.","sig":null,"attributes":[{"value":"/ Waits for the file descriptor to become readable, returning a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8763565,"byte_end":8763630,"line_start":424,"line_end":424,"column_start":5,"column_end":70}},{"value":"/ [`AsyncFdReadyMutGuard`] that must be dropped to resume read-readiness","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8763635,"byte_end":8763709,"line_start":425,"line_end":425,"column_start":5,"column_end":79}},{"value":"/ polling.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8763714,"byte_end":8763726,"line_start":426,"line_end":426,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8763731,"byte_end":8763734,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ This method takes `&mut self`, so it is possible to access the inner IO","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8763739,"byte_end":8763814,"line_start":428,"line_end":428,"column_start":5,"column_end":80}},{"value":"/ resource mutably when handling the [`AsyncFdReadyMutGuard`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8763819,"byte_end":8763883,"line_start":429,"line_end":429,"column_start":5,"column_end":69}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8763888,"byte_end":8763924,"line_start":430,"line_end":430,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8764647,"byte_end":8764655,"line_start":444,"line_end":444,"column_start":18,"column_end":26},"name":"writable","qualname":"<AsyncFd<T>>::writable","value":"pub async fn writable<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the file descriptor to become writable, returning a\n [`AsyncFdReadyGuard`] that must be dropped to resume write-readiness\n polling.","sig":null,"attributes":[{"value":"/ Waits for the file descriptor to become writable, returning a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8764126,"byte_end":8764191,"line_start":435,"line_end":435,"column_start":5,"column_end":70}},{"value":"/ [`AsyncFdReadyGuard`] that must be dropped to resume write-readiness","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8764196,"byte_end":8764268,"line_start":436,"line_end":436,"column_start":5,"column_end":77}},{"value":"/ polling.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8764273,"byte_end":8764285,"line_start":437,"line_end":437,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8764290,"byte_end":8764293,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ This method takes `&self`, so it is possible to call this method","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8764298,"byte_end":8764366,"line_start":439,"line_end":439,"column_start":5,"column_end":73}},{"value":"/ concurrently with other methods on this struct. This method only","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8764371,"byte_end":8764439,"line_start":440,"line_end":440,"column_start":5,"column_end":73}},{"value":"/ provides shared access to the inner IO resource when handling the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8764444,"byte_end":8764513,"line_start":441,"line_end":441,"column_start":5,"column_end":74}},{"value":"/ [`AsyncFdReadyGuard`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8764518,"byte_end":8764544,"line_start":442,"line_end":442,"column_start":5,"column_end":31}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8764549,"byte_end":8764585,"line_start":443,"line_end":443,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8765194,"byte_end":8765206,"line_start":455,"line_end":455,"column_start":18,"column_end":30},"name":"writable_mut","qualname":"<AsyncFd<T>>::writable_mut","value":"pub async fn writable_mut<'a>(&'a mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the file descriptor to become writable, returning a\n [`AsyncFdReadyMutGuard`] that must be dropped to resume write-readiness\n polling.","sig":null,"attributes":[{"value":"/ Waits for the file descriptor to become writable, returning a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8764772,"byte_end":8764837,"line_start":448,"line_end":448,"column_start":5,"column_end":70}},{"value":"/ [`AsyncFdReadyMutGuard`] that must be dropped to resume write-readiness","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8764842,"byte_end":8764917,"line_start":449,"line_end":449,"column_start":5,"column_end":80}},{"value":"/ polling.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8764922,"byte_end":8764934,"line_start":450,"line_end":450,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8764939,"byte_end":8764942,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ This method takes `&mut self`, so it is possible to access the inner IO","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8764947,"byte_end":8765022,"line_start":452,"line_end":452,"column_start":5,"column_end":80}},{"value":"/ resource mutably when handling the [`AsyncFdReadyMutGuard`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8765027,"byte_end":8765091,"line_start":453,"line_end":453,"column_start":5,"column_end":69}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8765096,"byte_end":8765132,"line_start":454,"line_end":454,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8766436,"byte_end":8766447,"line_start":491,"line_end":491,"column_start":12,"column_end":23},"name":"clear_ready","qualname":"<AsyncFdReadyGuard>::clear_ready","value":"pub fn clear_ready(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Indicates to tokio that the file descriptor is no longer ready. The\n internal readiness flag will be cleared, and tokio will wait for the\n next edge-triggered readiness notification from the OS.","sig":null,"attributes":[{"value":"/ Indicates to tokio that the file descriptor is no longer ready. The","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8765882,"byte_end":8765953,"line_start":481,"line_end":481,"column_start":5,"column_end":76}},{"value":"/ internal readiness flag will be cleared, and tokio will wait for the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8765958,"byte_end":8766030,"line_start":482,"line_end":482,"column_start":5,"column_end":77}},{"value":"/ next edge-triggered readiness notification from the OS.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8766035,"byte_end":8766094,"line_start":483,"line_end":483,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8766099,"byte_end":8766102,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ It is critical that this function not be called unless your code","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8766107,"byte_end":8766175,"line_start":485,"line_end":485,"column_start":5,"column_end":73}},{"value":"/ _actually observes_ that the file descriptor is _not_ ready. Do not call","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8766180,"byte_end":8766256,"line_start":486,"line_end":486,"column_start":5,"column_end":81}},{"value":"/ it simply because, for example, a read succeeded; it should be called","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8766261,"byte_end":8766334,"line_start":487,"line_end":487,"column_start":5,"column_end":78}},{"value":"/ when a read is observed to block.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8766339,"byte_end":8766376,"line_start":488,"line_end":488,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8766381,"byte_end":8766384,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ [`drop`]: method@std::mem::drop","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8766389,"byte_end":8766424,"line_start":490,"line_end":490,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8766848,"byte_end":8766860,"line_start":502,"line_end":502,"column_start":12,"column_end":24},"name":"retain_ready","qualname":"<AsyncFdReadyGuard>::retain_ready","value":"pub fn retain_ready(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" This method should be invoked when you intentionally want to keep the\n ready flag asserted.","sig":null,"attributes":[{"value":"/ This method should be invoked when you intentionally want to keep the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8766594,"byte_end":8766667,"line_start":497,"line_end":497,"column_start":5,"column_end":78}},{"value":"/ ready flag asserted.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8766672,"byte_end":8766696,"line_start":498,"line_end":498,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8766701,"byte_end":8766704,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ While this function is itself a no-op, it satisfies the `#[must_use]`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8766709,"byte_end":8766782,"line_start":500,"line_end":500,"column_start":5,"column_end":78}},{"value":"/ constraint on the [`AsyncFdReadyGuard`] type.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8766787,"byte_end":8766836,"line_start":501,"line_end":501,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8767811,"byte_end":8767817,"line_start":522,"line_end":522,"column_start":12,"column_end":18},"name":"try_io","qualname":"<AsyncFdReadyGuard>::try_io","value":"pub fn try_io<R,\n              impl FnOnce(&AsyncFd<Inner>) -> io::Result<R>: FnOnce(&AsyncFd<Inner>)\n              ->\n              io::Result<R>>(&mut Self,\n                             impl FnOnce(&AsyncFd<Inner>) -> io::Result<R>)\n-> Result<io::Result<R>, TryIoError>","parent":null,"children":[],"decl_id":null,"docs":" Performs the provided IO operation.","sig":null,"attributes":[{"value":"/ Performs the provided IO operation.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8766902,"byte_end":8766941,"line_start":506,"line_end":506,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8766946,"byte_end":8766949,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ If `f` returns a [`WouldBlock`] error, the readiness state associated","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8766954,"byte_end":8767027,"line_start":508,"line_end":508,"column_start":5,"column_end":78}},{"value":"/ with this file descriptor is cleared, and the method returns","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8767032,"byte_end":8767096,"line_start":509,"line_end":509,"column_start":5,"column_end":69}},{"value":"/ `Err(TryIoError::WouldBlock)`. You will typically need to poll the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8767101,"byte_end":8767171,"line_start":510,"line_end":510,"column_start":5,"column_end":75}},{"value":"/ `AsyncFd` again when this happens.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8767176,"byte_end":8767214,"line_start":511,"line_end":511,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8767219,"byte_end":8767222,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ This method helps ensure that the readiness state of the underlying file","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8767227,"byte_end":8767303,"line_start":513,"line_end":513,"column_start":5,"column_end":81}},{"value":"/ descriptor remains in sync with the tokio-side readiness state, by","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8767308,"byte_end":8767378,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ clearing the tokio-side state only when a [`WouldBlock`] condition","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8767383,"byte_end":8767453,"line_start":515,"line_end":515,"column_start":5,"column_end":75}},{"value":"/ occurs. It is the responsibility of the caller to ensure that `f`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8767458,"byte_end":8767527,"line_start":516,"line_end":516,"column_start":5,"column_end":74}},{"value":"/ returns [`WouldBlock`] only if the file descriptor that originated this","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8767532,"byte_end":8767607,"line_start":517,"line_end":517,"column_start":5,"column_end":80}},{"value":"/ `AsyncFdReadyGuard` no longer expresses the readiness state that was queried to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8767612,"byte_end":8767695,"line_start":518,"line_end":518,"column_start":5,"column_end":88}},{"value":"/ create this `AsyncFdReadyGuard`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8767700,"byte_end":8767736,"line_start":519,"line_end":519,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8767741,"byte_end":8767744,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8767749,"byte_end":8767799,"line_start":521,"line_end":521,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8768923,"byte_end":8768934,"line_start":552,"line_end":552,"column_start":12,"column_end":23},"name":"clear_ready","qualname":"<AsyncFdReadyMutGuard>::clear_ready","value":"pub fn clear_ready(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Indicates to tokio that the file descriptor is no longer ready. The\n internal readiness flag will be cleared, and tokio will wait for the\n next edge-triggered readiness notification from the OS.","sig":null,"attributes":[{"value":"/ Indicates to tokio that the file descriptor is no longer ready. The","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8768369,"byte_end":8768440,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/ internal readiness flag will be cleared, and tokio will wait for the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8768445,"byte_end":8768517,"line_start":543,"line_end":543,"column_start":5,"column_end":77}},{"value":"/ next edge-triggered readiness notification from the OS.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8768522,"byte_end":8768581,"line_start":544,"line_end":544,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8768586,"byte_end":8768589,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ It is critical that this function not be called unless your code","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8768594,"byte_end":8768662,"line_start":546,"line_end":546,"column_start":5,"column_end":73}},{"value":"/ _actually observes_ that the file descriptor is _not_ ready. Do not call","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8768667,"byte_end":8768743,"line_start":547,"line_end":547,"column_start":5,"column_end":81}},{"value":"/ it simply because, for example, a read succeeded; it should be called","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8768748,"byte_end":8768821,"line_start":548,"line_end":548,"column_start":5,"column_end":78}},{"value":"/ when a read is observed to block.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8768826,"byte_end":8768863,"line_start":549,"line_end":549,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8768868,"byte_end":8768871,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ [`drop`]: method@std::mem::drop","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8768876,"byte_end":8768911,"line_start":551,"line_end":551,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1823},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8769335,"byte_end":8769347,"line_start":563,"line_end":563,"column_start":12,"column_end":24},"name":"retain_ready","qualname":"<AsyncFdReadyMutGuard>::retain_ready","value":"pub fn retain_ready(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" This method should be invoked when you intentionally want to keep the\n ready flag asserted.","sig":null,"attributes":[{"value":"/ This method should be invoked when you intentionally want to keep the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8769081,"byte_end":8769154,"line_start":558,"line_end":558,"column_start":5,"column_end":78}},{"value":"/ ready flag asserted.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8769159,"byte_end":8769183,"line_start":559,"line_end":559,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8769188,"byte_end":8769191,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ While this function is itself a no-op, it satisfies the `#[must_use]`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8769196,"byte_end":8769269,"line_start":561,"line_end":561,"column_start":5,"column_end":78}},{"value":"/ constraint on the [`AsyncFdReadyGuard`] type.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8769274,"byte_end":8769323,"line_start":562,"line_end":562,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8770298,"byte_end":8770304,"line_start":583,"line_end":583,"column_start":12,"column_end":18},"name":"try_io","qualname":"<AsyncFdReadyMutGuard>::try_io","value":"pub fn try_io<R,\n              impl FnOnce(&mut AsyncFd<Inner>) -> io::Result<R>: FnOnce(&mut AsyncFd<Inner>)\n              ->\n              io::Result<R>>(&mut Self,\n                             impl FnOnce(&mut AsyncFd<Inner>) -> io::Result<R>)\n-> Result<io::Result<R>, TryIoError>","parent":null,"children":[],"decl_id":null,"docs":" Performs the provided IO operation.","sig":null,"attributes":[{"value":"/ Performs the provided IO operation.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8769389,"byte_end":8769428,"line_start":567,"line_end":567,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8769433,"byte_end":8769436,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ If `f` returns a [`WouldBlock`] error, the readiness state associated","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8769441,"byte_end":8769514,"line_start":569,"line_end":569,"column_start":5,"column_end":78}},{"value":"/ with this file descriptor is cleared, and the method returns","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8769519,"byte_end":8769583,"line_start":570,"line_end":570,"column_start":5,"column_end":69}},{"value":"/ `Err(TryIoError::WouldBlock)`. You will typically need to poll the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8769588,"byte_end":8769658,"line_start":571,"line_end":571,"column_start":5,"column_end":75}},{"value":"/ `AsyncFd` again when this happens.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8769663,"byte_end":8769701,"line_start":572,"line_end":572,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8769706,"byte_end":8769709,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ This method helps ensure that the readiness state of the underlying file","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8769714,"byte_end":8769790,"line_start":574,"line_end":574,"column_start":5,"column_end":81}},{"value":"/ descriptor remains in sync with the tokio-side readiness state, by","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8769795,"byte_end":8769865,"line_start":575,"line_end":575,"column_start":5,"column_end":75}},{"value":"/ clearing the tokio-side state only when a [`WouldBlock`] condition","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8769870,"byte_end":8769940,"line_start":576,"line_end":576,"column_start":5,"column_end":75}},{"value":"/ occurs. It is the responsibility of the caller to ensure that `f`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8769945,"byte_end":8770014,"line_start":577,"line_end":577,"column_start":5,"column_end":74}},{"value":"/ returns [`WouldBlock`] only if the file descriptor that originated this","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8770019,"byte_end":8770094,"line_start":578,"line_end":578,"column_start":5,"column_end":80}},{"value":"/ `AsyncFdReadyGuard` no longer expresses the readiness state that was queried to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8770099,"byte_end":8770182,"line_start":579,"line_end":579,"column_start":5,"column_end":88}},{"value":"/ create this `AsyncFdReadyGuard`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8770187,"byte_end":8770223,"line_start":580,"line_end":580,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8770228,"byte_end":8770231,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8770236,"byte_end":8770286,"line_start":582,"line_end":582,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1841},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8771614,"byte_end":8771624,"line_start":625,"line_end":625,"column_start":12,"column_end":22},"name":"TryIoError","qualname":"::io::async_fd::TryIoError","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error type returned by [`try_io`].","sig":null,"attributes":[{"value":"/ The error type returned by [`try_io`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8771356,"byte_end":8771398,"line_start":618,"line_end":618,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8771399,"byte_end":8771402,"line_start":619,"line_end":619,"column_start":1,"column_end":4}},{"value":"/ This error indicates that the IO resource returned a [`WouldBlock`] error.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8771403,"byte_end":8771481,"line_start":620,"line_end":620,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8771482,"byte_end":8771485,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8771486,"byte_end":8771536,"line_start":622,"line_end":622,"column_start":1,"column_end":51}},{"value":"/ [`try_io`]: method@AsyncFdReadyGuard::try_io","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8771537,"byte_end":8771585,"line_start":623,"line_end":623,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":1835},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","byte_start":43696,"byte_end":43700,"line_start":223,"line_end":223,"column_start":13,"column_end":17},"name":"unix","qualname":"::io::unix","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840}],"decl_id":null,"docs":" Asynchronous IO structures specific to Unix-like operating systems.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":21642,"byte_end":21676,"line_start":179,"line_end":179,"column_start":13,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1953},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8772227,"byte_end":8772235,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1955}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1956},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8772364,"byte_end":8772373,"line_start":25,"line_end":25,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1958}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1959},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8772687,"byte_end":8772692,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8773318,"byte_end":8773328,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8773215,"byte_end":8773290,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8773295,"byte_end":8773306,"line_start":64,"line_end":64,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1874},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8773735,"byte_end":8773742,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8773411,"byte_end":8773460,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8773465,"byte_end":8773468,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8773473,"byte_end":8773485,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8773490,"byte_end":8773493,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8773498,"byte_end":8773572,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8773577,"byte_end":8773627,"line_start":74,"line_end":74,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8773632,"byte_end":8773696,"line_start":75,"line_end":75,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8773701,"byte_end":8773723,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1877},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8774243,"byte_end":8774253,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8774141,"byte_end":8774215,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8774220,"byte_end":8774231,"line_start":94,"line_end":94,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":10618},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/seek.rs","byte_start":8777122,"byte_end":8777126,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":10621},{"krate":0,"index":10622},{"krate":0,"index":10623}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2741},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_buf_read_ext.rs","byte_start":8780414,"byte_end":8780429,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2742},{"krate":0,"index":2744},{"krate":0,"index":2746},{"krate":0,"index":2747}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2742},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_buf_read_ext.rs","byte_start":8783139,"byte_end":8783149,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":2741},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_buf_read_ext.rs","byte_start":8786040,"byte_end":8786049,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":2741},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2746},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_buf_read_ext.rs","byte_start":8787449,"byte_end":8787454,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2741},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_buf_read_ext.rs","byte_start":8789294,"byte_end":8789299,"line_start":248,"line_end":248,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":2741},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2749},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8791372,"byte_end":8791384,"line_start":61,"line_end":61,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2750},{"krate":0,"index":2752},{"krate":0,"index":2754},{"krate":0,"index":2757},{"krate":0,"index":2764},{"krate":0,"index":2766},{"krate":0,"index":2768},{"krate":0,"index":2770},{"krate":0,"index":2772},{"krate":0,"index":2774},{"krate":0,"index":2776},{"krate":0,"index":2778},{"krate":0,"index":2780},{"krate":0,"index":2782},{"krate":0,"index":2784},{"krate":0,"index":2786},{"krate":0,"index":2788},{"krate":0,"index":2790},{"krate":0,"index":2792},{"krate":0,"index":2794},{"krate":0,"index":2796},{"krate":0,"index":2798},{"krate":0,"index":2759},{"krate":0,"index":2761},{"krate":0,"index":2763}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8792504,"byte_end":8792509,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2752},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8795338,"byte_end":8795342,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2754},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8797645,"byte_end":8797653,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8799550,"byte_end":8799560,"line_start":277,"line_end":277,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8800997,"byte_end":8801004,"line_start":321,"line_end":321,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2766},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8802293,"byte_end":8802300,"line_start":359,"line_end":359,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8803631,"byte_end":8803639,"line_start":397,"line_end":397,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8804979,"byte_end":8804987,"line_start":435,"line_end":435,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2772},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8806268,"byte_end":8806276,"line_start":472,"line_end":472,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2774},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8807571,"byte_end":8807579,"line_start":510,"line_end":510,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2776},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8808942,"byte_end":8808950,"line_start":549,"line_end":549,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2778},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8810243,"byte_end":8810251,"line_start":586,"line_end":586,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8811711,"byte_end":8811720,"line_start":626,"line_end":626,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2782},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8813114,"byte_end":8813123,"line_start":666,"line_end":666,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2784},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8814470,"byte_end":8814481,"line_start":704,"line_end":704,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2786},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8815842,"byte_end":8815853,"line_start":742,"line_end":742,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2788},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8817154,"byte_end":8817165,"line_start":779,"line_end":779,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2790},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8818477,"byte_end":8818488,"line_start":817,"line_end":817,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2792},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8819869,"byte_end":8819880,"line_start":856,"line_end":856,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8821174,"byte_end":8821185,"line_start":893,"line_end":893,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2796},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8822663,"byte_end":8822675,"line_start":933,"line_end":933,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8824069,"byte_end":8824081,"line_start":973,"line_end":973,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2759},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8825740,"byte_end":8825751,"line_start":1021,"line_end":1021,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8827306,"byte_end":8827320,"line_start":1068,"line_end":1068,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2763},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8828612,"byte_end":8828616,"line_start":1106,"line_end":1106,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2749},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2800},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_seek_ext.rs","byte_start":8829704,"byte_end":8829716,"line_start":33,"line_end":33,"column_start":15,"column_end":27},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":2801}],"decl_id":null,"docs":" An extension trait that adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2801},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_seek_ext.rs","byte_start":8830712,"byte_end":8830716,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":2800},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2803},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8832840,"byte_end":8832853,"line_start":65,"line_end":65,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2804},{"krate":0,"index":2806},{"krate":0,"index":2809},{"krate":0,"index":2813},{"krate":0,"index":2815},{"krate":0,"index":2817},{"krate":0,"index":2819},{"krate":0,"index":2821},{"krate":0,"index":2823},{"krate":0,"index":2825},{"krate":0,"index":2827},{"krate":0,"index":2829},{"krate":0,"index":2831},{"krate":0,"index":2833},{"krate":0,"index":2835},{"krate":0,"index":2837},{"krate":0,"index":2839},{"krate":0,"index":2841},{"krate":0,"index":2843},{"krate":0,"index":2845},{"krate":0,"index":2847},{"krate":0,"index":2811},{"krate":0,"index":2812}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2804},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8834695,"byte_end":8834700,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8837507,"byte_end":8837516,"line_start":185,"line_end":185,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2809},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8838858,"byte_end":8838867,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2813},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8840267,"byte_end":8840275,"line_start":269,"line_end":269,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2815},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8841536,"byte_end":8841544,"line_start":306,"line_end":306,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2817},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8842859,"byte_end":8842868,"line_start":344,"line_end":344,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8844181,"byte_end":8844190,"line_start":382,"line_end":382,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8845530,"byte_end":8845539,"line_start":420,"line_end":420,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2823},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8846874,"byte_end":8846883,"line_start":458,"line_end":458,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2825},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8848260,"byte_end":8848269,"line_start":496,"line_end":496,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8849656,"byte_end":8849665,"line_start":534,"line_end":534,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2829},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8851120,"byte_end":8851130,"line_start":574,"line_end":574,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2831},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8852520,"byte_end":8852530,"line_start":614,"line_end":614,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2833},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8853862,"byte_end":8853874,"line_start":653,"line_end":653,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2835},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8855201,"byte_end":8855213,"line_start":691,"line_end":691,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2837},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8856567,"byte_end":8856579,"line_start":729,"line_end":729,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2839},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8857928,"byte_end":8857940,"line_start":767,"line_end":767,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2841},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8859331,"byte_end":8859343,"line_start":805,"line_end":805,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8860744,"byte_end":8860756,"line_start":843,"line_end":843,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8862223,"byte_end":8862236,"line_start":883,"line_end":883,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2847},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8863638,"byte_end":8863651,"line_start":923,"line_end":923,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2811},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8864671,"byte_end":8864676,"line_start":956,"line_end":956,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2812},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8865966,"byte_end":8865974,"line_start":995,"line_end":995,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10566},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8867335,"byte_end":8867344,"line_start":27,"line_end":27,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":10568},{"krate":0,"index":10569},{"krate":0,"index":10570},{"krate":0,"index":10571}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2093},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8867680,"byte_end":8867683,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8867538,"byte_end":8867630,"line_start":37,"line_end":37,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8867635,"byte_end":8867668,"line_start":38,"line_end":38,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8867845,"byte_end":8867858,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8867768,"byte_end":8867833,"line_start":43,"line_end":43,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8868212,"byte_end":8868219,"line_start":57,"line_end":57,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8868075,"byte_end":8868121,"line_start":54,"line_end":54,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8868126,"byte_end":8868129,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8868134,"byte_end":8868200,"line_start":56,"line_end":56,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8868411,"byte_end":8868418,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8868266,"byte_end":8868320,"line_start":61,"line_end":61,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8868325,"byte_end":8868328,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8868333,"byte_end":8868399,"line_start":63,"line_end":63,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8868629,"byte_end":8868640,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8868477,"byte_end":8868538,"line_start":68,"line_end":68,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8868543,"byte_end":8868546,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8868551,"byte_end":8868617,"line_start":70,"line_end":70,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8868871,"byte_end":8868881,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8868720,"byte_end":8868783,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8868788,"byte_end":8868791,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8868796,"byte_end":8868859,"line_start":77,"line_end":77,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2099},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8869085,"byte_end":8869091,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8868925,"byte_end":8868981,"line_start":82,"line_end":82,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8868986,"byte_end":8868989,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8868994,"byte_end":8869073,"line_start":84,"line_end":84,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":10535},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8873030,"byte_end":8873039,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":10537}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2134},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8873318,"byte_end":8873321,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8873164,"byte_end":8873221,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8873226,"byte_end":8873229,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8873234,"byte_end":8873306,"line_start":28,"line_end":28,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8873653,"byte_end":8873666,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8873453,"byte_end":8873538,"line_start":35,"line_end":35,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8873543,"byte_end":8873556,"line_start":36,"line_end":36,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8873561,"byte_end":8873564,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8873569,"byte_end":8873641,"line_start":38,"line_end":38,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8874123,"byte_end":8874130,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8873978,"byte_end":8874028,"line_start":52,"line_end":52,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8874033,"byte_end":8874036,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8874041,"byte_end":8874111,"line_start":54,"line_end":54,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2137},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8874350,"byte_end":8874357,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8874197,"byte_end":8874255,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8874260,"byte_end":8874263,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8874268,"byte_end":8874338,"line_start":61,"line_end":61,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8874592,"byte_end":8874603,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8874432,"byte_end":8874497,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8874502,"byte_end":8874505,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8874510,"byte_end":8874580,"line_start":68,"line_end":68,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2139},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8874867,"byte_end":8874877,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8874712,"byte_end":8874779,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8874784,"byte_end":8874787,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8874792,"byte_end":8874855,"line_start":75,"line_end":75,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10489},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8878454,"byte_end":8878463,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":10491},{"krate":0,"index":10492},{"krate":0,"index":10493}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2177},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8878771,"byte_end":8878774,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8878629,"byte_end":8878721,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8878726,"byte_end":8878759,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8878936,"byte_end":8878949,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8878859,"byte_end":8878924,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2180},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8880031,"byte_end":8880038,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8879973,"byte_end":8880019,"line_start":84,"line_end":84,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2181},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8880229,"byte_end":8880236,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8880085,"byte_end":8880139,"line_start":89,"line_end":89,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8880144,"byte_end":8880147,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8880152,"byte_end":8880217,"line_start":91,"line_end":91,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2182},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8880446,"byte_end":8880457,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8880295,"byte_end":8880356,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8880361,"byte_end":8880364,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8880369,"byte_end":8880434,"line_start":98,"line_end":98,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2183},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8880688,"byte_end":8880698,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8880537,"byte_end":8880600,"line_start":103,"line_end":103,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8880605,"byte_end":8880608,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8880613,"byte_end":8880676,"line_start":105,"line_end":105,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2184},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8880810,"byte_end":8880816,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8880742,"byte_end":8880798,"line_start":110,"line_end":110,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":10440},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8883230,"byte_end":8883235,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10443},{"krate":0,"index":10444},{"krate":0,"index":10445}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8883676,"byte_end":8883683,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8883602,"byte_end":8883664,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8884015,"byte_end":8884022,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8883752,"byte_end":8883822,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8883827,"byte_end":8883830,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8883835,"byte_end":8883908,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8883913,"byte_end":8883986,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8883991,"byte_end":8884003,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8884381,"byte_end":8884392,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8884111,"byte_end":8884188,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8884193,"byte_end":8884196,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8884201,"byte_end":8884274,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8884279,"byte_end":8884352,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8884357,"byte_end":8884369,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8884589,"byte_end":8884599,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8884521,"byte_end":8884577,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":2865},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/copy.rs","byte_start":8887992,"byte_end":8887996,"line_start":56,"line_end":56,"column_start":18,"column_end":22},"name":"copy","qualname":"::io::util::copy::copy","value":"pub async fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W)\n-> /*impl Trait*/ where R: AsyncRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2871},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/copy_buf.rs","byte_start":8891801,"byte_end":8891809,"line_start":54,"line_end":54,"column_start":18,"column_end":26},"name":"copy_buf","qualname":"::io::util::copy_buf::copy_buf","value":"pub async fn copy_buf<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W)\n-> /*impl Trait*/ where R: AsyncBufRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2889},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/empty.rs","byte_start":8893618,"byte_end":8893623,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2890}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2891},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/empty.rs","byte_start":8894302,"byte_end":8894307,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":10398},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/flush.rs","byte_start":8895548,"byte_end":8895553,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":10401},{"krate":0,"index":10402}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10348},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8896987,"byte_end":8896992,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":10350},{"krate":0,"index":10351},{"krate":0,"index":10352},{"krate":0,"index":10353}],"decl_id":null,"docs":" Read lines from an [`AsyncBufRead`].","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2320},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8897839,"byte_end":8897848,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8897349,"byte_end":8897389,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8897394,"byte_end":8897397,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8897402,"byte_end":8897416,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8897421,"byte_end":8897424,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8897429,"byte_end":8897436,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8897441,"byte_end":8897475,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8897480,"byte_end":8897515,"line_start":54,"line_end":54,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8897520,"byte_end":8897523,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8897528,"byte_end":8897611,"line_start":56,"line_end":56,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8897616,"byte_end":8897656,"line_start":57,"line_end":57,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8897661,"byte_end":8897664,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8897669,"byte_end":8897722,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8897727,"byte_end":8897770,"line_start":60,"line_end":60,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8897775,"byte_end":8897780,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8897785,"byte_end":8897797,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8897802,"byte_end":8897809,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8897814,"byte_end":8897821,"line_start":64,"line_end":64,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2325},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8898075,"byte_end":8898082,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8898008,"byte_end":8898063,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2326},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8898201,"byte_end":8898208,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8898142,"byte_end":8898189,"line_start":76,"line_end":76,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2327},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8898495,"byte_end":8898505,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8898260,"byte_end":8898321,"line_start":81,"line_end":81,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8898326,"byte_end":8898329,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8898334,"byte_end":8898397,"line_start":83,"line_end":83,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8898402,"byte_end":8898483,"line_start":84,"line_end":84,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2330},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8899391,"byte_end":8899405,"line_start":110,"line_end":110,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next line in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next line in the stream.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8898598,"byte_end":8898640,"line_start":94,"line_end":94,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8898645,"byte_end":8898648,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8898653,"byte_end":8898677,"line_start":96,"line_end":96,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8898682,"byte_end":8898685,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next line is not yet available.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8898690,"byte_end":8898751,"line_start":98,"line_end":98,"column_start":5,"column_end":66}},{"value":"/  * `Poll::Ready(Ok(Some(line)))` if the next line is available.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8898756,"byte_end":8898823,"line_start":99,"line_end":99,"column_start":5,"column_end":72}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more lines in this stream.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8898828,"byte_end":8898901,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the next line.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8898906,"byte_end":8898989,"line_start":101,"line_end":101,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8898994,"byte_end":8898997,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8899002,"byte_end":8899074,"line_start":103,"line_end":103,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8899079,"byte_end":8899148,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8899153,"byte_end":8899197,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8899202,"byte_end":8899205,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_line`, only the `Waker` from","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8899210,"byte_end":8899284,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ the `Context` passed to the most recent call is scheduled to receive a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8899289,"byte_end":8899363,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ wakeup.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8899368,"byte_end":8899379,"line_start":109,"line_end":109,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2892},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8901133,"byte_end":8901145,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"DuplexStream","qualname":"::io::util::mem::DuplexStream","value":"DuplexStream {  }","parent":null,"children":[{"krate":0,"index":2893},{"krate":0,"index":2894}],"decl_id":null,"docs":" A bidirectional pipe to read and write bytes in memory.","sig":null,"attributes":[{"value":"/ A bidirectional pipe to read and write bytes in memory.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8900345,"byte_end":8900404,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8900405,"byte_end":8900408,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A pair of `DuplexStream`s are created together, and they act as a \"channel\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8900409,"byte_end":8900488,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ that can be used as in-memory IO types. Writing to one of the pairs will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8900489,"byte_end":8900565,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ allow that data to be read from the other, and vice versa.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8900566,"byte_end":8900628,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8900629,"byte_end":8900632,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8900633,"byte_end":8900646,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8900647,"byte_end":8900650,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8900651,"byte_end":8900658,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn ex() -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8900659,"byte_end":8900703,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/ # use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8900704,"byte_end":8900755,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ let (mut client, mut server) = tokio::io::duplex(64);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8900756,"byte_end":8900813,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8900814,"byte_end":8900817,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ client.write_all(b\"ping\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8900818,"byte_end":8900855,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8900856,"byte_end":8900859,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 4];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8900860,"byte_end":8900887,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/ server.read_exact(&mut buf).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8900888,"byte_end":8900927,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"ping\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8900928,"byte_end":8900958,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8900959,"byte_end":8900962,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ server.write_all(b\"pong\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8900963,"byte_end":8901000,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8901001,"byte_end":8901004,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ client.read_exact(&mut buf).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8901005,"byte_end":8901044,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"pong\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8901045,"byte_end":8901075,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8901076,"byte_end":8901088,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8901089,"byte_end":8901096,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8901097,"byte_end":8901104,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2348},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8902442,"byte_end":8902448,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"duplex","qualname":"::io::util::mem::duplex","value":"pub fn duplex(usize) -> (DuplexStream, DuplexStream)","parent":null,"children":[],"decl_id":null,"docs":" Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","sig":null,"attributes":[{"value":"/ Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8902208,"byte_end":8902291,"line_start":71,"line_end":71,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8902292,"byte_end":8902295,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The `max_buf_size` argument is the maximum amount of bytes that can be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8902296,"byte_end":8902370,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ written to a side before the write returns `Poll::Pending`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8902371,"byte_end":8902434,"line_start":74,"line_end":74,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":10297},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read.rs","byte_start":8907504,"byte_end":8907508,"line_start":34,"line_end":34,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":10300},{"krate":0,"index":10301},{"krate":0,"index":10302}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10237},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_buf.rs","byte_start":8908725,"byte_end":8908732,"line_start":27,"line_end":27,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":10241},{"krate":0,"index":10242},{"krate":0,"index":10243}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10182},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_exact.rs","byte_start":8910937,"byte_end":8910946,"line_start":34,"line_end":34,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":10185},{"krate":0,"index":10186},{"krate":0,"index":10187}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10138},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_int.rs","byte_start":8915970,"byte_end":8915976,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":10140},{"krate":0,"index":10141}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10101},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_int.rs","byte_start":8915992,"byte_end":8915998,"line_start":133,"line_end":133,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":10103},{"krate":0,"index":10104}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10052},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_int.rs","byte_start":8916014,"byte_end":8916021,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":10054},{"krate":0,"index":10055},{"krate":0,"index":10057},{"krate":0,"index":10058}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10003},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_int.rs","byte_start":8916046,"byte_end":8916053,"line_start":136,"line_end":136,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":10005},{"krate":0,"index":10006},{"krate":0,"index":10008},{"krate":0,"index":10009}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9954},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_int.rs","byte_start":8916078,"byte_end":8916085,"line_start":137,"line_end":137,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":9956},{"krate":0,"index":9957},{"krate":0,"index":9959},{"krate":0,"index":9960}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9905},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_int.rs","byte_start":8916110,"byte_end":8916118,"line_start":138,"line_end":138,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":9907},{"krate":0,"index":9908},{"krate":0,"index":9910},{"krate":0,"index":9911}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9856},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_int.rs","byte_start":8916146,"byte_end":8916153,"line_start":140,"line_end":140,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":9858},{"krate":0,"index":9859},{"krate":0,"index":9861},{"krate":0,"index":9862}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9807},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_int.rs","byte_start":8916178,"byte_end":8916185,"line_start":141,"line_end":141,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":9809},{"krate":0,"index":9810},{"krate":0,"index":9812},{"krate":0,"index":9813}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9758},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_int.rs","byte_start":8916210,"byte_end":8916217,"line_start":142,"line_end":142,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":9760},{"krate":0,"index":9761},{"krate":0,"index":9763},{"krate":0,"index":9764}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9709},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_int.rs","byte_start":8916242,"byte_end":8916250,"line_start":143,"line_end":143,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":9711},{"krate":0,"index":9712},{"krate":0,"index":9714},{"krate":0,"index":9715}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9660},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_int.rs","byte_start":8916278,"byte_end":8916287,"line_start":145,"line_end":145,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":9662},{"krate":0,"index":9663},{"krate":0,"index":9665},{"krate":0,"index":9666}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9611},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_int.rs","byte_start":8916315,"byte_end":8916324,"line_start":146,"line_end":146,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":9613},{"krate":0,"index":9614},{"krate":0,"index":9616},{"krate":0,"index":9617}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9562},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_int.rs","byte_start":8916352,"byte_end":8916361,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":9564},{"krate":0,"index":9565},{"krate":0,"index":9567},{"krate":0,"index":9568}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9513},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_int.rs","byte_start":8916389,"byte_end":8916399,"line_start":148,"line_end":148,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":9515},{"krate":0,"index":9516},{"krate":0,"index":9518},{"krate":0,"index":9519}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9464},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_int.rs","byte_start":8916430,"byte_end":8916439,"line_start":150,"line_end":150,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":9466},{"krate":0,"index":9467},{"krate":0,"index":9469},{"krate":0,"index":9470}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9415},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_int.rs","byte_start":8916467,"byte_end":8916476,"line_start":151,"line_end":151,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":9417},{"krate":0,"index":9418},{"krate":0,"index":9420},{"krate":0,"index":9421}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9366},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_int.rs","byte_start":8916504,"byte_end":8916513,"line_start":152,"line_end":152,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":9368},{"krate":0,"index":9369},{"krate":0,"index":9371},{"krate":0,"index":9372}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9317},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_int.rs","byte_start":8916541,"byte_end":8916551,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":9319},{"krate":0,"index":9320},{"krate":0,"index":9322},{"krate":0,"index":9323}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9263},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_line.rs","byte_start":8917068,"byte_end":8917076,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":9266},{"krate":0,"index":9267},{"krate":0,"index":9268},{"krate":0,"index":9269},{"krate":0,"index":9270}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9206},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_to_end.rs","byte_start":8921032,"byte_end":8921041,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":9209},{"krate":0,"index":9210},{"krate":0,"index":9211},{"krate":0,"index":9212}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9145},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_to_string.rs","byte_start":8929361,"byte_end":8929373,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":9148},{"krate":0,"index":9149},{"krate":0,"index":9150},{"krate":0,"index":9151},{"krate":0,"index":9152}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9084},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_until.rs","byte_start":8931783,"byte_end":8931792,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":9087},{"krate":0,"index":9088},{"krate":0,"index":9089},{"krate":0,"index":9090},{"krate":0,"index":9091}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3057},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/repeat.rs","byte_start":8934134,"byte_end":8934140,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3058}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3056},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/repeat.rs","byte_start":8934826,"byte_end":8934832,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9035},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/shutdown.rs","byte_start":8935871,"byte_end":8935879,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":9038},{"krate":0,"index":9039}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3061},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/sink.rs","byte_start":8937025,"byte_end":8937029,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":3062}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":3063},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/sink.rs","byte_start":8937870,"byte_end":8937874,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8985},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8939311,"byte_end":8939316,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":8987},{"krate":0,"index":8988},{"krate":0,"index":8989},{"krate":0,"index":8990}],"decl_id":null,"docs":" Splitter for the [`split`](crate::io::AsyncBufReadExt::split) method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2631},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940177,"byte_end":8940189,"line_start":61,"line_end":61,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8939665,"byte_end":8939708,"line_start":44,"line_end":44,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8939713,"byte_end":8939716,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8939721,"byte_end":8939735,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8939740,"byte_end":8939743,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8939748,"byte_end":8939755,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8939760,"byte_end":8939794,"line_start":49,"line_end":49,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8939799,"byte_end":8939834,"line_start":50,"line_end":50,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8939839,"byte_end":8939842,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8939847,"byte_end":8939930,"line_start":52,"line_end":52,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8939935,"byte_end":8939982,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8939987,"byte_end":8939990,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8939995,"byte_end":8940057,"line_start":55,"line_end":55,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940062,"byte_end":8940108,"line_start":56,"line_end":56,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940113,"byte_end":8940118,"line_start":57,"line_end":57,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940123,"byte_end":8940135,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940140,"byte_end":8940147,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940152,"byte_end":8940159,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2638},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8941226,"byte_end":8941243,"line_start":89,"line_end":89,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next segment in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next segment in the stream.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940401,"byte_end":8940446,"line_start":72,"line_end":72,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940451,"byte_end":8940454,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940459,"byte_end":8940483,"line_start":74,"line_end":74,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940488,"byte_end":8940491,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next segment is not yet available.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940496,"byte_end":8940560,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/  * `Poll::Ready(Ok(Some(segment)))` if the next segment is available.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940565,"byte_end":8940638,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more segments in this stream.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940643,"byte_end":8940719,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940724,"byte_end":8940796,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/    next segment.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940801,"byte_end":8940821,"line_start":80,"line_end":80,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940826,"byte_end":8940829,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940834,"byte_end":8940906,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940911,"byte_end":8940980,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940985,"byte_end":8941029,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8941034,"byte_end":8941037,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_segment`, only the `Waker`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8941042,"byte_end":8941114,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ from the `Context` passed to the most recent call is scheduled to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8941119,"byte_end":8941188,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8941193,"byte_end":8941214,"line_start":88,"line_end":88,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":8945},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8942400,"byte_end":8942404,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":8947},{"krate":0,"index":8948}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2657},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8942994,"byte_end":8942999,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8942691,"byte_end":8942744,"line_start":29,"line_end":29,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8942749,"byte_end":8942795,"line_start":30,"line_end":30,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8942800,"byte_end":8942803,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8942808,"byte_end":8942818,"line_start":32,"line_end":32,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8942823,"byte_end":8942826,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8942831,"byte_end":8942908,"line_start":34,"line_end":34,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8942913,"byte_end":8942982,"line_start":35,"line_end":35,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2658},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8943318,"byte_end":8943327,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8943047,"byte_end":8943118,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8943123,"byte_end":8943197,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8943202,"byte_end":8943277,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8943282,"byte_end":8943306,"line_start":43,"line_end":43,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8943450,"byte_end":8943457,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8943392,"byte_end":8943438,"line_start":48,"line_end":48,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2660},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8943749,"byte_end":8943756,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8943504,"byte_end":8943558,"line_start":53,"line_end":53,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8943563,"byte_end":8943566,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8943571,"byte_end":8943644,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8943649,"byte_end":8943721,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8943726,"byte_end":8943737,"line_start":57,"line_end":57,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2661},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8944067,"byte_end":8944078,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8943815,"byte_end":8943876,"line_start":62,"line_end":62,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8943881,"byte_end":8943884,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8943889,"byte_end":8943962,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8943967,"byte_end":8944039,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8944044,"byte_end":8944055,"line_start":66,"line_end":66,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2662},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8944224,"byte_end":8944234,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8944158,"byte_end":8944212,"line_start":71,"line_end":71,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":8894},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write.rs","byte_start":8946218,"byte_end":8946223,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":8897},{"krate":0,"index":8898},{"krate":0,"index":8899}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8841},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_all.rs","byte_start":8947361,"byte_end":8947369,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":8844},{"krate":0,"index":8845},{"krate":0,"index":8846}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8781},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_buf.rs","byte_start":8948810,"byte_end":8948818,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":8785},{"krate":0,"index":8786},{"krate":0,"index":8787}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8731},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_int.rs","byte_start":8953579,"byte_end":8953586,"line_start":125,"line_end":125,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":8733},{"krate":0,"index":8734},{"krate":0,"index":8735}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8690},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_int.rs","byte_start":8953602,"byte_end":8953609,"line_start":126,"line_end":126,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":8692},{"krate":0,"index":8693},{"krate":0,"index":8694}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8641},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_int.rs","byte_start":8953625,"byte_end":8953633,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":8643},{"krate":0,"index":8644},{"krate":0,"index":8646},{"krate":0,"index":8647}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8592},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_int.rs","byte_start":8953658,"byte_end":8953666,"line_start":129,"line_end":129,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":8594},{"krate":0,"index":8595},{"krate":0,"index":8597},{"krate":0,"index":8598}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8543},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_int.rs","byte_start":8953691,"byte_end":8953699,"line_start":130,"line_end":130,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":8545},{"krate":0,"index":8546},{"krate":0,"index":8548},{"krate":0,"index":8549}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8494},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_int.rs","byte_start":8953724,"byte_end":8953733,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":8496},{"krate":0,"index":8497},{"krate":0,"index":8499},{"krate":0,"index":8500}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8445},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_int.rs","byte_start":8953761,"byte_end":8953769,"line_start":133,"line_end":133,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":8447},{"krate":0,"index":8448},{"krate":0,"index":8450},{"krate":0,"index":8451}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8396},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_int.rs","byte_start":8953794,"byte_end":8953802,"line_start":134,"line_end":134,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":8398},{"krate":0,"index":8399},{"krate":0,"index":8401},{"krate":0,"index":8402}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8347},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_int.rs","byte_start":8953827,"byte_end":8953835,"line_start":135,"line_end":135,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":8349},{"krate":0,"index":8350},{"krate":0,"index":8352},{"krate":0,"index":8353}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8298},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_int.rs","byte_start":8953860,"byte_end":8953869,"line_start":136,"line_end":136,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":8300},{"krate":0,"index":8301},{"krate":0,"index":8303},{"krate":0,"index":8304}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8249},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_int.rs","byte_start":8953897,"byte_end":8953907,"line_start":138,"line_end":138,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":8251},{"krate":0,"index":8252},{"krate":0,"index":8254},{"krate":0,"index":8255}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8200},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_int.rs","byte_start":8953935,"byte_end":8953945,"line_start":139,"line_end":139,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":8202},{"krate":0,"index":8203},{"krate":0,"index":8205},{"krate":0,"index":8206}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8151},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_int.rs","byte_start":8953973,"byte_end":8953983,"line_start":140,"line_end":140,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":8153},{"krate":0,"index":8154},{"krate":0,"index":8156},{"krate":0,"index":8157}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8102},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_int.rs","byte_start":8954011,"byte_end":8954022,"line_start":141,"line_end":141,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":8104},{"krate":0,"index":8105},{"krate":0,"index":8107},{"krate":0,"index":8108}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8053},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_int.rs","byte_start":8954053,"byte_end":8954063,"line_start":143,"line_end":143,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":8055},{"krate":0,"index":8056},{"krate":0,"index":8058},{"krate":0,"index":8059}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8004},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_int.rs","byte_start":8954091,"byte_end":8954101,"line_start":144,"line_end":144,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":8006},{"krate":0,"index":8007},{"krate":0,"index":8009},{"krate":0,"index":8010}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7955},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_int.rs","byte_start":8954129,"byte_end":8954139,"line_start":145,"line_end":145,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":7957},{"krate":0,"index":7958},{"krate":0,"index":7960},{"krate":0,"index":7961}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7906},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_int.rs","byte_start":8954167,"byte_end":8954178,"line_start":146,"line_end":146,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":7908},{"krate":0,"index":7909},{"krate":0,"index":7911},{"krate":0,"index":7912}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":300},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":3274},{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3552},{"krate":0,"index":3553},{"krate":0,"index":3554},{"krate":0,"index":3555},{"krate":0,"index":3663},{"krate":0,"index":3726},{"krate":0,"index":4045},{"krate":0,"index":4046},{"krate":0,"index":4047}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":81310,"byte_end":81328,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":81330,"byte_end":81368,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":81369,"byte_end":81372,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":81373,"byte_end":81456,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":81457,"byte_end":81522,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":81523,"byte_end":81526,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":81527,"byte_end":81545,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":81546,"byte_end":81549,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":81550,"byte_end":81638,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":81639,"byte_end":81708,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":81709,"byte_end":81797,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":81798,"byte_end":81856,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":81857,"byte_end":81920,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":81921,"byte_end":81986,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":81988,"byte_end":81991,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":81992,"byte_end":82024,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":82025,"byte_end":82053,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":82054,"byte_end":82082,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":82083,"byte_end":82117,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":82118,"byte_end":82148,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":82149,"byte_end":82183,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":311},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":83405,"byte_end":83418,"line_start":20,"line_end":20,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":82817,"byte_end":82894,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":82895,"byte_end":82898,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":82899,"byte_end":82908,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":82909,"byte_end":82912,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":82913,"byte_end":82990,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":82991,"byte_end":82994,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":82995,"byte_end":83008,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":83009,"byte_end":83012,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":83013,"byte_end":83090,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":83091,"byte_end":83163,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":83164,"byte_end":83233,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":83234,"byte_end":83237,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":83238,"byte_end":83317,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":83318,"byte_end":83394,"line_start":19,"line_end":19,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":360},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":89858,"byte_end":89875,"line_start":248,"line_end":248,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":361},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":89891,"byte_end":89895,"line_start":249,"line_end":249,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":362},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":89956,"byte_end":89962,"line_start":250,"line_end":250,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":90034,"byte_end":90049,"line_start":252,"line_end":252,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self, Internal) -> Self::Future","parent":{"krate":0,"index":360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":364},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":90160,"byte_end":90168,"line_start":256,"line_end":256,"column_start":16,"column_end":24},"name":"Internal","qualname":"::net::addr::sealed::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":90105,"byte_end":90144,"line_start":255,"line_end":255,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3251},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":90410,"byte_end":90420,"line_start":268,"line_end":268,"column_start":20,"column_end":30},"name":"MaybeReady","qualname":"::net::addr::sealed::MaybeReady","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3266},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":90710,"byte_end":90713,"line_start":279,"line_end":279,"column_start":13,"column_end":16},"name":"One","qualname":"::net::addr::sealed::OneOrMore::One","value":"OneOrMore::One(option::IntoIter<SocketAddr>)","parent":{"krate":0,"index":3265},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3269},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":90757,"byte_end":90761,"line_start":280,"line_end":280,"column_start":13,"column_end":17},"name":"More","qualname":"::net::addr::sealed::OneOrMore::More","value":"OneOrMore::More(vec::IntoIter<SocketAddr>)","parent":{"krate":0,"index":3265},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3265},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":90686,"byte_end":90695,"line_start":278,"line_end":278,"column_start":18,"column_end":27},"name":"OneOrMore","qualname":"::net::addr::sealed::OneOrMore","value":"pub enum OneOrMore {\n    One(option::IntoIter<SocketAddr>),\n    More(vec::IntoIter<SocketAddr>),\n}","parent":null,"children":[{"krate":0,"index":3266},{"krate":0,"index":3269}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":3669},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/lookup_host.rs","byte_start":8955051,"byte_end":8955062,"line_start":32,"line_end":32,"column_start":18,"column_end":29},"name":"lookup_host","qualname":"::net::lookup_host::lookup_host","value":"pub async fn lookup_host<T>(T) -> /*impl Trait*/ where T: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Performs a DNS resolution.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":3276},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":3277},{"krate":0,"index":3321},{"krate":0,"index":3355},{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":12192},{"krate":0,"index":3440},{"krate":0,"index":3551}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/mod.rs","byte_start":8955215,"byte_end":8955236,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3674},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8957090,"byte_end":8957101,"line_start":52,"line_end":52,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":3675}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3295},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958600,"byte_end":8958604,"line_start":97,"line_end":97,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8957184,"byte_end":8957260,"line_start":58,"line_end":58,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8957265,"byte_end":8957268,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8957273,"byte_end":8957334,"line_start":60,"line_end":60,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8957339,"byte_end":8957342,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8957347,"byte_end":8957422,"line_start":62,"line_end":62,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8957427,"byte_end":8957503,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8957508,"byte_end":8957519,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8957524,"byte_end":8957527,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8957532,"byte_end":8957607,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8957612,"byte_end":8957688,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8957693,"byte_end":8957766,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8957771,"byte_end":8957844,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8957849,"byte_end":8957901,"line_start":70,"line_end":70,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8957906,"byte_end":8957909,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8957914,"byte_end":8957977,"line_start":72,"line_end":72,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8957982,"byte_end":8957985,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ To configure the socket before binding, you can use the [`TcpSocket`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8957990,"byte_end":8958063,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ type.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958068,"byte_end":8958077,"line_start":75,"line_end":75,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958082,"byte_end":8958085,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958090,"byte_end":8958144,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/ [`TcpSocket`]: struct@crate::net::TcpSocket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958149,"byte_end":8958196,"line_start":78,"line_end":78,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958201,"byte_end":8958204,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958209,"byte_end":8958223,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958228,"byte_end":8958231,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958236,"byte_end":8958249,"line_start":82,"line_end":82,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958254,"byte_end":8958286,"line_start":83,"line_end":83,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958291,"byte_end":8958294,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958299,"byte_end":8958315,"line_start":85,"line_end":85,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958320,"byte_end":8958323,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958328,"byte_end":8958346,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958351,"byte_end":8958390,"line_start":88,"line_end":88,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958395,"byte_end":8958461,"line_start":89,"line_end":89,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958466,"byte_end":8958469,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958474,"byte_end":8958501,"line_start":91,"line_end":91,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958506,"byte_end":8958509,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958514,"byte_end":8958541,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958546,"byte_end":8958560,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958565,"byte_end":8958570,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8958575,"byte_end":8958582,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3301},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8960170,"byte_end":8960176,"line_start":149,"line_end":149,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959315,"byte_end":8959372,"line_start":122,"line_end":122,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959377,"byte_end":8959380,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959385,"byte_end":8959460,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959465,"byte_end":8959535,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959540,"byte_end":8959569,"line_start":126,"line_end":126,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959574,"byte_end":8959577,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959582,"byte_end":8959629,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959634,"byte_end":8959637,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959642,"byte_end":8959656,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959661,"byte_end":8959664,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959669,"byte_end":8959682,"line_start":132,"line_end":132,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959687,"byte_end":8959719,"line_start":133,"line_end":133,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959724,"byte_end":8959727,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959732,"byte_end":8959748,"line_start":135,"line_end":135,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959753,"byte_end":8959756,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959761,"byte_end":8959779,"line_start":137,"line_end":137,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959784,"byte_end":8959823,"line_start":138,"line_end":138,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959828,"byte_end":8959894,"line_start":139,"line_end":139,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959899,"byte_end":8959902,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959907,"byte_end":8959946,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8959951,"byte_end":8960021,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8960026,"byte_end":8960089,"line_start":143,"line_end":143,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8960094,"byte_end":8960103,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8960108,"byte_end":8960111,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8960116,"byte_end":8960130,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8960135,"byte_end":8960140,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8960145,"byte_end":8960152,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3305},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8960844,"byte_end":8960855,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8960466,"byte_end":8960529,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8960534,"byte_end":8960537,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8960542,"byte_end":8960618,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.  Note that on multiple calls","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8960623,"byte_end":8960697,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ to `poll_accept`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8960702,"byte_end":8960778,"line_start":164,"line_end":164,"column_start":5,"column_end":81}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8960783,"byte_end":8960832,"line_start":165,"line_end":165,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3306},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962901,"byte_end":8962909,"line_start":218,"line_end":218,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpListener` from a `std::net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates new `TcpListener` from a `std::net::TcpListener`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8961463,"byte_end":8961524,"line_start":183,"line_end":183,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8961529,"byte_end":8961532,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8961537,"byte_end":8961609,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8961614,"byte_end":8961690,"line_start":186,"line_end":186,"column_start":5,"column_end":81}},{"value":"/ about the underlying listener; it is left up to the user to set it in","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8961695,"byte_end":8961768,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8961773,"byte_end":8961795,"line_start":188,"line_end":188,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8961800,"byte_end":8961803,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `socket2` crate and the `Socket`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8961808,"byte_end":8961882,"line_start":190,"line_end":190,"column_start":5,"column_end":79}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8961887,"byte_end":8961963,"line_start":191,"line_end":191,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8961968,"byte_end":8962033,"line_start":192,"line_end":192,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962038,"byte_end":8962093,"line_start":193,"line_end":193,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962098,"byte_end":8962101,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962106,"byte_end":8962109,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962114,"byte_end":8962128,"line_start":196,"line_end":196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962133,"byte_end":8962136,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962141,"byte_end":8962159,"line_start":198,"line_end":198,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962164,"byte_end":8962190,"line_start":199,"line_end":199,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962195,"byte_end":8962227,"line_start":200,"line_end":200,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962232,"byte_end":8962235,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962240,"byte_end":8962258,"line_start":202,"line_end":202,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962263,"byte_end":8962314,"line_start":203,"line_end":203,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962319,"byte_end":8962390,"line_start":204,"line_end":204,"column_start":5,"column_end":76}},{"value":"/     std_listener.set_nonblocking(true)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962395,"byte_end":8962439,"line_start":205,"line_end":205,"column_start":5,"column_end":49}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962444,"byte_end":8962504,"line_start":206,"line_end":206,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962509,"byte_end":8962523,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962528,"byte_end":8962533,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962538,"byte_end":8962545,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962550,"byte_end":8962553,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962558,"byte_end":8962570,"line_start":211,"line_end":211,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962575,"byte_end":8962578,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962583,"byte_end":8962643,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962648,"byte_end":8962651,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962656,"byte_end":8962726,"line_start":215,"line_end":215,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962731,"byte_end":8962804,"line_start":216,"line_end":216,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8962809,"byte_end":8962889,"line_start":217,"line_end":217,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3308},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964003,"byte_end":8964013,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963277,"byte_end":8963338,"line_start":229,"line_end":229,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963343,"byte_end":8963346,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963351,"byte_end":8963424,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963429,"byte_end":8963463,"line_start":232,"line_end":232,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963468,"byte_end":8963471,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963476,"byte_end":8963490,"line_start":234,"line_end":234,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963495,"byte_end":8963498,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963503,"byte_end":8963521,"line_start":236,"line_end":236,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963526,"byte_end":8963558,"line_start":237,"line_end":237,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963563,"byte_end":8963566,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963571,"byte_end":8963587,"line_start":239,"line_end":239,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963592,"byte_end":8963647,"line_start":240,"line_end":240,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963652,"byte_end":8963655,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963660,"byte_end":8963678,"line_start":242,"line_end":242,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963683,"byte_end":8963722,"line_start":243,"line_end":243,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963727,"byte_end":8963793,"line_start":244,"line_end":244,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963798,"byte_end":8963801,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963806,"byte_end":8963848,"line_start":246,"line_end":246,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963853,"byte_end":8963942,"line_start":247,"line_end":247,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963947,"byte_end":8963950,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963955,"byte_end":8963969,"line_start":249,"line_end":249,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963974,"byte_end":8963979,"line_start":250,"line_end":250,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8963984,"byte_end":8963991,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3309},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964706,"byte_end":8964709,"line_start":279,"line_end":279,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964089,"byte_end":8964147,"line_start":256,"line_end":256,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964152,"byte_end":8964155,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964160,"byte_end":8964220,"line_start":258,"line_end":258,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964225,"byte_end":8964228,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964233,"byte_end":8964270,"line_start":260,"line_end":260,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964275,"byte_end":8964278,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964283,"byte_end":8964297,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964302,"byte_end":8964305,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964310,"byte_end":8964323,"line_start":264,"line_end":264,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964328,"byte_end":8964360,"line_start":265,"line_end":265,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964365,"byte_end":8964368,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964373,"byte_end":8964389,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964394,"byte_end":8964397,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964402,"byte_end":8964420,"line_start":269,"line_end":269,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964425,"byte_end":8964464,"line_start":270,"line_end":270,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964469,"byte_end":8964531,"line_start":271,"line_end":271,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964536,"byte_end":8964539,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964544,"byte_end":8964601,"line_start":273,"line_end":273,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964606,"byte_end":8964646,"line_start":274,"line_end":274,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964651,"byte_end":8964654,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964659,"byte_end":8964672,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964677,"byte_end":8964682,"line_start":277,"line_end":277,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964687,"byte_end":8964694,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3310},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8965338,"byte_end":8965345,"line_start":304,"line_end":304,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964771,"byte_end":8964829,"line_start":283,"line_end":283,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964834,"byte_end":8964837,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964842,"byte_end":8964918,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964923,"byte_end":8964944,"line_start":286,"line_end":286,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964949,"byte_end":8964952,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964957,"byte_end":8964971,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964976,"byte_end":8964979,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8964984,"byte_end":8964997,"line_start":290,"line_end":290,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8965002,"byte_end":8965034,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8965039,"byte_end":8965042,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8965047,"byte_end":8965063,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8965068,"byte_end":8965071,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8965076,"byte_end":8965094,"line_start":295,"line_end":295,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8965099,"byte_end":8965138,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8965143,"byte_end":8965206,"line_start":297,"line_end":297,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8965211,"byte_end":8965214,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8965219,"byte_end":8965277,"line_start":299,"line_end":299,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8965282,"byte_end":8965285,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8965290,"byte_end":8965304,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8965309,"byte_end":8965314,"line_start":302,"line_end":302,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8965319,"byte_end":8965326,"line_start":303,"line_end":303,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3676},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8969471,"byte_end":8969480,"line_start":84,"line_end":84,"column_start":16,"column_end":25},"name":"TcpSocket","qualname":"::net::tcp::socket::TcpSocket","value":"TcpSocket {  }","parent":null,"children":[{"krate":0,"index":3677}],"decl_id":null,"docs":" A TCP socket that has not yet been converted to a `TcpStream` or\n `TcpListener`.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3333},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970344,"byte_end":8970350,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<TcpSocket>::new_v4","value":"pub fn new_v4() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new socket configured for IPv4.","sig":null,"attributes":[{"value":"/ Create a new socket configured for IPv4.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8969549,"byte_end":8969593,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8969598,"byte_end":8969601,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Calls `socket(2)` with `AF_INET` and `SOCK_STREAM`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8969606,"byte_end":8969661,"line_start":92,"line_end":92,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8969666,"byte_end":8969669,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8969674,"byte_end":8969687,"line_start":94,"line_end":94,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8969692,"byte_end":8969695,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On success, the newly created `TcpSocket` is returned. If an error is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8969700,"byte_end":8969773,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ encountered, it is returned instead.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8969778,"byte_end":8969818,"line_start":97,"line_end":97,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8969823,"byte_end":8969826,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8969831,"byte_end":8969845,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8969850,"byte_end":8969853,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Create a new IPv4 socket and start listening.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8969858,"byte_end":8969907,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8969912,"byte_end":8969915,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8969920,"byte_end":8969933,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8969938,"byte_end":8969968,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8969973,"byte_end":8969976,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8969981,"byte_end":8969997,"line_start":106,"line_end":106,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970002,"byte_end":8970005,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970010,"byte_end":8970028,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970033,"byte_end":8970072,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970077,"byte_end":8970130,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970135,"byte_end":8970177,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970182,"byte_end":8970209,"line_start":112,"line_end":112,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970214,"byte_end":8970217,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(128)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970222,"byte_end":8970265,"line_start":114,"line_end":114,"column_start":5,"column_end":48}},{"value":"/ # drop(listener);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970270,"byte_end":8970291,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970296,"byte_end":8970310,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970315,"byte_end":8970320,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970325,"byte_end":8970332,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3334},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971267,"byte_end":8971273,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<TcpSocket>::new_v6","value":"pub fn new_v6() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new socket configured for IPv6.","sig":null,"attributes":[{"value":"/ Create a new socket configured for IPv6.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970475,"byte_end":8970519,"line_start":124,"line_end":124,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970524,"byte_end":8970527,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Calls `socket(2)` with `AF_INET6` and `SOCK_STREAM`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970532,"byte_end":8970588,"line_start":126,"line_end":126,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970593,"byte_end":8970596,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970601,"byte_end":8970614,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970619,"byte_end":8970622,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ On success, the newly created `TcpSocket` is returned. If an error is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970627,"byte_end":8970700,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ encountered, it is returned instead.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970705,"byte_end":8970745,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970750,"byte_end":8970753,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970758,"byte_end":8970772,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970777,"byte_end":8970780,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Create a new IPv6 socket and start listening.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970785,"byte_end":8970834,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970839,"byte_end":8970842,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970847,"byte_end":8970860,"line_start":137,"line_end":137,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970865,"byte_end":8970895,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970900,"byte_end":8970903,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970908,"byte_end":8970924,"line_start":140,"line_end":140,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970929,"byte_end":8970932,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970937,"byte_end":8970955,"line_start":142,"line_end":142,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8970960,"byte_end":8970999,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/     let addr = \"[::1]:8080\".parse().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971004,"byte_end":8971053,"line_start":144,"line_end":144,"column_start":5,"column_end":54}},{"value":"/     let socket = TcpSocket::new_v6()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971058,"byte_end":8971100,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971105,"byte_end":8971132,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971137,"byte_end":8971140,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(128)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971145,"byte_end":8971188,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/ # drop(listener);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971193,"byte_end":8971214,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971219,"byte_end":8971233,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971238,"byte_end":8971243,"line_start":151,"line_end":151,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971248,"byte_end":8971255,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3335},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972088,"byte_end":8972101,"line_start":184,"line_end":184,"column_start":12,"column_end":25},"name":"set_reuseaddr","qualname":"<TcpSocket>::set_reuseaddr","value":"pub fn set_reuseaddr(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Allow the socket to bind to an in-use address.","sig":null,"attributes":[{"value":"/ Allow the socket to bind to an in-use address.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971398,"byte_end":8971448,"line_start":158,"line_end":158,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971453,"byte_end":8971456,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Behavior is platform specific. Refer to the target platform's","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971461,"byte_end":8971526,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971531,"byte_end":8971566,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971571,"byte_end":8971574,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971579,"byte_end":8971593,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971598,"byte_end":8971601,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971606,"byte_end":8971619,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971624,"byte_end":8971654,"line_start":166,"line_end":166,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971659,"byte_end":8971662,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971667,"byte_end":8971683,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971688,"byte_end":8971691,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971696,"byte_end":8971714,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971719,"byte_end":8971758,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971763,"byte_end":8971816,"line_start":172,"line_end":172,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971821,"byte_end":8971824,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971829,"byte_end":8971871,"line_start":174,"line_end":174,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseaddr(true)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971876,"byte_end":8971912,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971917,"byte_end":8971944,"line_start":176,"line_end":176,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971949,"byte_end":8971952,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8971957,"byte_end":8972001,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972006,"byte_end":8972027,"line_start":179,"line_end":179,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972032,"byte_end":8972035,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972040,"byte_end":8972054,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972059,"byte_end":8972064,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972069,"byte_end":8972076,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3336},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972800,"byte_end":8972809,"line_start":210,"line_end":210,"column_start":12,"column_end":21},"name":"reuseaddr","qualname":"<TcpSocket>::reuseaddr","value":"pub fn reuseaddr(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the value set for `SO_REUSEADDR` on this socket","sig":null,"attributes":[{"value":"/ Retrieves the value set for `SO_REUSEADDR` on this socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972201,"byte_end":8972262,"line_start":188,"line_end":188,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972267,"byte_end":8972270,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972275,"byte_end":8972289,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972294,"byte_end":8972297,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972302,"byte_end":8972315,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972320,"byte_end":8972350,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972355,"byte_end":8972358,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972363,"byte_end":8972379,"line_start":195,"line_end":195,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972384,"byte_end":8972387,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972392,"byte_end":8972410,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972415,"byte_end":8972454,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972459,"byte_end":8972512,"line_start":199,"line_end":199,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972517,"byte_end":8972520,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972525,"byte_end":8972567,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseaddr(true)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972572,"byte_end":8972608,"line_start":202,"line_end":202,"column_start":5,"column_end":41}},{"value":"/     assert!(socket.reuseaddr().unwrap());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972613,"byte_end":8972658,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972663,"byte_end":8972690,"line_start":204,"line_end":204,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972695,"byte_end":8972698,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972703,"byte_end":8972747,"line_start":206,"line_end":206,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972752,"byte_end":8972766,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972771,"byte_end":8972776,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972781,"byte_end":8972788,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973810,"byte_end":8973823,"line_start":244,"line_end":244,"column_start":12,"column_end":25},"name":"set_reuseport","qualname":"<TcpSocket>::set_reuseport","value":"pub fn set_reuseport(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Allow the socket to bind to an in-use port. Only available for unix systems\n (excluding Solaris & Illumos).","sig":null,"attributes":[{"value":"/ Allow the socket to bind to an in-use port. Only available for unix systems","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972885,"byte_end":8972964,"line_start":214,"line_end":214,"column_start":5,"column_end":84}},{"value":"/ (excluding Solaris & Illumos).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8972969,"byte_end":8973003,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973008,"byte_end":8973011,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Behavior is platform specific. Refer to the target platform's","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973016,"byte_end":8973081,"line_start":217,"line_end":217,"column_start":5,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973086,"byte_end":8973121,"line_start":218,"line_end":218,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973126,"byte_end":8973129,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973134,"byte_end":8973148,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973153,"byte_end":8973156,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973161,"byte_end":8973174,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973179,"byte_end":8973209,"line_start":223,"line_end":223,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973214,"byte_end":8973217,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973222,"byte_end":8973238,"line_start":225,"line_end":225,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973243,"byte_end":8973246,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973251,"byte_end":8973269,"line_start":227,"line_end":227,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973274,"byte_end":8973313,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973318,"byte_end":8973371,"line_start":229,"line_end":229,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973376,"byte_end":8973379,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973384,"byte_end":8973426,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseport(true)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973431,"byte_end":8973467,"line_start":232,"line_end":232,"column_start":5,"column_end":41}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973472,"byte_end":8973499,"line_start":233,"line_end":233,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973504,"byte_end":8973507,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973512,"byte_end":8973556,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973561,"byte_end":8973575,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973580,"byte_end":8973585,"line_start":237,"line_end":237,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973590,"byte_end":8973597,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"cfg(all(unix, not(target_os = \"solaris\"), not(target_os = \"illumos\")))","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973602,"byte_end":8973675,"line_start":239,"line_end":239,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3338},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974898,"byte_end":8974907,"line_start":279,"line_end":279,"column_start":12,"column_end":21},"name":"reuseport","qualname":"<TcpSocket>::reuseport","value":"pub fn reuseport(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Allow the socket to bind to an in-use port. Only available for unix systems\n (excluding Solaris & Illumos).","sig":null,"attributes":[{"value":"/ Allow the socket to bind to an in-use port. Only available for unix systems","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8973923,"byte_end":8974002,"line_start":248,"line_end":248,"column_start":5,"column_end":84}},{"value":"/ (excluding Solaris & Illumos).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974007,"byte_end":8974041,"line_start":249,"line_end":249,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974046,"byte_end":8974049,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Behavior is platform specific. Refer to the target platform's","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974054,"byte_end":8974119,"line_start":251,"line_end":251,"column_start":5,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974124,"byte_end":8974159,"line_start":252,"line_end":252,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974164,"byte_end":8974167,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974172,"byte_end":8974186,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974191,"byte_end":8974194,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974199,"byte_end":8974212,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974217,"byte_end":8974247,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974252,"byte_end":8974255,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974260,"byte_end":8974276,"line_start":259,"line_end":259,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974281,"byte_end":8974284,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974289,"byte_end":8974307,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974312,"byte_end":8974351,"line_start":262,"line_end":262,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974356,"byte_end":8974409,"line_start":263,"line_end":263,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974414,"byte_end":8974417,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974422,"byte_end":8974464,"line_start":265,"line_end":265,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseport(true)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974469,"byte_end":8974505,"line_start":266,"line_end":266,"column_start":5,"column_end":41}},{"value":"/     assert!(socket.reuseport().unwrap());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974510,"byte_end":8974555,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974560,"byte_end":8974587,"line_start":268,"line_end":268,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974592,"byte_end":8974595,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974600,"byte_end":8974644,"line_start":270,"line_end":270,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974649,"byte_end":8974663,"line_start":271,"line_end":271,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974668,"byte_end":8974673,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974678,"byte_end":8974685,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"cfg(all(unix, not(target_os = \"solaris\"), not(target_os = \"illumos\")))","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974690,"byte_end":8974763,"line_start":274,"line_end":274,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3339},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8975135,"byte_end":8975155,"line_start":286,"line_end":286,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpSocket>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the TCP send buffer on this socket.","sig":null,"attributes":[{"value":"/ Sets the size of the TCP send buffer on this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8974983,"byte_end":8975039,"line_start":283,"line_end":283,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8975044,"byte_end":8975047,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this sets the `SO_SNDBUF` socket option.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8975052,"byte_end":8975123,"line_start":285,"line_end":285,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8976478,"byte_end":8976494,"line_start":313,"line_end":313,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpSocket>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the TCP send buffer for this socket.","sig":null,"attributes":[{"value":"/ Returns the size of the TCP send buffer for this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8975251,"byte_end":8975311,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8975316,"byte_end":8975319,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this is the value of the `SO_SNDBUF` socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8975324,"byte_end":8975398,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ option.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8975403,"byte_end":8975414,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8975419,"byte_end":8975422,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_send_buffer_size`] has been called on this socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8975427,"byte_end":8975499,"line_start":295,"line_end":295,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8975504,"byte_end":8975578,"line_start":296,"line_end":296,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8975583,"byte_end":8975651,"line_start":297,"line_end":297,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8975656,"byte_end":8975678,"line_start":298,"line_end":298,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8975683,"byte_end":8975686,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8975691,"byte_end":8975766,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/   send buffer, and will clamp the provided value if it is below the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8975771,"byte_end":8975842,"line_start":301,"line_end":301,"column_start":5,"column_end":76}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8975847,"byte_end":8975923,"line_start":302,"line_end":302,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8975928,"byte_end":8975947,"line_start":303,"line_end":303,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8975952,"byte_end":8976027,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8976032,"byte_end":8976107,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8976112,"byte_end":8976128,"line_start":306,"line_end":306,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8976133,"byte_end":8976198,"line_start":307,"line_end":307,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8976203,"byte_end":8976268,"line_start":308,"line_end":308,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8976273,"byte_end":8976345,"line_start":309,"line_end":309,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8976350,"byte_end":8976395,"line_start":310,"line_end":310,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8976400,"byte_end":8976403,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: #method.set_send_buffer_size","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8976408,"byte_end":8976466,"line_start":312,"line_end":312,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8976731,"byte_end":8976751,"line_start":320,"line_end":320,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpSocket>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the TCP receive buffer on this socket.","sig":null,"attributes":[{"value":"/ Sets the size of the TCP receive buffer on this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8976576,"byte_end":8976635,"line_start":317,"line_end":317,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8976640,"byte_end":8976643,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this sets the `SO_RCVBUF` socket option.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8976648,"byte_end":8976719,"line_start":319,"line_end":319,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3342},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978080,"byte_end":8978096,"line_start":347,"line_end":347,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpSocket>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the TCP receive buffer for this socket.","sig":null,"attributes":[{"value":"/ Returns the size of the TCP receive buffer for this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8976847,"byte_end":8976910,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8976915,"byte_end":8976918,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this is the value of the `SO_RCVBUF` socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8976923,"byte_end":8976997,"line_start":326,"line_end":326,"column_start":5,"column_end":79}},{"value":"/ option.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8977002,"byte_end":8977013,"line_start":327,"line_end":327,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8977018,"byte_end":8977021,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_recv_buffer_size`] has been called on this socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8977026,"byte_end":8977098,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8977103,"byte_end":8977177,"line_start":330,"line_end":330,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8977182,"byte_end":8977250,"line_start":331,"line_end":331,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8977255,"byte_end":8977277,"line_start":332,"line_end":332,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8977282,"byte_end":8977285,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8977290,"byte_end":8977365,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/   receive buffer, and will clamp the provided value if it is below the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8977370,"byte_end":8977444,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8977449,"byte_end":8977525,"line_start":336,"line_end":336,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8977530,"byte_end":8977549,"line_start":337,"line_end":337,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8977554,"byte_end":8977629,"line_start":338,"line_end":338,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8977634,"byte_end":8977709,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8977714,"byte_end":8977730,"line_start":340,"line_end":340,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8977735,"byte_end":8977800,"line_start":341,"line_end":341,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8977805,"byte_end":8977870,"line_start":342,"line_end":342,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8977875,"byte_end":8977947,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8977952,"byte_end":8977997,"line_start":344,"line_end":344,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978002,"byte_end":8978005,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: #method.set_recv_buffer_size","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978010,"byte_end":8978068,"line_start":346,"line_end":346,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978804,"byte_end":8978814,"line_start":373,"line_end":373,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the local address of this socket.","sig":null,"attributes":[{"value":"/ Get the local address of this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978178,"byte_end":8978219,"line_start":351,"line_end":351,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978224,"byte_end":8978227,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Will fail on windows if called before `bind`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978232,"byte_end":8978281,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978286,"byte_end":8978289,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978294,"byte_end":8978308,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978313,"byte_end":8978316,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978321,"byte_end":8978334,"line_start":357,"line_end":357,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978339,"byte_end":8978369,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978374,"byte_end":8978377,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978382,"byte_end":8978398,"line_start":360,"line_end":360,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978403,"byte_end":8978406,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978411,"byte_end":8978429,"line_start":362,"line_end":362,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978434,"byte_end":8978473,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978478,"byte_end":8978531,"line_start":364,"line_end":364,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978536,"byte_end":8978539,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978544,"byte_end":8978586,"line_start":366,"line_end":366,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978591,"byte_end":8978618,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(socket.local_addr().unwrap().to_string(), \"127.0.0.1:8080\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978623,"byte_end":8978702,"line_start":368,"line_end":368,"column_start":5,"column_end":84}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978707,"byte_end":8978751,"line_start":369,"line_end":369,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978756,"byte_end":8978770,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978775,"byte_end":8978780,"line_start":371,"line_end":371,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978785,"byte_end":8978792,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3344},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979644,"byte_end":8979648,"line_start":405,"line_end":405,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpSocket>::bind","value":"pub fn bind(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Bind the socket to the given address.","sig":null,"attributes":[{"value":"/ Bind the socket to the given address.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978896,"byte_end":8978937,"line_start":377,"line_end":377,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978942,"byte_end":8978945,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This calls the `bind(2)` operating-system function. Behavior is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8978950,"byte_end":8979017,"line_start":379,"line_end":379,"column_start":5,"column_end":72}},{"value":"/ platform specific. Refer to the target platform's documentation for more","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979022,"byte_end":8979098,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979103,"byte_end":8979115,"line_start":381,"line_end":381,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979120,"byte_end":8979123,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979128,"byte_end":8979142,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979147,"byte_end":8979150,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Bind a socket before listening.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979155,"byte_end":8979190,"line_start":385,"line_end":385,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979195,"byte_end":8979198,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979203,"byte_end":8979216,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979221,"byte_end":8979251,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979256,"byte_end":8979259,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979264,"byte_end":8979280,"line_start":390,"line_end":390,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979285,"byte_end":8979288,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979293,"byte_end":8979311,"line_start":392,"line_end":392,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979316,"byte_end":8979355,"line_start":393,"line_end":393,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979360,"byte_end":8979413,"line_start":394,"line_end":394,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979418,"byte_end":8979421,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979426,"byte_end":8979468,"line_start":396,"line_end":396,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979473,"byte_end":8979500,"line_start":397,"line_end":397,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979505,"byte_end":8979508,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979513,"byte_end":8979557,"line_start":399,"line_end":399,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979562,"byte_end":8979583,"line_start":400,"line_end":400,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979588,"byte_end":8979591,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979596,"byte_end":8979610,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979615,"byte_end":8979620,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979625,"byte_end":8979632,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980716,"byte_end":8980723,"line_start":441,"line_end":441,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpSocket>::connect","value":"pub async fn connect(Self, SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Establish a TCP connection with a peer at the specified socket address.","sig":null,"attributes":[{"value":"/ Establish a TCP connection with a peer at the specified socket address.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979735,"byte_end":8979810,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979815,"byte_end":8979818,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ The `TcpSocket` is consumed. Once the connection is established, a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979823,"byte_end":8979893,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ connected [`TcpStream`] is returned. If the connection fails, the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979898,"byte_end":8979967,"line_start":412,"line_end":412,"column_start":5,"column_end":74}},{"value":"/ encountered error is returned.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8979972,"byte_end":8980006,"line_start":413,"line_end":413,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980011,"byte_end":8980014,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980019,"byte_end":8980047,"line_start":415,"line_end":415,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980052,"byte_end":8980055,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This calls the `connect(2)` operating-system function. Behavior is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980060,"byte_end":8980130,"line_start":417,"line_end":417,"column_start":5,"column_end":75}},{"value":"/ platform specific. Refer to the target platform's documentation for more","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980135,"byte_end":8980211,"line_start":418,"line_end":418,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980216,"byte_end":8980228,"line_start":419,"line_end":419,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980233,"byte_end":8980236,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980241,"byte_end":8980255,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980260,"byte_end":8980263,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Connecting to a peer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980268,"byte_end":8980293,"line_start":423,"line_end":423,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980298,"byte_end":8980301,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980306,"byte_end":8980319,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980324,"byte_end":8980354,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980359,"byte_end":8980362,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980367,"byte_end":8980383,"line_start":428,"line_end":428,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980388,"byte_end":8980391,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980396,"byte_end":8980414,"line_start":430,"line_end":430,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980419,"byte_end":8980458,"line_start":431,"line_end":431,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980463,"byte_end":8980516,"line_start":432,"line_end":432,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980521,"byte_end":8980524,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980529,"byte_end":8980571,"line_start":434,"line_end":434,"column_start":5,"column_end":47}},{"value":"/     let stream = socket.connect(addr).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980576,"byte_end":8980625,"line_start":435,"line_end":435,"column_start":5,"column_end":54}},{"value":"/ # drop(stream);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980630,"byte_end":8980649,"line_start":436,"line_end":436,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980654,"byte_end":8980657,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980662,"byte_end":8980676,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980681,"byte_end":8980686,"line_start":439,"line_end":439,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980691,"byte_end":8980698,"line_start":440,"line_end":440,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8982021,"byte_end":8982027,"line_start":481,"line_end":481,"column_start":12,"column_end":18},"name":"listen","qualname":"<TcpSocket>::listen","value":"pub fn listen(Self, u32) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convert the socket into a `TcpListener`.","sig":null,"attributes":[{"value":"/ Convert the socket into a `TcpListener`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980873,"byte_end":8980917,"line_start":446,"line_end":446,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980922,"byte_end":8980925,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ `backlog` defines the maximum number of pending connections are queued","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8980930,"byte_end":8981004,"line_start":448,"line_end":448,"column_start":5,"column_end":79}},{"value":"/ by the operating system at any given time. Connection are removed from","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981009,"byte_end":8981083,"line_start":449,"line_end":449,"column_start":5,"column_end":79}},{"value":"/ the queue with [`TcpListener::accept`]. When the queue is full, the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981088,"byte_end":8981159,"line_start":450,"line_end":450,"column_start":5,"column_end":76}},{"value":"/ operationg-system will start rejecting connections.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981164,"byte_end":8981219,"line_start":451,"line_end":451,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981224,"byte_end":8981227,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener::accept`]: TcpListener::accept","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981232,"byte_end":8981280,"line_start":453,"line_end":453,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981285,"byte_end":8981288,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ This calls the `listen(2)` operating-system function, marking the socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981293,"byte_end":8981369,"line_start":455,"line_end":455,"column_start":5,"column_end":81}},{"value":"/ as a passive socket. Behavior is platform specific. Refer to the target","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981374,"byte_end":8981449,"line_start":456,"line_end":456,"column_start":5,"column_end":80}},{"value":"/ platform's documentation for more details.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981454,"byte_end":8981500,"line_start":457,"line_end":457,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981505,"byte_end":8981508,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981513,"byte_end":8981527,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981532,"byte_end":8981535,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Create a `TcpListener`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981540,"byte_end":8981567,"line_start":461,"line_end":461,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981572,"byte_end":8981575,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981580,"byte_end":8981593,"line_start":463,"line_end":463,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981598,"byte_end":8981628,"line_start":464,"line_end":464,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981633,"byte_end":8981636,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981641,"byte_end":8981657,"line_start":466,"line_end":466,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981662,"byte_end":8981665,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981670,"byte_end":8981688,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981693,"byte_end":8981732,"line_start":469,"line_end":469,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981737,"byte_end":8981790,"line_start":470,"line_end":470,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981795,"byte_end":8981798,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981803,"byte_end":8981845,"line_start":472,"line_end":472,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981850,"byte_end":8981877,"line_start":473,"line_end":473,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981882,"byte_end":8981885,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981890,"byte_end":8981934,"line_start":475,"line_end":475,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981939,"byte_end":8981960,"line_start":476,"line_end":476,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981965,"byte_end":8981968,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981973,"byte_end":8981987,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8981992,"byte_end":8981997,"line_start":479,"line_end":479,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8982002,"byte_end":8982009,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3678},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984373,"byte_end":8984381,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984040,"byte_end":8984104,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984105,"byte_end":8984108,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984109,"byte_end":8984197,"line_start":22,"line_end":22,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984198,"byte_end":8984225,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984226,"byte_end":8984229,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984230,"byte_end":8984258,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984259,"byte_end":8984292,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984293,"byte_end":8984344,"line_start":27,"line_end":27,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3685},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984995,"byte_end":8985004,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984403,"byte_end":8984468,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984469,"byte_end":8984472,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984473,"byte_end":8984559,"line_start":33,"line_end":33,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984560,"byte_end":8984612,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984613,"byte_end":8984616,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984617,"byte_end":8984698,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984699,"byte_end":8984734,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984735,"byte_end":8984738,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984739,"byte_end":8984767,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984768,"byte_end":8984801,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984802,"byte_end":8984849,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984850,"byte_end":8984912,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8984913,"byte_end":8984966,"line_start":43,"line_end":43,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3370},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986320,"byte_end":8986329,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985178,"byte_end":8985252,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985257,"byte_end":8985330,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985335,"byte_end":8985349,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985354,"byte_end":8985357,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek` or `poll_read`, only the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985362,"byte_end":8985433,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ `Waker` from the `Context` passed to the most recent call is scheduled","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985438,"byte_end":8985512,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ to receive a wakeup.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985517,"byte_end":8985541,"line_start":58,"line_end":58,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985546,"byte_end":8985549,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985554,"byte_end":8985627,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985632,"byte_end":8985635,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985640,"byte_end":8985654,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985659,"byte_end":8985662,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985667,"byte_end":8985680,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985685,"byte_end":8985720,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985725,"byte_end":8985755,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985760,"byte_end":8985763,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985768,"byte_end":8985801,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985806,"byte_end":8985809,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985814,"byte_end":8985832,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985837,"byte_end":8985876,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985881,"byte_end":8985950,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985955,"byte_end":8986003,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986008,"byte_end":8986038,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986043,"byte_end":8986088,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986093,"byte_end":8986096,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986101,"byte_end":8986123,"line_start":77,"line_end":77,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986128,"byte_end":8986173,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986178,"byte_end":8986196,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986201,"byte_end":8986204,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986209,"byte_end":8986223,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986228,"byte_end":8986233,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986238,"byte_end":8986245,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986250,"byte_end":8986253,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986258,"byte_end":8986308,"line_start":85,"line_end":85,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3371},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987789,"byte_end":8987793,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986491,"byte_end":8986561,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986566,"byte_end":8986635,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986640,"byte_end":8986679,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986684,"byte_end":8986687,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986692,"byte_end":8986760,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986765,"byte_end":8986768,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986773,"byte_end":8986813,"line_start":100,"line_end":100,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986818,"byte_end":8986821,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986826,"byte_end":8986840,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986845,"byte_end":8986848,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986853,"byte_end":8986866,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986871,"byte_end":8986901,"line_start":105,"line_end":105,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986906,"byte_end":8986938,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986943,"byte_end":8986969,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986974,"byte_end":8986977,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8986982,"byte_end":8987000,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987005,"byte_end":8987056,"line_start":110,"line_end":110,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987061,"byte_end":8987089,"line_start":111,"line_end":111,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987094,"byte_end":8987163,"line_start":112,"line_end":112,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987168,"byte_end":8987216,"line_start":113,"line_end":113,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987221,"byte_end":8987224,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987229,"byte_end":8987258,"line_start":115,"line_end":115,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987263,"byte_end":8987292,"line_start":116,"line_end":116,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987297,"byte_end":8987300,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987305,"byte_end":8987332,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987337,"byte_end":8987384,"line_start":119,"line_end":119,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987389,"byte_end":8987392,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987397,"byte_end":8987421,"line_start":121,"line_end":121,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987426,"byte_end":8987485,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987490,"byte_end":8987529,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987534,"byte_end":8987537,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987542,"byte_end":8987556,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987561,"byte_end":8987566,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987571,"byte_end":8987578,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987583,"byte_end":8987586,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987591,"byte_end":8987656,"line_start":129,"line_end":129,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987661,"byte_end":8987664,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987669,"byte_end":8987715,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987720,"byte_end":8987771,"line_start":132,"line_end":132,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3692},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990323,"byte_end":8990336,"line_start":31,"line_end":31,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":3693}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8989972,"byte_end":8990038,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990039,"byte_end":8990042,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990043,"byte_end":8990130,"line_start":24,"line_end":24,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990131,"byte_end":8990165,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990166,"byte_end":8990169,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990170,"byte_end":8990198,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990199,"byte_end":8990242,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990243,"byte_end":8990294,"line_start":29,"line_end":29,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3696},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8991062,"byte_end":8991076,"line_start":50,"line_end":50,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":3697},{"krate":0,"index":3698}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990369,"byte_end":8990436,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990437,"byte_end":8990440,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990441,"byte_end":8990528,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/ shut down the TCP stream in the write direction.  Dropping the write half","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990529,"byte_end":8990606,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ will also shut down the write half of the TCP stream.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990607,"byte_end":8990664,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990665,"byte_end":8990668,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990669,"byte_end":8990755,"line_start":41,"line_end":41,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990756,"byte_end":8990791,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990792,"byte_end":8990795,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990796,"byte_end":8990824,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990825,"byte_end":8990868,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990869,"byte_end":8990916,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990917,"byte_end":8990979,"line_start":47,"line_end":47,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8990980,"byte_end":8991033,"line_start":48,"line_end":48,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3701},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8992041,"byte_end":8992053,"line_start":84,"line_end":84,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8991909,"byte_end":8991991,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8991992,"byte_end":8992012,"line_start":82,"line_end":82,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3703},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8992054,"byte_end":8992071,"line_start":84,"line_end":84,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":3701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3704},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8992073,"byte_end":8992091,"line_start":84,"line_end":84,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":3701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3413},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8992637,"byte_end":8992644,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8992374,"byte_end":8992443,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8992448,"byte_end":8992512,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8992517,"byte_end":8992569,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8992574,"byte_end":8992577,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8992582,"byte_end":8992625,"line_start":102,"line_end":102,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3414},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993894,"byte_end":8993903,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8992751,"byte_end":8992825,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8992830,"byte_end":8992903,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8992908,"byte_end":8992922,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8992927,"byte_end":8992930,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek` or `poll_read`, only the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8992935,"byte_end":8993006,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ `Waker` from the `Context` passed to the most recent call is scheduled","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993011,"byte_end":8993085,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ to receive a wakeup.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993090,"byte_end":8993114,"line_start":113,"line_end":113,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993119,"byte_end":8993122,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993127,"byte_end":8993200,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993205,"byte_end":8993208,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993213,"byte_end":8993227,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993232,"byte_end":8993235,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993240,"byte_end":8993253,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993258,"byte_end":8993293,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993298,"byte_end":8993328,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993333,"byte_end":8993336,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993341,"byte_end":8993374,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993379,"byte_end":8993382,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993387,"byte_end":8993405,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993410,"byte_end":8993449,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993454,"byte_end":8993519,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993524,"byte_end":8993577,"line_start":128,"line_end":128,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993582,"byte_end":8993612,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993617,"byte_end":8993662,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993667,"byte_end":8993670,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993675,"byte_end":8993697,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993702,"byte_end":8993747,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993752,"byte_end":8993770,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993775,"byte_end":8993778,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993783,"byte_end":8993797,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993802,"byte_end":8993807,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993812,"byte_end":8993819,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993824,"byte_end":8993827,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8993832,"byte_end":8993882,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3415},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995368,"byte_end":8995372,"line_start":188,"line_end":188,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994069,"byte_end":8994139,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994144,"byte_end":8994213,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994218,"byte_end":8994257,"line_start":151,"line_end":151,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994262,"byte_end":8994265,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994270,"byte_end":8994338,"line_start":153,"line_end":153,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994343,"byte_end":8994346,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994351,"byte_end":8994391,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994396,"byte_end":8994399,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994404,"byte_end":8994418,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994423,"byte_end":8994426,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994431,"byte_end":8994444,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994449,"byte_end":8994479,"line_start":160,"line_end":160,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994484,"byte_end":8994516,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994521,"byte_end":8994547,"line_start":162,"line_end":162,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994552,"byte_end":8994555,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994560,"byte_end":8994578,"line_start":164,"line_end":164,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994583,"byte_end":8994634,"line_start":165,"line_end":165,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994639,"byte_end":8994667,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994672,"byte_end":8994737,"line_start":167,"line_end":167,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994742,"byte_end":8994795,"line_start":168,"line_end":168,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994800,"byte_end":8994803,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994808,"byte_end":8994837,"line_start":170,"line_end":170,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994842,"byte_end":8994871,"line_start":171,"line_end":171,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994876,"byte_end":8994879,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994884,"byte_end":8994911,"line_start":173,"line_end":173,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994916,"byte_end":8994963,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994968,"byte_end":8994971,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8994976,"byte_end":8995000,"line_start":176,"line_end":176,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995005,"byte_end":8995064,"line_start":177,"line_end":177,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995069,"byte_end":8995108,"line_start":178,"line_end":178,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995113,"byte_end":8995116,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995121,"byte_end":8995135,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995140,"byte_end":8995145,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995150,"byte_end":8995157,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995162,"byte_end":8995165,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995170,"byte_end":8995235,"line_start":184,"line_end":184,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995240,"byte_end":8995243,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995248,"byte_end":8995294,"line_start":186,"line_end":186,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995299,"byte_end":8995350,"line_start":187,"line_end":187,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3422},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8996047,"byte_end":8996054,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995784,"byte_end":8995853,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995858,"byte_end":8995922,"line_start":206,"line_end":206,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995927,"byte_end":8995979,"line_start":207,"line_end":207,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995984,"byte_end":8995987,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995992,"byte_end":8996035,"line_start":209,"line_end":209,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3423},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8996359,"byte_end":8996365,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8996160,"byte_end":8996232,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8996237,"byte_end":8996306,"line_start":215,"line_end":215,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8996311,"byte_end":8996347,"line_start":216,"line_end":216,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3708},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9000437,"byte_end":9000446,"line_start":72,"line_end":72,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":3709}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3476},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001967,"byte_end":9001974,"line_start":116,"line_end":116,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9000525,"byte_end":9000569,"line_start":78,"line_end":78,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9000574,"byte_end":9000577,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9000582,"byte_end":9000656,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address.  If `addr`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9000661,"byte_end":9000731,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ yields multiple addresses, connect will be attempted with each of the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9000736,"byte_end":9000809,"line_start":82,"line_end":82,"column_start":5,"column_end":78}},{"value":"/ addresses until a connection is successful. If none of the addresses","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9000814,"byte_end":9000886,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ result in a successful connection, the error returned from the last","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9000891,"byte_end":9000962,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ connection attempt (the last address) is returned.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9000967,"byte_end":9001021,"line_start":85,"line_end":85,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001026,"byte_end":9001029,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ To configure the socket before connecting, you can use the [`TcpSocket`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001034,"byte_end":9001110,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ type.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001115,"byte_end":9001124,"line_start":88,"line_end":88,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001129,"byte_end":9001132,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001137,"byte_end":9001191,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/ [`TcpSocket`]: struct@crate::net::TcpSocket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001196,"byte_end":9001243,"line_start":91,"line_end":91,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001248,"byte_end":9001251,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001256,"byte_end":9001270,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001275,"byte_end":9001278,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001283,"byte_end":9001296,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001301,"byte_end":9001331,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001336,"byte_end":9001369,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001374,"byte_end":9001400,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001405,"byte_end":9001408,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001413,"byte_end":9001431,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001436,"byte_end":9001487,"line_start":101,"line_end":101,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001492,"byte_end":9001520,"line_start":102,"line_end":102,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001525,"byte_end":9001594,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001599,"byte_end":9001602,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001607,"byte_end":9001634,"line_start":105,"line_end":105,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001639,"byte_end":9001688,"line_start":106,"line_end":106,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001693,"byte_end":9001696,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001701,"byte_end":9001715,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001720,"byte_end":9001725,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001730,"byte_end":9001737,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001742,"byte_end":9001745,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001750,"byte_end":9001821,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001826,"byte_end":9001829,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001834,"byte_end":9001891,"line_start":114,"line_end":114,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9001896,"byte_end":9001949,"line_start":115,"line_end":115,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3489},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004698,"byte_end":9004706,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(std::net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9003581,"byte_end":9003638,"line_start":165,"line_end":165,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9003643,"byte_end":9003646,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9003651,"byte_end":9003721,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9003726,"byte_end":9003802,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9003807,"byte_end":9003878,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9003883,"byte_end":9003905,"line_start":170,"line_end":170,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9003910,"byte_end":9003913,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9003918,"byte_end":9003932,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9003937,"byte_end":9003940,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9003945,"byte_end":9003963,"line_start":174,"line_end":174,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9003968,"byte_end":9003994,"line_start":175,"line_end":175,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9003999,"byte_end":9004029,"line_start":176,"line_end":176,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004034,"byte_end":9004037,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004042,"byte_end":9004060,"line_start":178,"line_end":178,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004065,"byte_end":9004116,"line_start":179,"line_end":179,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004121,"byte_end":9004195,"line_start":180,"line_end":180,"column_start":5,"column_end":79}},{"value":"/     std_stream.set_nonblocking(true)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004200,"byte_end":9004242,"line_start":181,"line_end":181,"column_start":5,"column_end":47}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004247,"byte_end":9004301,"line_start":182,"line_end":182,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004306,"byte_end":9004320,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004325,"byte_end":9004330,"line_start":184,"line_end":184,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004335,"byte_end":9004342,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004347,"byte_end":9004350,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004355,"byte_end":9004367,"line_start":187,"line_end":187,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004372,"byte_end":9004375,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004380,"byte_end":9004440,"line_start":189,"line_end":189,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004445,"byte_end":9004448,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004453,"byte_end":9004523,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004528,"byte_end":9004601,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004606,"byte_end":9004686,"line_start":193,"line_end":193,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3490},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9006348,"byte_end":9006356,"line_start":234,"line_end":234,"column_start":12,"column_end":20},"name":"into_std","qualname":"<TcpStream>::into_std","value":"pub fn into_std(Self) -> io::Result<std::net::TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::TcpStream`] into a [`std::net::TcpStream`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::TcpStream`] into a [`std::net::TcpStream`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004899,"byte_end":9004967,"line_start":200,"line_end":200,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004972,"byte_end":9004975,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::net::TcpStream`] will have `nonblocking mode` set as `true`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9004980,"byte_end":9005064,"line_start":202,"line_end":202,"column_start":5,"column_end":89}},{"value":"/ Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005069,"byte_end":9005135,"line_start":203,"line_end":203,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005140,"byte_end":9005143,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005148,"byte_end":9005162,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005167,"byte_end":9005170,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005175,"byte_end":9005182,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005187,"byte_end":9005213,"line_start":208,"line_end":208,"column_start":5,"column_end":31}},{"value":"/ use std::io::Read;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005218,"byte_end":9005240,"line_start":209,"line_end":209,"column_start":5,"column_end":27}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005245,"byte_end":9005277,"line_start":210,"line_end":210,"column_start":5,"column_end":37}},{"value":"/ # use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005282,"byte_end":9005314,"line_start":211,"line_end":211,"column_start":5,"column_end":37}},{"value":"/ # use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005319,"byte_end":9005354,"line_start":212,"line_end":212,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005359,"byte_end":9005362,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005367,"byte_end":9005385,"line_start":214,"line_end":214,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005390,"byte_end":9005441,"line_start":215,"line_end":215,"column_start":5,"column_end":56}},{"value":"/     let mut data = [0u8; 12];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005446,"byte_end":9005479,"line_start":216,"line_end":216,"column_start":5,"column_end":38}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005484,"byte_end":9005551,"line_start":217,"line_end":217,"column_start":5,"column_end":72}},{"value":"/ #   let handle = tokio::spawn(async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005556,"byte_end":9005597,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/ #       let mut stream: TcpStream = TcpStream::connect(\"127.0.0.1:34254\").await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005602,"byte_end":9005695,"line_start":219,"line_end":219,"column_start":5,"column_end":98}},{"value":"/ #       stream.write(b\"Hello world!\").await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005700,"byte_end":9005757,"line_start":220,"line_end":220,"column_start":5,"column_end":62}},{"value":"/ #   });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005762,"byte_end":9005773,"line_start":221,"line_end":221,"column_start":5,"column_end":16}},{"value":"/     let (tokio_tcp_stream, _) = listener.accept().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005778,"byte_end":9005839,"line_start":222,"line_end":222,"column_start":5,"column_end":66}},{"value":"/     let mut std_tcp_stream = tokio_tcp_stream.into_std()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005844,"byte_end":9005906,"line_start":223,"line_end":223,"column_start":5,"column_end":67}},{"value":"/ #   handle.await.expect(\"The task being joined has panicked\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005911,"byte_end":9005977,"line_start":224,"line_end":224,"column_start":5,"column_end":71}},{"value":"/     std_tcp_stream.set_nonblocking(false)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9005982,"byte_end":9006029,"line_start":225,"line_end":225,"column_start":5,"column_end":52}},{"value":"/     std_tcp_stream.read_exact(&mut data)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9006034,"byte_end":9006080,"line_start":226,"line_end":226,"column_start":5,"column_end":51}},{"value":"/ #   assert_eq!(b\"Hello world!\", &data);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9006085,"byte_end":9006128,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9006133,"byte_end":9006147,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9006152,"byte_end":9006157,"line_start":229,"line_end":229,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9006162,"byte_end":9006169,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ [`tokio::net::TcpStream`]: TcpStream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9006174,"byte_end":9006214,"line_start":231,"line_end":231,"column_start":5,"column_end":45}},{"value":"/ [`std::net::TcpStream`]: std::net::TcpStream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9006219,"byte_end":9006267,"line_start":232,"line_end":232,"column_start":5,"column_end":53}},{"value":"/ [`set_nonblocking`]: fn@std::net::TcpStream::set_nonblocking","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9006272,"byte_end":9006336,"line_start":233,"line_end":233,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3493},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007266,"byte_end":9007276,"line_start":266,"line_end":266,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9006867,"byte_end":9006926,"line_start":252,"line_end":252,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9006931,"byte_end":9006934,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9006939,"byte_end":9006953,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9006958,"byte_end":9006961,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9006966,"byte_end":9006979,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9006984,"byte_end":9007014,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007019,"byte_end":9007022,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007027,"byte_end":9007091,"line_start":259,"line_end":259,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007096,"byte_end":9007157,"line_start":260,"line_end":260,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007162,"byte_end":9007165,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007170,"byte_end":9007213,"line_start":262,"line_end":262,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007218,"byte_end":9007230,"line_start":263,"line_end":263,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007235,"byte_end":9007242,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007247,"byte_end":9007254,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3494},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007755,"byte_end":9007764,"line_start":284,"line_end":284,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007352,"byte_end":9007416,"line_start":270,"line_end":270,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007421,"byte_end":9007424,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007429,"byte_end":9007443,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007448,"byte_end":9007451,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007456,"byte_end":9007469,"line_start":274,"line_end":274,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007474,"byte_end":9007504,"line_start":275,"line_end":275,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007509,"byte_end":9007512,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007517,"byte_end":9007581,"line_start":277,"line_end":277,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007586,"byte_end":9007647,"line_start":278,"line_end":278,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007652,"byte_end":9007655,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007660,"byte_end":9007702,"line_start":280,"line_end":280,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007707,"byte_end":9007719,"line_start":281,"line_end":281,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007724,"byte_end":9007731,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007736,"byte_end":9007743,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3495},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9009255,"byte_end":9009264,"line_start":330,"line_end":330,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007839,"byte_end":9007914,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007919,"byte_end":9007992,"line_start":289,"line_end":289,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9007997,"byte_end":9008011,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008016,"byte_end":9008019,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek`, `poll_read` or","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008024,"byte_end":9008086,"line_start":292,"line_end":292,"column_start":5,"column_end":67}},{"value":"/ `poll_read_ready`, only the `Waker` from the `Context` passed to the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008091,"byte_end":9008163,"line_start":293,"line_end":293,"column_start":5,"column_end":77}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008168,"byte_end":9008232,"line_start":294,"line_end":294,"column_start":5,"column_end":69}},{"value":"/ `poll_write` retains a second, independent waker.)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008237,"byte_end":9008291,"line_start":295,"line_end":295,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008296,"byte_end":9008299,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008304,"byte_end":9008322,"line_start":297,"line_end":297,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008327,"byte_end":9008330,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008335,"byte_end":9008360,"line_start":299,"line_end":299,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008365,"byte_end":9008368,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008373,"byte_end":9008424,"line_start":301,"line_end":301,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008429,"byte_end":9008512,"line_start":302,"line_end":302,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008517,"byte_end":9008572,"line_start":303,"line_end":303,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008577,"byte_end":9008580,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008585,"byte_end":9008597,"line_start":305,"line_end":305,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008602,"byte_end":9008605,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008610,"byte_end":9008685,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008690,"byte_end":9008693,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008698,"byte_end":9008712,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008717,"byte_end":9008720,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008725,"byte_end":9008738,"line_start":311,"line_end":311,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008743,"byte_end":9008778,"line_start":312,"line_end":312,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008783,"byte_end":9008813,"line_start":313,"line_end":313,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008818,"byte_end":9008821,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008826,"byte_end":9008859,"line_start":315,"line_end":315,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008864,"byte_end":9008867,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008872,"byte_end":9008890,"line_start":317,"line_end":317,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008895,"byte_end":9008934,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9008939,"byte_end":9009004,"line_start":319,"line_end":319,"column_start":5,"column_end":70}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9009009,"byte_end":9009039,"line_start":320,"line_end":320,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9009044,"byte_end":9009089,"line_start":321,"line_end":321,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9009094,"byte_end":9009097,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9009102,"byte_end":9009124,"line_start":323,"line_end":323,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9009129,"byte_end":9009171,"line_start":324,"line_end":324,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9009176,"byte_end":9009194,"line_start":325,"line_end":325,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9009199,"byte_end":9009202,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9009207,"byte_end":9009221,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9009226,"byte_end":9009231,"line_start":328,"line_end":328,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9009236,"byte_end":9009243,"line_start":329,"line_end":329,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3496},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012336,"byte_end":9012341,"line_start":416,"line_end":416,"column_start":18,"column_end":23},"name":"ready","qualname":"<TcpStream>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010071,"byte_end":9010118,"line_start":356,"line_end":356,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010123,"byte_end":9010126,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_read()` or `try_write()`. It","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010131,"byte_end":9010205,"line_start":358,"line_end":358,"column_start":5,"column_end":79}},{"value":"/ can be used to concurrently read / write to the same socket on a single","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010210,"byte_end":9010285,"line_start":359,"line_end":359,"column_start":5,"column_end":80}},{"value":"/ task without splitting the socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010290,"byte_end":9010328,"line_start":360,"line_end":360,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010333,"byte_end":9010336,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010341,"byte_end":9010355,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010360,"byte_end":9010363,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ Concurrently read and write to the stream on the same task without","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010368,"byte_end":9010438,"line_start":364,"line_end":364,"column_start":5,"column_end":75}},{"value":"/ splitting.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010443,"byte_end":9010457,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010462,"byte_end":9010465,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010470,"byte_end":9010483,"line_start":367,"line_end":367,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010488,"byte_end":9010516,"line_start":368,"line_end":368,"column_start":5,"column_end":33}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010521,"byte_end":9010551,"line_start":369,"line_end":369,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010556,"byte_end":9010582,"line_start":370,"line_end":370,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010587,"byte_end":9010603,"line_start":371,"line_end":371,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010608,"byte_end":9010611,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010616,"byte_end":9010634,"line_start":373,"line_end":373,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010639,"byte_end":9010690,"line_start":374,"line_end":374,"column_start":5,"column_end":56}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010695,"byte_end":9010760,"line_start":375,"line_end":375,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010765,"byte_end":9010768,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010773,"byte_end":9010787,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/         let ready = stream.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010792,"byte_end":9010877,"line_start":378,"line_end":378,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010882,"byte_end":9010885,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010890,"byte_end":9010926,"line_start":380,"line_end":380,"column_start":5,"column_end":41}},{"value":"/             let mut data = vec![0; 1024];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010931,"byte_end":9010976,"line_start":381,"line_end":381,"column_start":5,"column_end":50}},{"value":"/             // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9010981,"byte_end":9011055,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011060,"byte_end":9011122,"line_start":383,"line_end":383,"column_start":5,"column_end":67}},{"value":"/             match stream.try_read(&mut data) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011127,"byte_end":9011177,"line_start":384,"line_end":384,"column_start":5,"column_end":55}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011182,"byte_end":9011212,"line_start":385,"line_end":385,"column_start":5,"column_end":35}},{"value":"/                     println!(\"read {} bytes\", n);        ","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011217,"byte_end":9011278,"line_start":386,"line_end":386,"column_start":5,"column_end":66}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011283,"byte_end":9011304,"line_start":387,"line_end":387,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011309,"byte_end":9011385,"line_start":388,"line_end":388,"column_start":5,"column_end":81}},{"value":"/                     continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011390,"byte_end":9011423,"line_start":389,"line_end":389,"column_start":5,"column_end":38}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011428,"byte_end":9011449,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011454,"byte_end":9011485,"line_start":391,"line_end":391,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011490,"byte_end":9011535,"line_start":392,"line_end":392,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011540,"byte_end":9011561,"line_start":393,"line_end":393,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011566,"byte_end":9011583,"line_start":394,"line_end":394,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011588,"byte_end":9011591,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011596,"byte_end":9011609,"line_start":396,"line_end":396,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011614,"byte_end":9011617,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011622,"byte_end":9011658,"line_start":398,"line_end":398,"column_start":5,"column_end":41}},{"value":"/             // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011663,"byte_end":9011738,"line_start":399,"line_end":399,"column_start":5,"column_end":80}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011743,"byte_end":9011805,"line_start":400,"line_end":400,"column_start":5,"column_end":67}},{"value":"/             match stream.try_write(b\"hello world\") {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011810,"byte_end":9011866,"line_start":401,"line_end":401,"column_start":5,"column_end":61}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011871,"byte_end":9011901,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/                     println!(\"write {} bytes\", n);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011906,"byte_end":9011960,"line_start":403,"line_end":403,"column_start":5,"column_end":59}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011965,"byte_end":9011986,"line_start":404,"line_end":404,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9011991,"byte_end":9012067,"line_start":405,"line_end":405,"column_start":5,"column_end":81}},{"value":"/                     continue","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012072,"byte_end":9012104,"line_start":406,"line_end":406,"column_start":5,"column_end":37}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012109,"byte_end":9012130,"line_start":407,"line_end":407,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012135,"byte_end":9012166,"line_start":408,"line_end":408,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012171,"byte_end":9012216,"line_start":409,"line_end":409,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012221,"byte_end":9012242,"line_start":410,"line_end":410,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012247,"byte_end":9012264,"line_start":411,"line_end":411,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012269,"byte_end":9012282,"line_start":412,"line_end":412,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012287,"byte_end":9012296,"line_start":413,"line_end":413,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012301,"byte_end":9012306,"line_start":414,"line_end":414,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012311,"byte_end":9012318,"line_start":415,"line_end":415,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3499},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013861,"byte_end":9013869,"line_start":464,"line_end":464,"column_start":18,"column_end":26},"name":"readable","qualname":"<TcpStream>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012498,"byte_end":9012541,"line_start":421,"line_end":421,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012546,"byte_end":9012549,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012554,"byte_end":9012631,"line_start":423,"line_end":423,"column_start":5,"column_end":82}},{"value":"/ paired with `try_read()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012636,"byte_end":9012665,"line_start":424,"line_end":424,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012670,"byte_end":9012673,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012678,"byte_end":9012692,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012697,"byte_end":9012700,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012705,"byte_end":9012718,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012723,"byte_end":9012753,"line_start":429,"line_end":429,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012758,"byte_end":9012784,"line_start":430,"line_end":430,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012789,"byte_end":9012805,"line_start":431,"line_end":431,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012810,"byte_end":9012813,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012818,"byte_end":9012836,"line_start":433,"line_end":433,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012841,"byte_end":9012892,"line_start":434,"line_end":434,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012897,"byte_end":9012925,"line_start":435,"line_end":435,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9012930,"byte_end":9012995,"line_start":436,"line_end":436,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013000,"byte_end":9013003,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/     let mut msg = vec![0; 1024];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013008,"byte_end":9013044,"line_start":438,"line_end":438,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013049,"byte_end":9013052,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013057,"byte_end":9013071,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013076,"byte_end":9013125,"line_start":441,"line_end":441,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013130,"byte_end":9013167,"line_start":442,"line_end":442,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013172,"byte_end":9013175,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013180,"byte_end":9013250,"line_start":444,"line_end":444,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013255,"byte_end":9013313,"line_start":445,"line_end":445,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut msg) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013318,"byte_end":9013363,"line_start":446,"line_end":446,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013368,"byte_end":9013394,"line_start":447,"line_end":447,"column_start":5,"column_end":31}},{"value":"/                 msg.truncate(n);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013399,"byte_end":9013435,"line_start":448,"line_end":448,"column_start":5,"column_end":41}},{"value":"/                 break;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013440,"byte_end":9013466,"line_start":449,"line_end":449,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013471,"byte_end":9013488,"line_start":450,"line_end":450,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013493,"byte_end":9013565,"line_start":451,"line_end":451,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013570,"byte_end":9013599,"line_start":452,"line_end":452,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013604,"byte_end":9013621,"line_start":453,"line_end":453,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013626,"byte_end":9013653,"line_start":454,"line_end":454,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013658,"byte_end":9013699,"line_start":455,"line_end":455,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013704,"byte_end":9013721,"line_start":456,"line_end":456,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013726,"byte_end":9013739,"line_start":457,"line_end":457,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013744,"byte_end":9013753,"line_start":458,"line_end":458,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013758,"byte_end":9013761,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/     println!(\"GOT = {:?}\", msg);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013766,"byte_end":9013802,"line_start":460,"line_end":460,"column_start":5,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013807,"byte_end":9013821,"line_start":461,"line_end":461,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013826,"byte_end":9013831,"line_start":462,"line_end":462,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013836,"byte_end":9013843,"line_start":463,"line_end":463,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015241,"byte_end":9015256,"line_start":498,"line_end":498,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<TcpStream>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9013970,"byte_end":9013999,"line_start":469,"line_end":469,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014004,"byte_end":9014007,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ If the tcp stream is not currently ready for reading, this method will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014012,"byte_end":9014086,"line_start":471,"line_end":471,"column_start":5,"column_end":79}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the tcp","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014091,"byte_end":9014165,"line_start":472,"line_end":472,"column_start":5,"column_end":79}},{"value":"/ stream becomes ready for reading, `Waker::wake` will be called on the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014170,"byte_end":9014243,"line_start":473,"line_end":473,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014248,"byte_end":9014258,"line_start":474,"line_end":474,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014263,"byte_end":9014266,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_read_ready`, `poll_read` or","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014271,"byte_end":9014339,"line_start":476,"line_end":476,"column_start":5,"column_end":73}},{"value":"/ `poll_peek`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014344,"byte_end":9014415,"line_start":477,"line_end":477,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014420,"byte_end":9014479,"line_start":478,"line_end":478,"column_start":5,"column_end":64}},{"value":"/ `poll_write_ready` retains a second, independent waker.)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014484,"byte_end":9014544,"line_start":479,"line_end":479,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014549,"byte_end":9014552,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014557,"byte_end":9014632,"line_start":481,"line_end":481,"column_start":5,"column_end":80}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014637,"byte_end":9014712,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014717,"byte_end":9014785,"line_start":483,"line_end":483,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014790,"byte_end":9014793,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014798,"byte_end":9014816,"line_start":485,"line_end":485,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014821,"byte_end":9014824,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014829,"byte_end":9014854,"line_start":487,"line_end":487,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014859,"byte_end":9014862,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the tcp stream is not ready for reading.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014867,"byte_end":9014932,"line_start":489,"line_end":489,"column_start":5,"column_end":70}},{"value":"/ * `Poll::Ready(Ok(()))` if the tcp stream is ready for reading.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9014937,"byte_end":9015004,"line_start":490,"line_end":490,"column_start":5,"column_end":72}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015009,"byte_end":9015064,"line_start":491,"line_end":491,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015069,"byte_end":9015072,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015077,"byte_end":9015089,"line_start":493,"line_end":493,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015094,"byte_end":9015097,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015102,"byte_end":9015177,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015182,"byte_end":9015185,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015190,"byte_end":9015229,"line_start":497,"line_end":497,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3504},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9017592,"byte_end":9017600,"line_start":561,"line_end":561,"column_start":12,"column_end":20},"name":"try_read","qualname":"<TcpStream>::try_read","value":"pub fn try_read(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, returning how\n many bytes were read.","sig":null,"attributes":[{"value":"/ Try to read data from the stream into the provided buffer, returning how","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015389,"byte_end":9015465,"line_start":502,"line_end":502,"column_start":5,"column_end":81}},{"value":"/ many bytes were read.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015470,"byte_end":9015495,"line_start":503,"line_end":503,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015500,"byte_end":9015503,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ Receives any pending data from the socket but does not wait for new data","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015508,"byte_end":9015584,"line_start":505,"line_end":505,"column_start":5,"column_end":81}},{"value":"/ to arrive. On success, returns the number of bytes read. Because","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015589,"byte_end":9015657,"line_start":506,"line_end":506,"column_start":5,"column_end":73}},{"value":"/ `try_read()` is non-blocking, the buffer does not have to be stored by","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015662,"byte_end":9015736,"line_start":507,"line_end":507,"column_start":5,"column_end":79}},{"value":"/ the async task and can exist entirely on the stack.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015741,"byte_end":9015796,"line_start":508,"line_end":508,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015801,"byte_end":9015804,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Usually, [`readable()`] or [`ready()`] is used with this function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015809,"byte_end":9015879,"line_start":510,"line_end":510,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015884,"byte_end":9015887,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ [`readable()`]: TcpStream::readable()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015892,"byte_end":9015933,"line_start":512,"line_end":512,"column_start":5,"column_end":46}},{"value":"/ [`ready()`]: TcpStream::ready()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015938,"byte_end":9015973,"line_start":513,"line_end":513,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015978,"byte_end":9015981,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9015986,"byte_end":9015998,"line_start":515,"line_end":515,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016003,"byte_end":9016006,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ If data is successfully read, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016011,"byte_end":9016082,"line_start":517,"line_end":517,"column_start":5,"column_end":76}},{"value":"/ number of bytes read. `Ok(0)` indicates the stream's read half is closed","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016087,"byte_end":9016163,"line_start":518,"line_end":518,"column_start":5,"column_end":81}},{"value":"/ and will no longer yield data. If the stream is not ready to read data","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016168,"byte_end":9016242,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016247,"byte_end":9016296,"line_start":520,"line_end":520,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016301,"byte_end":9016304,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016309,"byte_end":9016323,"line_start":522,"line_end":522,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016328,"byte_end":9016331,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016336,"byte_end":9016349,"line_start":524,"line_end":524,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016354,"byte_end":9016384,"line_start":525,"line_end":525,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016389,"byte_end":9016415,"line_start":526,"line_end":526,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016420,"byte_end":9016436,"line_start":527,"line_end":527,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016441,"byte_end":9016444,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016449,"byte_end":9016467,"line_start":529,"line_end":529,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016472,"byte_end":9016523,"line_start":530,"line_end":530,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016528,"byte_end":9016556,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016561,"byte_end":9016626,"line_start":532,"line_end":532,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016631,"byte_end":9016634,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016639,"byte_end":9016653,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016658,"byte_end":9016707,"line_start":535,"line_end":535,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016712,"byte_end":9016749,"line_start":536,"line_end":536,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016754,"byte_end":9016757,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/         // Creating the buffer **after** the `await` prevents it from","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016762,"byte_end":9016835,"line_start":538,"line_end":538,"column_start":5,"column_end":78}},{"value":"/         // being stored in the async task.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016840,"byte_end":9016886,"line_start":539,"line_end":539,"column_start":5,"column_end":51}},{"value":"/         let mut buf = [0; 4096];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016891,"byte_end":9016927,"line_start":540,"line_end":540,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016932,"byte_end":9016935,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9016940,"byte_end":9017010,"line_start":542,"line_end":542,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9017015,"byte_end":9017073,"line_start":543,"line_end":543,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut buf) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9017078,"byte_end":9017123,"line_start":544,"line_end":544,"column_start":5,"column_end":50}},{"value":"/             Ok(0) => break,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9017128,"byte_end":9017159,"line_start":545,"line_end":545,"column_start":5,"column_end":36}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9017164,"byte_end":9017190,"line_start":546,"line_end":546,"column_start":5,"column_end":31}},{"value":"/                 println!(\"read {} bytes\", n);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9017195,"byte_end":9017244,"line_start":547,"line_end":547,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9017249,"byte_end":9017266,"line_start":548,"line_end":548,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9017271,"byte_end":9017343,"line_start":549,"line_end":549,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9017348,"byte_end":9017377,"line_start":550,"line_end":550,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9017382,"byte_end":9017399,"line_start":551,"line_end":551,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9017404,"byte_end":9017431,"line_start":552,"line_end":552,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9017436,"byte_end":9017477,"line_start":553,"line_end":553,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9017482,"byte_end":9017499,"line_start":554,"line_end":554,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9017504,"byte_end":9017517,"line_start":555,"line_end":555,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9017522,"byte_end":9017531,"line_start":556,"line_end":556,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9017536,"byte_end":9017539,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9017544,"byte_end":9017558,"line_start":558,"line_end":558,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9017563,"byte_end":9017568,"line_start":559,"line_end":559,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9017573,"byte_end":9017580,"line_start":560,"line_end":560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3710},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9020184,"byte_end":9020196,"line_start":627,"line_end":627,"column_start":16,"column_end":28},"name":"try_read_buf","qualname":"<TcpStream>::try_read_buf","value":"pub fn try_read_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022075,"byte_end":9022083,"line_start":687,"line_end":687,"column_start":18,"column_end":26},"name":"writable","qualname":"<TcpStream>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9020834,"byte_end":9020877,"line_start":648,"line_end":648,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9020882,"byte_end":9020885,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is usually","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9020890,"byte_end":9020967,"line_start":650,"line_end":650,"column_start":5,"column_end":82}},{"value":"/ paired with `try_write()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9020972,"byte_end":9021002,"line_start":651,"line_end":651,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021007,"byte_end":9021010,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021015,"byte_end":9021029,"line_start":653,"line_end":653,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021034,"byte_end":9021037,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021042,"byte_end":9021055,"line_start":655,"line_end":655,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021060,"byte_end":9021090,"line_start":656,"line_end":656,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021095,"byte_end":9021121,"line_start":657,"line_end":657,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021126,"byte_end":9021142,"line_start":658,"line_end":658,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021147,"byte_end":9021150,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021155,"byte_end":9021173,"line_start":660,"line_end":660,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021178,"byte_end":9021229,"line_start":661,"line_end":661,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021234,"byte_end":9021262,"line_start":662,"line_end":662,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021267,"byte_end":9021332,"line_start":663,"line_end":663,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021337,"byte_end":9021340,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021345,"byte_end":9021359,"line_start":665,"line_end":665,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021364,"byte_end":9021413,"line_start":666,"line_end":666,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021418,"byte_end":9021455,"line_start":667,"line_end":667,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021460,"byte_end":9021463,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021468,"byte_end":9021539,"line_start":669,"line_end":669,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021544,"byte_end":9021602,"line_start":670,"line_end":670,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021607,"byte_end":9021659,"line_start":671,"line_end":671,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021664,"byte_end":9021690,"line_start":672,"line_end":672,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021695,"byte_end":9021721,"line_start":673,"line_end":673,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021726,"byte_end":9021743,"line_start":674,"line_end":674,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021748,"byte_end":9021820,"line_start":675,"line_end":675,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021825,"byte_end":9021854,"line_start":676,"line_end":676,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021859,"byte_end":9021876,"line_start":677,"line_end":677,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021881,"byte_end":9021908,"line_start":678,"line_end":678,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021913,"byte_end":9021954,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021959,"byte_end":9021976,"line_start":680,"line_end":680,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021981,"byte_end":9021994,"line_start":681,"line_end":681,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9021999,"byte_end":9022008,"line_start":682,"line_end":682,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022013,"byte_end":9022016,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022021,"byte_end":9022035,"line_start":684,"line_end":684,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022040,"byte_end":9022045,"line_start":685,"line_end":685,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022050,"byte_end":9022057,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3510},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023444,"byte_end":9023460,"line_start":721,"line_end":721,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<TcpStream>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022184,"byte_end":9022214,"line_start":692,"line_end":692,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022219,"byte_end":9022222,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ If the tcp stream is not currently ready for writing, this method will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022227,"byte_end":9022301,"line_start":694,"line_end":694,"column_start":5,"column_end":79}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the tcp","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022306,"byte_end":9022380,"line_start":695,"line_end":695,"column_start":5,"column_end":79}},{"value":"/ stream becomes ready for writing, `Waker::wake` will be called on the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022385,"byte_end":9022458,"line_start":696,"line_end":696,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022463,"byte_end":9022473,"line_start":697,"line_end":697,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022478,"byte_end":9022481,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_write_ready` or `poll_write`, only","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022486,"byte_end":9022561,"line_start":699,"line_end":699,"column_start":5,"column_end":80}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022566,"byte_end":9022634,"line_start":700,"line_end":700,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup. (However, `poll_read_ready` retains a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022639,"byte_end":9022711,"line_start":701,"line_end":701,"column_start":5,"column_end":77}},{"value":"/ second, independent waker.)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022716,"byte_end":9022747,"line_start":702,"line_end":702,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022752,"byte_end":9022755,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022760,"byte_end":9022835,"line_start":704,"line_end":704,"column_start":5,"column_end":80}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022840,"byte_end":9022915,"line_start":705,"line_end":705,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022920,"byte_end":9022988,"line_start":706,"line_end":706,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9022993,"byte_end":9022996,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023001,"byte_end":9023019,"line_start":708,"line_end":708,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023024,"byte_end":9023027,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023032,"byte_end":9023057,"line_start":710,"line_end":710,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023062,"byte_end":9023065,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the tcp stream is not ready for writing.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023070,"byte_end":9023135,"line_start":712,"line_end":712,"column_start":5,"column_end":70}},{"value":"/ * `Poll::Ready(Ok(()))` if the tcp stream is ready for writing.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023140,"byte_end":9023207,"line_start":713,"line_end":713,"column_start":5,"column_end":72}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023212,"byte_end":9023267,"line_start":714,"line_end":714,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023272,"byte_end":9023275,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023280,"byte_end":9023292,"line_start":716,"line_end":716,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023297,"byte_end":9023300,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023305,"byte_end":9023380,"line_start":718,"line_end":718,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023385,"byte_end":9023388,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ [`writable`]: method@Self::writable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023393,"byte_end":9023432,"line_start":720,"line_end":720,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3512},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025189,"byte_end":9025198,"line_start":773,"line_end":773,"column_start":12,"column_end":21},"name":"try_write","qualname":"<TcpStream>::try_write","value":"pub fn try_write(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to write a buffer to the stream, returning how many bytes were\n written.","sig":null,"attributes":[{"value":"/ Try to write a buffer to the stream, returning how many bytes were","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023594,"byte_end":9023664,"line_start":725,"line_end":725,"column_start":5,"column_end":75}},{"value":"/ written.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023669,"byte_end":9023681,"line_start":726,"line_end":726,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023686,"byte_end":9023689,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ The function will attempt to write the entire contents of `buf`, but","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023694,"byte_end":9023766,"line_start":728,"line_end":728,"column_start":5,"column_end":77}},{"value":"/ only part of the buffer may be written.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023771,"byte_end":9023814,"line_start":729,"line_end":729,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023819,"byte_end":9023822,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023827,"byte_end":9023881,"line_start":731,"line_end":731,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023886,"byte_end":9023889,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023894,"byte_end":9023906,"line_start":733,"line_end":733,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023911,"byte_end":9023914,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ If data is successfully written, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023919,"byte_end":9023993,"line_start":735,"line_end":735,"column_start":5,"column_end":79}},{"value":"/ number of bytes written. If the stream is not ready to write data,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9023998,"byte_end":9024068,"line_start":736,"line_end":736,"column_start":5,"column_end":75}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024073,"byte_end":9024122,"line_start":737,"line_end":737,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024127,"byte_end":9024130,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024135,"byte_end":9024149,"line_start":739,"line_end":739,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024154,"byte_end":9024157,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024162,"byte_end":9024175,"line_start":741,"line_end":741,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024180,"byte_end":9024210,"line_start":742,"line_end":742,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024215,"byte_end":9024241,"line_start":743,"line_end":743,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024246,"byte_end":9024262,"line_start":744,"line_end":744,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024267,"byte_end":9024270,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024275,"byte_end":9024293,"line_start":746,"line_end":746,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024298,"byte_end":9024349,"line_start":747,"line_end":747,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024354,"byte_end":9024382,"line_start":748,"line_end":748,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024387,"byte_end":9024452,"line_start":749,"line_end":749,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024457,"byte_end":9024460,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024465,"byte_end":9024479,"line_start":751,"line_end":751,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024484,"byte_end":9024533,"line_start":752,"line_end":752,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024538,"byte_end":9024575,"line_start":753,"line_end":753,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024580,"byte_end":9024583,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024588,"byte_end":9024659,"line_start":755,"line_end":755,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024664,"byte_end":9024722,"line_start":756,"line_end":756,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024727,"byte_end":9024779,"line_start":757,"line_end":757,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024784,"byte_end":9024810,"line_start":758,"line_end":758,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024815,"byte_end":9024841,"line_start":759,"line_end":759,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024846,"byte_end":9024863,"line_start":760,"line_end":760,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024868,"byte_end":9024940,"line_start":761,"line_end":761,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024945,"byte_end":9024974,"line_start":762,"line_end":762,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9024979,"byte_end":9024996,"line_start":763,"line_end":763,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025001,"byte_end":9025028,"line_start":764,"line_end":764,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025033,"byte_end":9025074,"line_start":765,"line_end":765,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025079,"byte_end":9025096,"line_start":766,"line_end":766,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025101,"byte_end":9025114,"line_start":767,"line_end":767,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025119,"byte_end":9025128,"line_start":768,"line_end":768,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025133,"byte_end":9025136,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025141,"byte_end":9025155,"line_start":770,"line_end":770,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025160,"byte_end":9025165,"line_start":771,"line_end":771,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025170,"byte_end":9025177,"line_start":772,"line_end":772,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3515},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026649,"byte_end":9026653,"line_start":818,"line_end":818,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025392,"byte_end":9025462,"line_start":781,"line_end":781,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025467,"byte_end":9025536,"line_start":782,"line_end":782,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025541,"byte_end":9025580,"line_start":783,"line_end":783,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025585,"byte_end":9025588,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025593,"byte_end":9025667,"line_start":785,"line_end":785,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025672,"byte_end":9025732,"line_start":786,"line_end":786,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025737,"byte_end":9025740,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025745,"byte_end":9025759,"line_start":788,"line_end":788,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025764,"byte_end":9025767,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025772,"byte_end":9025785,"line_start":790,"line_end":790,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025790,"byte_end":9025820,"line_start":791,"line_end":791,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025825,"byte_end":9025857,"line_start":792,"line_end":792,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025862,"byte_end":9025888,"line_start":793,"line_end":793,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025893,"byte_end":9025896,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025901,"byte_end":9025919,"line_start":795,"line_end":795,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025924,"byte_end":9025975,"line_start":796,"line_end":796,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9025980,"byte_end":9026008,"line_start":797,"line_end":797,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026013,"byte_end":9026082,"line_start":798,"line_end":798,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026087,"byte_end":9026090,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026095,"byte_end":9026124,"line_start":800,"line_end":800,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026129,"byte_end":9026158,"line_start":801,"line_end":801,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026163,"byte_end":9026166,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026171,"byte_end":9026198,"line_start":803,"line_end":803,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026203,"byte_end":9026247,"line_start":804,"line_end":804,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026252,"byte_end":9026255,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026260,"byte_end":9026284,"line_start":806,"line_end":806,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026289,"byte_end":9026345,"line_start":807,"line_end":807,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026350,"byte_end":9026389,"line_start":808,"line_end":808,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026394,"byte_end":9026397,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026402,"byte_end":9026416,"line_start":810,"line_end":810,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026421,"byte_end":9026426,"line_start":811,"line_end":811,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026431,"byte_end":9026438,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026443,"byte_end":9026446,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026451,"byte_end":9026516,"line_start":814,"line_end":814,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026521,"byte_end":9026524,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026529,"byte_end":9026575,"line_start":816,"line_end":816,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9026580,"byte_end":9026631,"line_start":817,"line_end":817,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3520},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027748,"byte_end":9027755,"line_start":852,"line_end":852,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027216,"byte_end":9027278,"line_start":834,"line_end":834,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027283,"byte_end":9027286,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027291,"byte_end":9027355,"line_start":836,"line_end":836,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027360,"byte_end":9027363,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027368,"byte_end":9027411,"line_start":838,"line_end":838,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027416,"byte_end":9027419,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027424,"byte_end":9027438,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027443,"byte_end":9027446,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027451,"byte_end":9027464,"line_start":842,"line_end":842,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027469,"byte_end":9027499,"line_start":843,"line_end":843,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027504,"byte_end":9027507,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027512,"byte_end":9027576,"line_start":845,"line_end":845,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027581,"byte_end":9027642,"line_start":846,"line_end":846,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027647,"byte_end":9027650,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027655,"byte_end":9027695,"line_start":848,"line_end":848,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027700,"byte_end":9027712,"line_start":849,"line_end":849,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027717,"byte_end":9027724,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027729,"byte_end":9027736,"line_start":851,"line_end":851,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3521},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028552,"byte_end":9028563,"line_start":876,"line_end":876,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027822,"byte_end":9027884,"line_start":856,"line_end":856,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027889,"byte_end":9027892,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027897,"byte_end":9027966,"line_start":858,"line_end":858,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9027971,"byte_end":9028044,"line_start":859,"line_end":859,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028049,"byte_end":9028122,"line_start":860,"line_end":860,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028127,"byte_end":9028202,"line_start":861,"line_end":861,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028207,"byte_end":9028225,"line_start":862,"line_end":862,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028230,"byte_end":9028233,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028238,"byte_end":9028252,"line_start":864,"line_end":864,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028257,"byte_end":9028260,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028265,"byte_end":9028278,"line_start":866,"line_end":866,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028283,"byte_end":9028313,"line_start":867,"line_end":867,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028318,"byte_end":9028321,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028326,"byte_end":9028390,"line_start":869,"line_end":869,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028395,"byte_end":9028456,"line_start":870,"line_end":870,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028461,"byte_end":9028464,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028469,"byte_end":9028499,"line_start":872,"line_end":872,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028504,"byte_end":9028516,"line_start":873,"line_end":873,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028521,"byte_end":9028528,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028533,"byte_end":9028540,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3522},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029208,"byte_end":9029214,"line_start":899,"line_end":899,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028654,"byte_end":9028726,"line_start":880,"line_end":880,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028731,"byte_end":9028742,"line_start":881,"line_end":881,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028747,"byte_end":9028750,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028755,"byte_end":9028818,"line_start":883,"line_end":883,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028823,"byte_end":9028826,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028831,"byte_end":9028872,"line_start":885,"line_end":885,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028877,"byte_end":9028880,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028885,"byte_end":9028899,"line_start":887,"line_end":887,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028904,"byte_end":9028907,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028912,"byte_end":9028925,"line_start":889,"line_end":889,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028930,"byte_end":9028960,"line_start":890,"line_end":890,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028965,"byte_end":9028968,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9028973,"byte_end":9029037,"line_start":892,"line_end":892,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029042,"byte_end":9029103,"line_start":893,"line_end":893,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029108,"byte_end":9029111,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029116,"byte_end":9029155,"line_start":895,"line_end":895,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029160,"byte_end":9029172,"line_start":896,"line_end":896,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029177,"byte_end":9029184,"line_start":897,"line_end":897,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029189,"byte_end":9029196,"line_start":898,"line_end":898,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3523},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9030193,"byte_end":9030203,"line_start":926,"line_end":926,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the SO_LINGER option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the SO_LINGER option.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029369,"byte_end":9029445,"line_start":905,"line_end":905,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029450,"byte_end":9029453,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages and the stream is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029458,"byte_end":9029551,"line_start":907,"line_end":907,"column_start":5,"column_end":98}},{"value":"/ closed. If SO_LINGER is set, the system shall block the process until it can transmit the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029556,"byte_end":9029649,"line_start":908,"line_end":908,"column_start":5,"column_end":98}},{"value":"/ data or until the time expires.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029654,"byte_end":9029689,"line_start":909,"line_end":909,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029694,"byte_end":9029697,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ If SO_LINGER is not specified, and the stream is closed, the system handles the call in a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029702,"byte_end":9029795,"line_start":911,"line_end":911,"column_start":5,"column_end":98}},{"value":"/ way that allows the process to continue as quickly as possible.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029800,"byte_end":9029867,"line_start":912,"line_end":912,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029872,"byte_end":9029875,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029880,"byte_end":9029894,"line_start":914,"line_end":914,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029899,"byte_end":9029902,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029907,"byte_end":9029920,"line_start":916,"line_end":916,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029925,"byte_end":9029955,"line_start":917,"line_end":917,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029960,"byte_end":9029963,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9029968,"byte_end":9030032,"line_start":919,"line_end":919,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9030037,"byte_end":9030098,"line_start":920,"line_end":920,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9030103,"byte_end":9030106,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9030111,"byte_end":9030140,"line_start":922,"line_end":922,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9030145,"byte_end":9030157,"line_start":923,"line_end":923,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9030162,"byte_end":9030169,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9030174,"byte_end":9030181,"line_start":925,"line_end":925,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3525},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031177,"byte_end":9031180,"line_start":962,"line_end":962,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9030665,"byte_end":9030723,"line_start":944,"line_end":944,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9030728,"byte_end":9030731,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9030736,"byte_end":9030796,"line_start":946,"line_end":946,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9030801,"byte_end":9030804,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9030809,"byte_end":9030844,"line_start":948,"line_end":948,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9030849,"byte_end":9030852,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9030857,"byte_end":9030871,"line_start":950,"line_end":950,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9030876,"byte_end":9030879,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9030884,"byte_end":9030897,"line_start":952,"line_end":952,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9030902,"byte_end":9030932,"line_start":953,"line_end":953,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9030937,"byte_end":9030940,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9030945,"byte_end":9031009,"line_start":955,"line_end":955,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031014,"byte_end":9031075,"line_start":956,"line_end":956,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031080,"byte_end":9031083,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031088,"byte_end":9031124,"line_start":958,"line_end":958,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031129,"byte_end":9031141,"line_start":959,"line_end":959,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031146,"byte_end":9031153,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031158,"byte_end":9031165,"line_start":961,"line_end":961,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3526},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031737,"byte_end":9031744,"line_start":983,"line_end":983,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031242,"byte_end":9031300,"line_start":966,"line_end":966,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031305,"byte_end":9031308,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031313,"byte_end":9031389,"line_start":968,"line_end":968,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031394,"byte_end":9031415,"line_start":969,"line_end":969,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031420,"byte_end":9031423,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031428,"byte_end":9031442,"line_start":971,"line_end":971,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031447,"byte_end":9031450,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031455,"byte_end":9031468,"line_start":973,"line_end":973,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031473,"byte_end":9031503,"line_start":974,"line_end":974,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031508,"byte_end":9031511,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031516,"byte_end":9031580,"line_start":976,"line_end":976,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031585,"byte_end":9031646,"line_start":977,"line_end":977,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031651,"byte_end":9031654,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031659,"byte_end":9031684,"line_start":979,"line_end":979,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031689,"byte_end":9031701,"line_start":980,"line_end":980,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031706,"byte_end":9031713,"line_start":981,"line_end":981,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031718,"byte_end":9031725,"line_start":982,"line_end":982,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3527},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9032336,"byte_end":9032341,"line_start":997,"line_end":997,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9031959,"byte_end":9031995,"line_start":989,"line_end":989,"column_start":5,"column_end":41}},{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9032000,"byte_end":9032077,"line_start":990,"line_end":990,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9032082,"byte_end":9032128,"line_start":991,"line_end":991,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9032133,"byte_end":9032136,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9032141,"byte_end":9032220,"line_start":993,"line_end":993,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9032225,"byte_end":9032268,"line_start":994,"line_end":994,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9032273,"byte_end":9032276,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9032281,"byte_end":9032324,"line_start":996,"line_end":996,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3529},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9032990,"byte_end":9033000,"line_start":1012,"line_end":1012,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9032426,"byte_end":9032503,"line_start":1001,"line_end":1001,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9032508,"byte_end":9032554,"line_start":1002,"line_end":1002,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9032559,"byte_end":9032562,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9032567,"byte_end":9032645,"line_start":1004,"line_end":1004,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9032650,"byte_end":9032698,"line_start":1005,"line_end":1005,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9032703,"byte_end":9032706,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the TCP","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9032711,"byte_end":9032789,"line_start":1007,"line_end":1007,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling [`shutdown()`] on the `TcpStream`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9032794,"byte_end":9032870,"line_start":1008,"line_end":1008,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9032875,"byte_end":9032878,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9032883,"byte_end":9032916,"line_start":1010,"line_end":1010,"column_start":5,"column_end":38}},{"value":"/ [`shutdown()`]: fn@crate::io::AsyncWriteExt::shutdown","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9032921,"byte_end":9032978,"line_start":1011,"line_end":1011,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3715},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040305,"byte_end":9040314,"line_start":120,"line_end":120,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":3716}],"decl_id":null,"docs":" A UDP socket","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":21444,"byte_end":21467,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3576},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040851,"byte_end":9040855,"line_start":143,"line_end":143,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040393,"byte_end":9040465,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040470,"byte_end":9040494,"line_start":127,"line_end":127,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040499,"byte_end":9040502,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040507,"byte_end":9040520,"line_start":129,"line_end":129,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040525,"byte_end":9040528,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040533,"byte_end":9040546,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040551,"byte_end":9040581,"line_start":132,"line_end":132,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040586,"byte_end":9040602,"line_start":133,"line_end":133,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040607,"byte_end":9040610,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040615,"byte_end":9040633,"line_start":135,"line_end":135,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040638,"byte_end":9040677,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/     let sock = UdpSocket::bind(\"0.0.0.0:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040682,"byte_end":9040740,"line_start":137,"line_end":137,"column_start":5,"column_end":63}},{"value":"/     // use `sock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040745,"byte_end":9040766,"line_start":138,"line_end":138,"column_start":5,"column_end":26}},{"value":"/ #   let _ = sock;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040771,"byte_end":9040792,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040797,"byte_end":9040811,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040816,"byte_end":9040821,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040826,"byte_end":9040833,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3583},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043094,"byte_end":9043102,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UdpSocket` from a previously bound `std::net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates new `UdpSocket` from a previously bound `std::net::UdpSocket`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9041688,"byte_end":9041762,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9041767,"byte_end":9041770,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9041775,"byte_end":9041845,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9041850,"byte_end":9041926,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9041931,"byte_end":9042002,"line_start":176,"line_end":176,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042007,"byte_end":9042029,"line_start":177,"line_end":177,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042034,"byte_end":9042037,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with socket2's `Socket` interface to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042042,"byte_end":9042114,"line_start":179,"line_end":179,"column_start":5,"column_end":77}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042119,"byte_end":9042194,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042199,"byte_end":9042252,"line_start":181,"line_end":181,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042257,"byte_end":9042260,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042265,"byte_end":9042277,"line_start":183,"line_end":183,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042282,"byte_end":9042285,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042290,"byte_end":9042350,"line_start":185,"line_end":185,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042355,"byte_end":9042358,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042363,"byte_end":9042433,"line_start":187,"line_end":187,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042438,"byte_end":9042511,"line_start":188,"line_end":188,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042516,"byte_end":9042596,"line_start":189,"line_end":189,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042601,"byte_end":9042604,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042609,"byte_end":9042622,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042627,"byte_end":9042630,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042635,"byte_end":9042648,"line_start":193,"line_end":193,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042653,"byte_end":9042683,"line_start":194,"line_end":194,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042688,"byte_end":9042725,"line_start":195,"line_end":195,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042730,"byte_end":9042733,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042738,"byte_end":9042758,"line_start":197,"line_end":197,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042763,"byte_end":9042804,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let addr = \"0.0.0.0:8080\".parse::<SocketAddr>().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042809,"byte_end":9042870,"line_start":199,"line_end":199,"column_start":5,"column_end":66}},{"value":"/ let std_sock = std::net::UdpSocket::bind(addr)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042875,"byte_end":9042927,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/ std_sock.set_nonblocking(true)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042932,"byte_end":9042968,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ let sock = UdpSocket::from_std(std_sock)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9042973,"byte_end":9043019,"line_start":202,"line_end":202,"column_start":5,"column_end":51}},{"value":"/ // use `sock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043024,"byte_end":9043041,"line_start":203,"line_end":203,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043046,"byte_end":9043058,"line_start":204,"line_end":204,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043063,"byte_end":9043070,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043075,"byte_end":9043082,"line_start":206,"line_end":206,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3584},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043774,"byte_end":9043784,"line_start":229,"line_end":229,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043248,"byte_end":9043307,"line_start":212,"line_end":212,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043312,"byte_end":9043315,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043320,"byte_end":9043333,"line_start":214,"line_end":214,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043338,"byte_end":9043341,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043346,"byte_end":9043359,"line_start":216,"line_end":216,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043364,"byte_end":9043394,"line_start":217,"line_end":217,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043399,"byte_end":9043436,"line_start":218,"line_end":218,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043441,"byte_end":9043444,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043449,"byte_end":9043469,"line_start":220,"line_end":220,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043474,"byte_end":9043515,"line_start":221,"line_end":221,"column_start":5,"column_end":46}},{"value":"/ let addr = \"0.0.0.0:8080\".parse::<SocketAddr>().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043520,"byte_end":9043581,"line_start":222,"line_end":222,"column_start":5,"column_end":66}},{"value":"/ let sock = UdpSocket::bind(addr).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043586,"byte_end":9043630,"line_start":223,"line_end":223,"column_start":5,"column_end":49}},{"value":"/ // the address the socket is bound to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043635,"byte_end":9043676,"line_start":224,"line_end":224,"column_start":5,"column_end":46}},{"value":"/ let local_addr = sock.local_addr()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043681,"byte_end":9043721,"line_start":225,"line_end":225,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043726,"byte_end":9043738,"line_start":226,"line_end":226,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043743,"byte_end":9043750,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043755,"byte_end":9043762,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3585},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044704,"byte_end":9044711,"line_start":257,"line_end":257,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043860,"byte_end":9043934,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9043939,"byte_end":9044012,"line_start":234,"line_end":234,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044017,"byte_end":9044028,"line_start":235,"line_end":235,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044033,"byte_end":9044036,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044041,"byte_end":9044054,"line_start":237,"line_end":237,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044059,"byte_end":9044062,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044067,"byte_end":9044080,"line_start":239,"line_end":239,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044085,"byte_end":9044115,"line_start":240,"line_end":240,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044120,"byte_end":9044157,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044162,"byte_end":9044165,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044170,"byte_end":9044190,"line_start":243,"line_end":243,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044195,"byte_end":9044236,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/ let sock = UdpSocket::bind(\"0.0.0.0:8080\".parse::<SocketAddr>().unwrap()).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044241,"byte_end":9044326,"line_start":245,"line_end":245,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044331,"byte_end":9044334,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let remote_addr = \"127.0.0.1:59600\".parse::<SocketAddr>().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044339,"byte_end":9044410,"line_start":247,"line_end":247,"column_start":5,"column_end":76}},{"value":"/ sock.connect(remote_addr).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044415,"byte_end":9044452,"line_start":248,"line_end":248,"column_start":5,"column_end":42}},{"value":"/ let mut buf = [0u8; 32];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044457,"byte_end":9044485,"line_start":249,"line_end":249,"column_start":5,"column_end":33}},{"value":"/ // recv from remote_addr","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044490,"byte_end":9044518,"line_start":250,"line_end":250,"column_start":5,"column_end":33}},{"value":"/ let len = sock.recv(&mut buf).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044523,"byte_end":9044564,"line_start":251,"line_end":251,"column_start":5,"column_end":46}},{"value":"/ // send to remote_addr","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044569,"byte_end":9044595,"line_start":252,"line_end":252,"column_start":5,"column_end":31}},{"value":"/ let _len = sock.send(&buf[..len]).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044600,"byte_end":9044645,"line_start":253,"line_end":253,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044650,"byte_end":9044662,"line_start":254,"line_end":254,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044667,"byte_end":9044674,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9044679,"byte_end":9044686,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3590},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047518,"byte_end":9047523,"line_start":335,"line_end":335,"column_start":18,"column_end":23},"name":"ready","qualname":"<UdpSocket>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045234,"byte_end":9045281,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045286,"byte_end":9045289,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_recv()` or `try_send()`. It","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045294,"byte_end":9045367,"line_start":278,"line_end":278,"column_start":5,"column_end":78}},{"value":"/ can be used to concurrently recv / send to the same socket on a single","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045372,"byte_end":9045446,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/ task without splitting the socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045451,"byte_end":9045489,"line_start":280,"line_end":280,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045494,"byte_end":9045497,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being ready. This is a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045502,"byte_end":9045573,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ false-positive and attempting an operation will return with","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045578,"byte_end":9045641,"line_start":283,"line_end":283,"column_start":5,"column_end":68}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045646,"byte_end":9045678,"line_start":284,"line_end":284,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045683,"byte_end":9045686,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045691,"byte_end":9045705,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045710,"byte_end":9045713,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Concurrently receive from and send to the socket on the same task","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045718,"byte_end":9045787,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ without splitting.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045792,"byte_end":9045814,"line_start":289,"line_end":289,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045819,"byte_end":9045822,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045827,"byte_end":9045840,"line_start":291,"line_end":291,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, Interest};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045845,"byte_end":9045881,"line_start":292,"line_end":292,"column_start":5,"column_end":41}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045886,"byte_end":9045916,"line_start":293,"line_end":293,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045921,"byte_end":9045924,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045929,"byte_end":9045947,"line_start":295,"line_end":295,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045952,"byte_end":9045991,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9045996,"byte_end":9046058,"line_start":297,"line_end":297,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046063,"byte_end":9046111,"line_start":298,"line_end":298,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046116,"byte_end":9046119,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046124,"byte_end":9046138,"line_start":300,"line_end":300,"column_start":5,"column_end":19}},{"value":"/         let ready = socket.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046143,"byte_end":9046228,"line_start":301,"line_end":301,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046233,"byte_end":9046236,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046241,"byte_end":9046277,"line_start":303,"line_end":303,"column_start":5,"column_end":41}},{"value":"/             // The buffer is **not** included in the async task and will only exist","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046282,"byte_end":9046369,"line_start":304,"line_end":304,"column_start":5,"column_end":92}},{"value":"/             // on the stack.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046374,"byte_end":9046406,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/             let mut data = [0; 1024];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046411,"byte_end":9046452,"line_start":306,"line_end":306,"column_start":5,"column_end":46}},{"value":"/             match socket.try_recv(&mut data[..]) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046457,"byte_end":9046511,"line_start":307,"line_end":307,"column_start":5,"column_end":59}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046516,"byte_end":9046546,"line_start":308,"line_end":308,"column_start":5,"column_end":35}},{"value":"/                     println!(\"received {:?}\", &data[..n]);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046551,"byte_end":9046613,"line_start":309,"line_end":309,"column_start":5,"column_end":67}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046618,"byte_end":9046639,"line_start":310,"line_end":310,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046644,"byte_end":9046691,"line_start":311,"line_end":311,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046696,"byte_end":9046773,"line_start":312,"line_end":312,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046778,"byte_end":9046809,"line_start":313,"line_end":313,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046814,"byte_end":9046852,"line_start":314,"line_end":314,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046857,"byte_end":9046878,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046883,"byte_end":9046900,"line_start":316,"line_end":316,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046905,"byte_end":9046918,"line_start":317,"line_end":317,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046923,"byte_end":9046926,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046931,"byte_end":9046967,"line_start":319,"line_end":319,"column_start":5,"column_end":41}},{"value":"/             // Write some data","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9046972,"byte_end":9047006,"line_start":320,"line_end":320,"column_start":5,"column_end":39}},{"value":"/             match socket.try_send(b\"hello world\") {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047011,"byte_end":9047066,"line_start":321,"line_end":321,"column_start":5,"column_end":60}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047071,"byte_end":9047101,"line_start":322,"line_end":322,"column_start":5,"column_end":35}},{"value":"/                     println!(\"sent {} bytes\", n);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047106,"byte_end":9047159,"line_start":323,"line_end":323,"column_start":5,"column_end":58}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047164,"byte_end":9047185,"line_start":324,"line_end":324,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047190,"byte_end":9047237,"line_start":325,"line_end":325,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047242,"byte_end":9047319,"line_start":326,"line_end":326,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047324,"byte_end":9047355,"line_start":327,"line_end":327,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047360,"byte_end":9047398,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047403,"byte_end":9047424,"line_start":329,"line_end":329,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047429,"byte_end":9047446,"line_start":330,"line_end":330,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047451,"byte_end":9047464,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047469,"byte_end":9047478,"line_start":332,"line_end":332,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047483,"byte_end":9047488,"line_start":333,"line_end":333,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047493,"byte_end":9047500,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3593},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049125,"byte_end":9049133,"line_start":383,"line_end":383,"column_start":18,"column_end":26},"name":"writable","qualname":"<UdpSocket>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047680,"byte_end":9047723,"line_start":340,"line_end":340,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047728,"byte_end":9047731,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047736,"byte_end":9047805,"line_start":342,"line_end":342,"column_start":5,"column_end":74}},{"value":"/ usually paired with `try_send()` or `try_send_to()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047810,"byte_end":9047866,"line_start":343,"line_end":343,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047871,"byte_end":9047874,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being writable. This is a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047879,"byte_end":9047953,"line_start":345,"line_end":345,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_send()` will return with","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9047958,"byte_end":9048023,"line_start":346,"line_end":346,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048028,"byte_end":9048060,"line_start":347,"line_end":347,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048065,"byte_end":9048068,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048073,"byte_end":9048087,"line_start":349,"line_end":349,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048092,"byte_end":9048095,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048100,"byte_end":9048113,"line_start":351,"line_end":351,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048118,"byte_end":9048148,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048153,"byte_end":9048169,"line_start":353,"line_end":353,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048174,"byte_end":9048177,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048182,"byte_end":9048200,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048205,"byte_end":9048244,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048249,"byte_end":9048271,"line_start":357,"line_end":357,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048276,"byte_end":9048338,"line_start":358,"line_end":358,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048343,"byte_end":9048391,"line_start":359,"line_end":359,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048396,"byte_end":9048399,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048404,"byte_end":9048418,"line_start":361,"line_end":361,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048423,"byte_end":9048472,"line_start":362,"line_end":362,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048477,"byte_end":9048514,"line_start":363,"line_end":363,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048519,"byte_end":9048522,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048527,"byte_end":9048597,"line_start":365,"line_end":365,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048602,"byte_end":9048660,"line_start":366,"line_end":366,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048665,"byte_end":9048716,"line_start":367,"line_end":367,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048721,"byte_end":9048747,"line_start":368,"line_end":368,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048752,"byte_end":9048778,"line_start":369,"line_end":369,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048783,"byte_end":9048800,"line_start":370,"line_end":370,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048805,"byte_end":9048877,"line_start":371,"line_end":371,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048882,"byte_end":9048911,"line_start":372,"line_end":372,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048916,"byte_end":9048933,"line_start":373,"line_end":373,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048938,"byte_end":9048965,"line_start":374,"line_end":374,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9048970,"byte_end":9049004,"line_start":375,"line_end":375,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049009,"byte_end":9049026,"line_start":376,"line_end":376,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049031,"byte_end":9049044,"line_start":377,"line_end":377,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049049,"byte_end":9049058,"line_start":378,"line_end":378,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049063,"byte_end":9049066,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049071,"byte_end":9049085,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049090,"byte_end":9049095,"line_start":381,"line_end":381,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049100,"byte_end":9049107,"line_start":382,"line_end":382,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3596},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050153,"byte_end":9050157,"line_start":419,"line_end":419,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address that the socket is\n connected to.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address that the socket is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049234,"byte_end":9049303,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ connected to.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049308,"byte_end":9049325,"line_start":389,"line_end":389,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049330,"byte_end":9049333,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049338,"byte_end":9049410,"line_start":391,"line_end":391,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049415,"byte_end":9049472,"line_start":392,"line_end":392,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049477,"byte_end":9049480,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049485,"byte_end":9049522,"line_start":394,"line_end":394,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049527,"byte_end":9049530,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049535,"byte_end":9049547,"line_start":396,"line_end":396,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049552,"byte_end":9049555,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ On success, the number of bytes sent is returned, otherwise, the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049560,"byte_end":9049628,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/ encountered error is returned.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049633,"byte_end":9049667,"line_start":399,"line_end":399,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049672,"byte_end":9049675,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049680,"byte_end":9049694,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049699,"byte_end":9049702,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049707,"byte_end":9049720,"line_start":403,"line_end":403,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049725,"byte_end":9049743,"line_start":404,"line_end":404,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049748,"byte_end":9049778,"line_start":405,"line_end":405,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049783,"byte_end":9049786,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049791,"byte_end":9049809,"line_start":407,"line_end":407,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049814,"byte_end":9049853,"line_start":408,"line_end":408,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049858,"byte_end":9049880,"line_start":409,"line_end":409,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049885,"byte_end":9049947,"line_start":410,"line_end":410,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9049952,"byte_end":9050000,"line_start":411,"line_end":411,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050005,"byte_end":9050008,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/     // Send a message","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050013,"byte_end":9050038,"line_start":413,"line_end":413,"column_start":5,"column_end":30}},{"value":"/     socket.send(b\"hello world\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050043,"byte_end":9050086,"line_start":414,"line_end":414,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050091,"byte_end":9050094,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050099,"byte_end":9050113,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050118,"byte_end":9050123,"line_start":417,"line_end":417,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050128,"byte_end":9050135,"line_start":418,"line_end":418,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3600},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051245,"byte_end":9051254,"line_start":449,"line_end":449,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to the remote address to which it\n was previously `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to the remote address to which it","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050338,"byte_end":9050411,"line_start":426,"line_end":426,"column_start":5,"column_end":78}},{"value":"/ was previously `connect`ed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050416,"byte_end":9050447,"line_start":427,"line_end":427,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050452,"byte_end":9050455,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050460,"byte_end":9050532,"line_start":429,"line_end":429,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050537,"byte_end":9050594,"line_start":430,"line_end":430,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050599,"byte_end":9050602,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050607,"byte_end":9050682,"line_start":432,"line_end":432,"column_start":5,"column_end":80}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050687,"byte_end":9050762,"line_start":433,"line_end":433,"column_start":5,"column_end":80}},{"value":"/ be scheduled to receive a wakeup.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050767,"byte_end":9050804,"line_start":434,"line_end":434,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050809,"byte_end":9050812,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050817,"byte_end":9050835,"line_start":436,"line_end":436,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050840,"byte_end":9050843,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050848,"byte_end":9050873,"line_start":438,"line_end":438,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050878,"byte_end":9050881,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not available to write","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050886,"byte_end":9050947,"line_start":440,"line_end":440,"column_start":5,"column_end":66}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9050952,"byte_end":9051010,"line_start":441,"line_end":441,"column_start":5,"column_end":63}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051015,"byte_end":9051070,"line_start":442,"line_end":442,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051075,"byte_end":9051078,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051083,"byte_end":9051095,"line_start":444,"line_end":444,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051100,"byte_end":9051103,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051108,"byte_end":9051183,"line_start":446,"line_end":446,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051188,"byte_end":9051191,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051196,"byte_end":9051233,"line_start":448,"line_end":448,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3602},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052998,"byte_end":9053006,"line_start":503,"line_end":503,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UdpSocket>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the remote address to which it is\n connected.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the remote address to which it is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051433,"byte_end":9051504,"line_start":455,"line_end":455,"column_start":5,"column_end":76}},{"value":"/ connected.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051509,"byte_end":9051523,"line_start":456,"line_end":456,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051528,"byte_end":9051531,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ When the socket buffer is full, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051536,"byte_end":9051607,"line_start":458,"line_end":458,"column_start":5,"column_end":76}},{"value":"/ returned. This function is usually paired with `writable()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051612,"byte_end":9051676,"line_start":459,"line_end":459,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051681,"byte_end":9051684,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051689,"byte_end":9051702,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051707,"byte_end":9051710,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ If successful, `Ok(n)` is returned, where `n` is the number of bytes","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051715,"byte_end":9051787,"line_start":463,"line_end":463,"column_start":5,"column_end":77}},{"value":"/ sent. If the socket is not ready to send data,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051792,"byte_end":9051842,"line_start":464,"line_end":464,"column_start":5,"column_end":55}},{"value":"/ `Err(ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051847,"byte_end":9051892,"line_start":465,"line_end":465,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051897,"byte_end":9051900,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051905,"byte_end":9051919,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051924,"byte_end":9051927,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051932,"byte_end":9051945,"line_start":469,"line_end":469,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051950,"byte_end":9051980,"line_start":470,"line_end":470,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9051985,"byte_end":9052001,"line_start":471,"line_end":471,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052006,"byte_end":9052009,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052014,"byte_end":9052032,"line_start":473,"line_end":473,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052037,"byte_end":9052076,"line_start":474,"line_end":474,"column_start":5,"column_end":44}},{"value":"/     // Bind a UDP socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052081,"byte_end":9052109,"line_start":475,"line_end":475,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052114,"byte_end":9052176,"line_start":476,"line_end":476,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052181,"byte_end":9052184,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052189,"byte_end":9052217,"line_start":478,"line_end":478,"column_start":5,"column_end":33}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052222,"byte_end":9052270,"line_start":479,"line_end":479,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052275,"byte_end":9052278,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052283,"byte_end":9052297,"line_start":481,"line_end":481,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052302,"byte_end":9052351,"line_start":482,"line_end":482,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052356,"byte_end":9052393,"line_start":483,"line_end":483,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052398,"byte_end":9052401,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052406,"byte_end":9052476,"line_start":485,"line_end":485,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052481,"byte_end":9052539,"line_start":486,"line_end":486,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052544,"byte_end":9052595,"line_start":487,"line_end":487,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052600,"byte_end":9052626,"line_start":488,"line_end":488,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052631,"byte_end":9052657,"line_start":489,"line_end":489,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052662,"byte_end":9052679,"line_start":490,"line_end":490,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052684,"byte_end":9052756,"line_start":491,"line_end":491,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052761,"byte_end":9052790,"line_start":492,"line_end":492,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052795,"byte_end":9052812,"line_start":493,"line_end":493,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052817,"byte_end":9052844,"line_start":494,"line_end":494,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052849,"byte_end":9052883,"line_start":495,"line_end":495,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052888,"byte_end":9052905,"line_start":496,"line_end":496,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052910,"byte_end":9052923,"line_start":497,"line_end":497,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052928,"byte_end":9052937,"line_start":498,"line_end":498,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052942,"byte_end":9052945,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052950,"byte_end":9052964,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052969,"byte_end":9052974,"line_start":501,"line_end":501,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9052979,"byte_end":9052986,"line_start":502,"line_end":502,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3604},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054819,"byte_end":9054827,"line_start":557,"line_end":557,"column_start":18,"column_end":26},"name":"readable","qualname":"<UdpSocket>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053166,"byte_end":9053209,"line_start":509,"line_end":509,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053214,"byte_end":9053217,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053222,"byte_end":9053299,"line_start":511,"line_end":511,"column_start":5,"column_end":82}},{"value":"/ paired with `try_recv()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053304,"byte_end":9053333,"line_start":512,"line_end":512,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053338,"byte_end":9053341,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being readable. This is a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053346,"byte_end":9053420,"line_start":514,"line_end":514,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_recv()` will return with","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053425,"byte_end":9053490,"line_start":515,"line_end":515,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053495,"byte_end":9053527,"line_start":516,"line_end":516,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053532,"byte_end":9053535,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053540,"byte_end":9053554,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053559,"byte_end":9053562,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053567,"byte_end":9053580,"line_start":520,"line_end":520,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053585,"byte_end":9053615,"line_start":521,"line_end":521,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053620,"byte_end":9053636,"line_start":522,"line_end":522,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053641,"byte_end":9053644,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053649,"byte_end":9053667,"line_start":524,"line_end":524,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053672,"byte_end":9053711,"line_start":525,"line_end":525,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053716,"byte_end":9053744,"line_start":526,"line_end":526,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053749,"byte_end":9053811,"line_start":527,"line_end":527,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053816,"byte_end":9053864,"line_start":528,"line_end":528,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053869,"byte_end":9053872,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053877,"byte_end":9053891,"line_start":530,"line_end":530,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053896,"byte_end":9053945,"line_start":531,"line_end":531,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053950,"byte_end":9053987,"line_start":532,"line_end":532,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9053992,"byte_end":9053995,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054000,"byte_end":9054072,"line_start":534,"line_end":534,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054077,"byte_end":9054116,"line_start":535,"line_end":535,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054121,"byte_end":9054157,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054162,"byte_end":9054165,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054170,"byte_end":9054240,"line_start":538,"line_end":538,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054245,"byte_end":9054303,"line_start":539,"line_end":539,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054308,"byte_end":9054353,"line_start":540,"line_end":540,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054358,"byte_end":9054384,"line_start":541,"line_end":541,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054389,"byte_end":9054441,"line_start":542,"line_end":542,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054446,"byte_end":9054472,"line_start":543,"line_end":543,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054477,"byte_end":9054494,"line_start":544,"line_end":544,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054499,"byte_end":9054571,"line_start":545,"line_end":545,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054576,"byte_end":9054605,"line_start":546,"line_end":546,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054610,"byte_end":9054627,"line_start":547,"line_end":547,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054632,"byte_end":9054659,"line_start":548,"line_end":548,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054664,"byte_end":9054698,"line_start":549,"line_end":549,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054703,"byte_end":9054720,"line_start":550,"line_end":550,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054725,"byte_end":9054738,"line_start":551,"line_end":551,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054743,"byte_end":9054752,"line_start":552,"line_end":552,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054757,"byte_end":9054760,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054765,"byte_end":9054779,"line_start":554,"line_end":554,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054784,"byte_end":9054789,"line_start":555,"line_end":555,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054794,"byte_end":9054801,"line_start":556,"line_end":556,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3607},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056040,"byte_end":9056044,"line_start":592,"line_end":592,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket from the remote address\n to which it is connected. On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket from the remote address","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9054928,"byte_end":9055004,"line_start":562,"line_end":562,"column_start":5,"column_end":81}},{"value":"/ to which it is connected. On success, returns the number of bytes read.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055009,"byte_end":9055084,"line_start":563,"line_end":563,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055089,"byte_end":9055092,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055097,"byte_end":9055170,"line_start":565,"line_end":565,"column_start":5,"column_end":78}},{"value":"/ size to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055175,"byte_end":9055249,"line_start":566,"line_end":566,"column_start":5,"column_end":79}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055254,"byte_end":9055305,"line_start":567,"line_end":567,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055310,"byte_end":9055313,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055318,"byte_end":9055390,"line_start":569,"line_end":569,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055395,"byte_end":9055452,"line_start":570,"line_end":570,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055457,"byte_end":9055460,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055465,"byte_end":9055502,"line_start":572,"line_end":572,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055507,"byte_end":9055510,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055515,"byte_end":9055528,"line_start":574,"line_end":574,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055533,"byte_end":9055563,"line_start":575,"line_end":575,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055568,"byte_end":9055584,"line_start":576,"line_end":576,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055589,"byte_end":9055592,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055597,"byte_end":9055615,"line_start":578,"line_end":578,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055620,"byte_end":9055659,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055664,"byte_end":9055686,"line_start":580,"line_end":580,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055691,"byte_end":9055753,"line_start":581,"line_end":581,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055758,"byte_end":9055806,"line_start":582,"line_end":582,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055811,"byte_end":9055814,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0; 10];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055819,"byte_end":9055853,"line_start":584,"line_end":584,"column_start":5,"column_end":39}},{"value":"/     let n = socket.recv(&mut buf).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055858,"byte_end":9055903,"line_start":585,"line_end":585,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055908,"byte_end":9055911,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/     println!(\"received {} bytes {:?}\", n, &buf[..n]);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055916,"byte_end":9055973,"line_start":587,"line_end":587,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055978,"byte_end":9055981,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9055986,"byte_end":9056000,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056005,"byte_end":9056010,"line_start":590,"line_end":590,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056015,"byte_end":9056022,"line_start":591,"line_end":591,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9057169,"byte_end":9057178,"line_start":622,"line_end":622,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram message on the socket from the remote\n address to which it is `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram message on the socket from the remote","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056229,"byte_end":9056308,"line_start":599,"line_end":599,"column_start":5,"column_end":84}},{"value":"/ address to which it is `connect`ed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056313,"byte_end":9056352,"line_start":600,"line_end":600,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056357,"byte_end":9056360,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. This method","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056365,"byte_end":9056449,"line_start":602,"line_end":602,"column_start":5,"column_end":89}},{"value":"/ resolves to an error if the socket is not connected.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056454,"byte_end":9056510,"line_start":603,"line_end":603,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056515,"byte_end":9056518,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056523,"byte_end":9056607,"line_start":605,"line_end":605,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056612,"byte_end":9056694,"line_start":606,"line_end":606,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056699,"byte_end":9056720,"line_start":607,"line_end":607,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056725,"byte_end":9056728,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056733,"byte_end":9056751,"line_start":609,"line_end":609,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056756,"byte_end":9056759,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056764,"byte_end":9056789,"line_start":611,"line_end":611,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056794,"byte_end":9056797,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056802,"byte_end":9056858,"line_start":613,"line_end":613,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(()))` reads data `ReadBuf` if the socket is ready","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056863,"byte_end":9056934,"line_start":614,"line_end":614,"column_start":5,"column_end":76}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056939,"byte_end":9056994,"line_start":615,"line_end":615,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9056999,"byte_end":9057002,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9057007,"byte_end":9057019,"line_start":617,"line_end":617,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9057024,"byte_end":9057027,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9057032,"byte_end":9057107,"line_start":619,"line_end":619,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9057112,"byte_end":9057115,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9057120,"byte_end":9057157,"line_start":621,"line_end":621,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9059599,"byte_end":9059607,"line_start":690,"line_end":690,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UdpSocket>::try_recv","value":"pub fn try_recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket from the remote\n address to which it is connected. On success, returns the number of\n bytes read.","sig":null,"attributes":[{"value":"/ Try to receive a single datagram message on the socket from the remote","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9057772,"byte_end":9057846,"line_start":640,"line_end":640,"column_start":5,"column_end":79}},{"value":"/ address to which it is connected. On success, returns the number of","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9057851,"byte_end":9057922,"line_start":641,"line_end":641,"column_start":5,"column_end":76}},{"value":"/ bytes read.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9057927,"byte_end":9057942,"line_start":642,"line_end":642,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9057947,"byte_end":9057950,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array buf of sufficient size","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9057955,"byte_end":9058031,"line_start":644,"line_end":644,"column_start":5,"column_end":81}},{"value":"/ to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058036,"byte_end":9058105,"line_start":645,"line_end":645,"column_start":5,"column_end":74}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058110,"byte_end":9058161,"line_start":646,"line_end":646,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058166,"byte_end":9058169,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ When there is no pending data, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058174,"byte_end":9058244,"line_start":648,"line_end":648,"column_start":5,"column_end":75}},{"value":"/ returned. This function is usually paired with `readable()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058249,"byte_end":9058313,"line_start":649,"line_end":649,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058318,"byte_end":9058321,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058326,"byte_end":9058340,"line_start":651,"line_end":651,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058345,"byte_end":9058348,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058353,"byte_end":9058366,"line_start":653,"line_end":653,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058371,"byte_end":9058401,"line_start":654,"line_end":654,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058406,"byte_end":9058422,"line_start":655,"line_end":655,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058427,"byte_end":9058430,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058435,"byte_end":9058453,"line_start":657,"line_end":657,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058458,"byte_end":9058497,"line_start":658,"line_end":658,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058502,"byte_end":9058530,"line_start":659,"line_end":659,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058535,"byte_end":9058597,"line_start":660,"line_end":660,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058602,"byte_end":9058650,"line_start":661,"line_end":661,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058655,"byte_end":9058658,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058663,"byte_end":9058677,"line_start":663,"line_end":663,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058682,"byte_end":9058731,"line_start":664,"line_end":664,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058736,"byte_end":9058773,"line_start":665,"line_end":665,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058778,"byte_end":9058781,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058786,"byte_end":9058858,"line_start":667,"line_end":667,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058863,"byte_end":9058902,"line_start":668,"line_end":668,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058907,"byte_end":9058943,"line_start":669,"line_end":669,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058948,"byte_end":9058951,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9058956,"byte_end":9059026,"line_start":671,"line_end":671,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9059031,"byte_end":9059089,"line_start":672,"line_end":672,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9059094,"byte_end":9059139,"line_start":673,"line_end":673,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9059144,"byte_end":9059170,"line_start":674,"line_end":674,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9059175,"byte_end":9059227,"line_start":675,"line_end":675,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9059232,"byte_end":9059258,"line_start":676,"line_end":676,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9059263,"byte_end":9059280,"line_start":677,"line_end":677,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9059285,"byte_end":9059357,"line_start":678,"line_end":678,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9059362,"byte_end":9059391,"line_start":679,"line_end":679,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9059396,"byte_end":9059413,"line_start":680,"line_end":680,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9059418,"byte_end":9059445,"line_start":681,"line_end":681,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9059450,"byte_end":9059484,"line_start":682,"line_end":682,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9059489,"byte_end":9059506,"line_start":683,"line_end":683,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9059511,"byte_end":9059524,"line_start":684,"line_end":684,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9059529,"byte_end":9059538,"line_start":685,"line_end":685,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9059543,"byte_end":9059546,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9059551,"byte_end":9059565,"line_start":687,"line_end":687,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9059570,"byte_end":9059575,"line_start":688,"line_end":688,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9059580,"byte_end":9059587,"line_start":689,"line_end":689,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3718},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9061686,"byte_end":9061698,"line_start":744,"line_end":744,"column_start":16,"column_end":28},"name":"try_recv_buf","qualname":"<UdpSocket>::try_recv_buf","value":"pub fn try_recv_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3721},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9064126,"byte_end":9064143,"line_start":808,"line_end":808,"column_start":16,"column_end":33},"name":"try_recv_buf_from","qualname":"<UdpSocket>::try_recv_buf_from","value":"pub fn try_recv_buf_from<B: BufMut>(&Self, &mut B)\n-> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket. On success,\n returns the number of bytes read and the origin.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3614},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065830,"byte_end":9065837,"line_start":857,"line_end":857,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9064785,"byte_end":9064859,"line_start":827,"line_end":827,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9064864,"byte_end":9064892,"line_start":828,"line_end":828,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9064897,"byte_end":9064900,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of [`ToSocketAddrs`] trait. See its","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9064905,"byte_end":9064980,"line_start":830,"line_end":830,"column_start":5,"column_end":80}},{"value":"/ documentation for concrete examples.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9064985,"byte_end":9065025,"line_start":831,"line_end":831,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065030,"byte_end":9065033,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ It is possible for `addr` to yield multiple addresses, but `send_to`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065038,"byte_end":9065110,"line_start":833,"line_end":833,"column_start":5,"column_end":77}},{"value":"/ will only send data to the first address yielded by `addr`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065115,"byte_end":9065178,"line_start":834,"line_end":834,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065183,"byte_end":9065186,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ This will return an error when the IP version of the local socket does","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065191,"byte_end":9065265,"line_start":836,"line_end":836,"column_start":5,"column_end":79}},{"value":"/ not match that returned from [`ToSocketAddrs`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065270,"byte_end":9065321,"line_start":837,"line_end":837,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065326,"byte_end":9065329,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: crate::net::ToSocketAddrs","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065334,"byte_end":9065382,"line_start":839,"line_end":839,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065387,"byte_end":9065390,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065395,"byte_end":9065408,"line_start":841,"line_end":841,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065413,"byte_end":9065416,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065421,"byte_end":9065434,"line_start":843,"line_end":843,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065439,"byte_end":9065469,"line_start":844,"line_end":844,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065474,"byte_end":9065490,"line_start":845,"line_end":845,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065495,"byte_end":9065498,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065503,"byte_end":9065521,"line_start":847,"line_end":847,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065526,"byte_end":9065565,"line_start":848,"line_end":848,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065570,"byte_end":9065632,"line_start":849,"line_end":849,"column_start":5,"column_end":67}},{"value":"/     let len = socket.send_to(b\"hello world\", \"127.0.0.1:8081\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065637,"byte_end":9065711,"line_start":850,"line_end":850,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065716,"byte_end":9065719,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/     println!(\"Sent {} bytes\", len);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065724,"byte_end":9065763,"line_start":852,"line_end":852,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065768,"byte_end":9065771,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065776,"byte_end":9065790,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065795,"byte_end":9065800,"line_start":855,"line_end":855,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9065805,"byte_end":9065812,"line_start":856,"line_end":856,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9066888,"byte_end":9066900,"line_start":886,"line_end":886,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to a given address.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to a given address.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9066231,"byte_end":9066290,"line_start":869,"line_end":869,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9066295,"byte_end":9066298,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction, only the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9066303,"byte_end":9066387,"line_start":871,"line_end":871,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9066392,"byte_end":9066474,"line_start":872,"line_end":872,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9066479,"byte_end":9066500,"line_start":873,"line_end":873,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9066505,"byte_end":9066508,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9066513,"byte_end":9066531,"line_start":875,"line_end":875,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9066536,"byte_end":9066539,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9066544,"byte_end":9066569,"line_start":877,"line_end":877,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9066574,"byte_end":9066577,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to write","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9066582,"byte_end":9066639,"line_start":879,"line_end":879,"column_start":5,"column_end":62}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9066644,"byte_end":9066703,"line_start":880,"line_end":880,"column_start":5,"column_end":64}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9066708,"byte_end":9066763,"line_start":881,"line_end":881,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9066768,"byte_end":9066771,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9066776,"byte_end":9066788,"line_start":883,"line_end":883,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9066793,"byte_end":9066796,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9066801,"byte_end":9066876,"line_start":885,"line_end":885,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3620},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068700,"byte_end":9068711,"line_start":944,"line_end":944,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UdpSocket>::try_send_to","value":"pub fn try_send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the given address, but if the send is\n blocked this will return right away.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the given address, but if the send is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067149,"byte_end":9067224,"line_start":897,"line_end":897,"column_start":5,"column_end":80}},{"value":"/ blocked this will return right away.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067229,"byte_end":9067269,"line_start":898,"line_end":898,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067274,"byte_end":9067277,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067282,"byte_end":9067336,"line_start":900,"line_end":900,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067341,"byte_end":9067344,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067349,"byte_end":9067362,"line_start":902,"line_end":902,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067367,"byte_end":9067370,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ If successfull, returns the number of bytes sent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067375,"byte_end":9067427,"line_start":904,"line_end":904,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067432,"byte_end":9067435,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ Users should ensure that when the remote cannot receive, the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067440,"byte_end":9067504,"line_start":906,"line_end":906,"column_start":5,"column_end":69}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled. An error can also occur","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067509,"byte_end":9067583,"line_start":907,"line_end":907,"column_start":5,"column_end":79}},{"value":"/ if the IP version of the socket does not match that of `target`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067588,"byte_end":9067656,"line_start":908,"line_end":908,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067661,"byte_end":9067664,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067669,"byte_end":9067730,"line_start":910,"line_end":910,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067735,"byte_end":9067738,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067743,"byte_end":9067756,"line_start":912,"line_end":912,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067761,"byte_end":9067764,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067769,"byte_end":9067782,"line_start":914,"line_end":914,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067787,"byte_end":9067817,"line_start":915,"line_end":915,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067822,"byte_end":9067848,"line_start":916,"line_end":916,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067853,"byte_end":9067869,"line_start":917,"line_end":917,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067874,"byte_end":9067877,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067882,"byte_end":9067900,"line_start":919,"line_end":919,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067905,"byte_end":9067956,"line_start":920,"line_end":920,"column_start":5,"column_end":56}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9067961,"byte_end":9068023,"line_start":921,"line_end":921,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068028,"byte_end":9068031,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/     let dst = \"127.0.0.1:8081\".parse()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068036,"byte_end":9068080,"line_start":923,"line_end":923,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068085,"byte_end":9068088,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068093,"byte_end":9068107,"line_start":925,"line_end":925,"column_start":5,"column_end":19}},{"value":"/         socket.writable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068112,"byte_end":9068149,"line_start":926,"line_end":926,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068154,"byte_end":9068157,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/         match socket.try_send_to(&b\"hello world\"[..], dst) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068162,"byte_end":9068226,"line_start":928,"line_end":928,"column_start":5,"column_end":69}},{"value":"/             Ok(sent) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068231,"byte_end":9068260,"line_start":929,"line_end":929,"column_start":5,"column_end":34}},{"value":"/                 println!(\"sent {} bytes\", sent);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068265,"byte_end":9068317,"line_start":930,"line_end":930,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068322,"byte_end":9068348,"line_start":931,"line_end":931,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068353,"byte_end":9068370,"line_start":932,"line_end":932,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068375,"byte_end":9068447,"line_start":933,"line_end":933,"column_start":5,"column_end":77}},{"value":"/                 // Writable false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068452,"byte_end":9068499,"line_start":934,"line_end":934,"column_start":5,"column_end":52}},{"value":"/                 continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068504,"byte_end":9068533,"line_start":935,"line_end":935,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068538,"byte_end":9068555,"line_start":936,"line_end":936,"column_start":5,"column_end":22}},{"value":"/             Err(e) => return Err(e.into()),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068560,"byte_end":9068607,"line_start":937,"line_end":937,"column_start":5,"column_end":52}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068612,"byte_end":9068625,"line_start":938,"line_end":938,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068630,"byte_end":9068639,"line_start":939,"line_end":939,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068644,"byte_end":9068647,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068652,"byte_end":9068666,"line_start":941,"line_end":941,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068671,"byte_end":9068676,"line_start":942,"line_end":942,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9068681,"byte_end":9068688,"line_start":943,"line_end":943,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3626},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069983,"byte_end":9069992,"line_start":982,"line_end":982,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket. On success, returns\n the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket. On success, returns","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069135,"byte_end":9069208,"line_start":957,"line_end":957,"column_start":5,"column_end":78}},{"value":"/ the number of bytes read and the origin.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069213,"byte_end":9069257,"line_start":958,"line_end":958,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069262,"byte_end":9069265,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069270,"byte_end":9069343,"line_start":960,"line_end":960,"column_start":5,"column_end":78}},{"value":"/ size to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069348,"byte_end":9069422,"line_start":961,"line_end":961,"column_start":5,"column_end":79}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069427,"byte_end":9069478,"line_start":962,"line_end":962,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069483,"byte_end":9069486,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069491,"byte_end":9069504,"line_start":964,"line_end":964,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069509,"byte_end":9069512,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069517,"byte_end":9069530,"line_start":966,"line_end":966,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069535,"byte_end":9069565,"line_start":967,"line_end":967,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069570,"byte_end":9069586,"line_start":968,"line_end":968,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069591,"byte_end":9069594,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069599,"byte_end":9069617,"line_start":970,"line_end":970,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069622,"byte_end":9069661,"line_start":971,"line_end":971,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069666,"byte_end":9069728,"line_start":972,"line_end":972,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069733,"byte_end":9069736,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0u8; 32];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069741,"byte_end":9069777,"line_start":974,"line_end":974,"column_start":5,"column_end":41}},{"value":"/     let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069782,"byte_end":9069842,"line_start":975,"line_end":975,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069847,"byte_end":9069850,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/     println!(\"received {:?} bytes from {:?}\", len, addr);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069855,"byte_end":9069916,"line_start":977,"line_end":977,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069921,"byte_end":9069924,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069929,"byte_end":9069943,"line_start":979,"line_end":979,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069948,"byte_end":9069953,"line_start":980,"line_end":980,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9069958,"byte_end":9069965,"line_start":981,"line_end":981,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3630},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9070880,"byte_end":9070894,"line_start":1006,"line_end":1006,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram on the socket.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram on the socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9070196,"byte_end":9070252,"line_start":989,"line_end":989,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9070257,"byte_end":9070260,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9070265,"byte_end":9070349,"line_start":991,"line_end":991,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9070354,"byte_end":9070436,"line_start":992,"line_end":992,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9070441,"byte_end":9070462,"line_start":993,"line_end":993,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9070467,"byte_end":9070470,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9070475,"byte_end":9070493,"line_start":995,"line_end":995,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9070498,"byte_end":9070501,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9070506,"byte_end":9070531,"line_start":997,"line_end":997,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9070536,"byte_end":9070539,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9070544,"byte_end":9070600,"line_start":999,"line_end":999,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9070605,"byte_end":9070695,"line_start":1000,"line_end":1000,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9070700,"byte_end":9070755,"line_start":1001,"line_end":1001,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9070760,"byte_end":9070763,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9070768,"byte_end":9070780,"line_start":1003,"line_end":1003,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9070785,"byte_end":9070788,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9070793,"byte_end":9070868,"line_start":1005,"line_end":1005,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3631},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073288,"byte_end":9073301,"line_start":1076,"line_end":1076,"column_start":12,"column_end":25},"name":"try_recv_from","qualname":"<UdpSocket>::try_recv_from","value":"pub fn try_recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket. On success,\n returns the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Try to receive a single datagram message on the socket. On success,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9071542,"byte_end":9071613,"line_start":1028,"line_end":1028,"column_start":5,"column_end":76}},{"value":"/ returns the number of bytes read and the origin.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9071618,"byte_end":9071670,"line_start":1029,"line_end":1029,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9071675,"byte_end":9071678,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array buf of sufficient size","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9071683,"byte_end":9071759,"line_start":1031,"line_end":1031,"column_start":5,"column_end":81}},{"value":"/ to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9071764,"byte_end":9071833,"line_start":1032,"line_end":1032,"column_start":5,"column_end":74}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9071838,"byte_end":9071889,"line_start":1033,"line_end":1033,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9071894,"byte_end":9071897,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ When there is no pending data, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9071902,"byte_end":9071972,"line_start":1035,"line_end":1035,"column_start":5,"column_end":75}},{"value":"/ returned. This function is usually paired with `readable()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9071977,"byte_end":9072041,"line_start":1036,"line_end":1036,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072046,"byte_end":9072049,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072054,"byte_end":9072068,"line_start":1038,"line_end":1038,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072073,"byte_end":9072076,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072081,"byte_end":9072094,"line_start":1040,"line_end":1040,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072099,"byte_end":9072129,"line_start":1041,"line_end":1041,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072134,"byte_end":9072150,"line_start":1042,"line_end":1042,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072155,"byte_end":9072158,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072163,"byte_end":9072181,"line_start":1044,"line_end":1044,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072186,"byte_end":9072225,"line_start":1045,"line_end":1045,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072230,"byte_end":9072258,"line_start":1046,"line_end":1046,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072263,"byte_end":9072325,"line_start":1047,"line_end":1047,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072330,"byte_end":9072333,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072338,"byte_end":9072352,"line_start":1049,"line_end":1049,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072357,"byte_end":9072406,"line_start":1050,"line_end":1050,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072411,"byte_end":9072448,"line_start":1051,"line_end":1051,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072453,"byte_end":9072456,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072461,"byte_end":9072533,"line_start":1053,"line_end":1053,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072538,"byte_end":9072577,"line_start":1054,"line_end":1054,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072582,"byte_end":9072618,"line_start":1055,"line_end":1055,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072623,"byte_end":9072626,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072631,"byte_end":9072701,"line_start":1057,"line_end":1057,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072706,"byte_end":9072764,"line_start":1058,"line_end":1058,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv_from(&mut buf) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072769,"byte_end":9072819,"line_start":1059,"line_end":1059,"column_start":5,"column_end":55}},{"value":"/             Ok((n, _addr)) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072824,"byte_end":9072859,"line_start":1060,"line_end":1060,"column_start":5,"column_end":40}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072864,"byte_end":9072916,"line_start":1061,"line_end":1061,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072921,"byte_end":9072947,"line_start":1062,"line_end":1062,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072952,"byte_end":9072969,"line_start":1063,"line_end":1063,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9072974,"byte_end":9073046,"line_start":1064,"line_end":1064,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073051,"byte_end":9073080,"line_start":1065,"line_end":1065,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073085,"byte_end":9073102,"line_start":1066,"line_end":1066,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073107,"byte_end":9073134,"line_start":1067,"line_end":1067,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073139,"byte_end":9073173,"line_start":1068,"line_end":1068,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073178,"byte_end":9073195,"line_start":1069,"line_end":1069,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073200,"byte_end":9073213,"line_start":1070,"line_end":1070,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073218,"byte_end":9073227,"line_start":1071,"line_end":1071,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073232,"byte_end":9073235,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073240,"byte_end":9073254,"line_start":1073,"line_end":1073,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073259,"byte_end":9073264,"line_start":1074,"line_end":1074,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073269,"byte_end":9073276,"line_start":1075,"line_end":1075,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3633},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074561,"byte_end":9074570,"line_start":1112,"line_end":1112,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073484,"byte_end":9073560,"line_start":1082,"line_end":1082,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073565,"byte_end":9073641,"line_start":1083,"line_end":1083,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073646,"byte_end":9073664,"line_start":1084,"line_end":1084,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073669,"byte_end":9073672,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073677,"byte_end":9073688,"line_start":1086,"line_end":1086,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073693,"byte_end":9073696,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073701,"byte_end":9073776,"line_start":1088,"line_end":1088,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073781,"byte_end":9073859,"line_start":1089,"line_end":1089,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073864,"byte_end":9073912,"line_start":1090,"line_end":1090,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073917,"byte_end":9073984,"line_start":1091,"line_end":1091,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9073989,"byte_end":9074057,"line_start":1092,"line_end":1092,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074062,"byte_end":9074065,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074070,"byte_end":9074084,"line_start":1094,"line_end":1094,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074089,"byte_end":9074092,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074097,"byte_end":9074110,"line_start":1096,"line_end":1096,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074115,"byte_end":9074145,"line_start":1097,"line_end":1097,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074150,"byte_end":9074166,"line_start":1098,"line_end":1098,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074171,"byte_end":9074174,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074179,"byte_end":9074197,"line_start":1100,"line_end":1100,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074202,"byte_end":9074241,"line_start":1101,"line_end":1101,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074246,"byte_end":9074308,"line_start":1102,"line_end":1102,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074313,"byte_end":9074316,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0u8; 32];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074321,"byte_end":9074357,"line_start":1104,"line_end":1104,"column_start":5,"column_end":41}},{"value":"/     let (len, addr) = socket.peek_from(&mut buf).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074362,"byte_end":9074422,"line_start":1105,"line_end":1105,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074427,"byte_end":9074430,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/     println!(\"peeked {:?} bytes from {:?}\", len, addr);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074435,"byte_end":9074494,"line_start":1107,"line_end":1107,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074499,"byte_end":9074502,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074507,"byte_end":9074521,"line_start":1109,"line_end":1109,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074526,"byte_end":9074531,"line_start":1110,"line_end":1110,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074536,"byte_end":9074543,"line_start":1111,"line_end":1111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3637},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075919,"byte_end":9075933,"line_start":1145,"line_end":1145,"column_start":12,"column_end":26},"name":"poll_peek_from","qualname":"<UdpSocket>::poll_peek_from","value":"pub fn poll_peek_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074774,"byte_end":9074850,"line_start":1119,"line_end":1119,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074855,"byte_end":9074904,"line_start":1120,"line_end":1120,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074909,"byte_end":9074912,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074917,"byte_end":9074928,"line_start":1122,"line_end":1122,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074933,"byte_end":9074936,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9074941,"byte_end":9075025,"line_start":1124,"line_end":1124,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075030,"byte_end":9075112,"line_start":1125,"line_end":1125,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075117,"byte_end":9075137,"line_start":1126,"line_end":1126,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075142,"byte_end":9075145,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075150,"byte_end":9075225,"line_start":1128,"line_end":1128,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075230,"byte_end":9075303,"line_start":1129,"line_end":1129,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075308,"byte_end":9075356,"line_start":1130,"line_end":1130,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075361,"byte_end":9075428,"line_start":1131,"line_end":1131,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075433,"byte_end":9075501,"line_start":1132,"line_end":1132,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075506,"byte_end":9075509,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075514,"byte_end":9075532,"line_start":1134,"line_end":1134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075537,"byte_end":9075540,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075545,"byte_end":9075570,"line_start":1136,"line_end":1136,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075575,"byte_end":9075578,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075583,"byte_end":9075639,"line_start":1138,"line_end":1138,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075644,"byte_end":9075734,"line_start":1139,"line_end":1139,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075739,"byte_end":9075794,"line_start":1140,"line_end":1140,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075799,"byte_end":9075802,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075807,"byte_end":9075819,"line_start":1142,"line_end":1142,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075824,"byte_end":9075827,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9075832,"byte_end":9075907,"line_start":1144,"line_end":1144,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3638},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9076798,"byte_end":9076807,"line_start":1172,"line_end":1172,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9076581,"byte_end":9076645,"line_start":1167,"line_end":1167,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9076650,"byte_end":9076653,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9076658,"byte_end":9076724,"line_start":1169,"line_end":1169,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9076729,"byte_end":9076732,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9076737,"byte_end":9076786,"line_start":1171,"line_end":1171,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3639},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9077053,"byte_end":9077066,"line_start":1180,"line_end":1180,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9076876,"byte_end":9076940,"line_start":1176,"line_end":1176,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9076945,"byte_end":9076948,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9076953,"byte_end":9077024,"line_start":1178,"line_end":1178,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9077029,"byte_end":9077041,"line_start":1179,"line_end":1179,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3640},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9077395,"byte_end":9077412,"line_start":1189,"line_end":1189,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9077149,"byte_end":9077218,"line_start":1184,"line_end":1184,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9077223,"byte_end":9077226,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9077231,"byte_end":9077305,"line_start":1186,"line_end":1186,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9077310,"byte_end":9077313,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9077318,"byte_end":9077383,"line_start":1188,"line_end":1188,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3641},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9077742,"byte_end":9077763,"line_start":1200,"line_end":1200,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9077489,"byte_end":9077558,"line_start":1193,"line_end":1193,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9077563,"byte_end":9077566,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9077571,"byte_end":9077645,"line_start":1195,"line_end":1195,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9077650,"byte_end":9077653,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9077658,"byte_end":9077668,"line_start":1197,"line_end":1197,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9077673,"byte_end":9077676,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9077681,"byte_end":9077730,"line_start":1199,"line_end":1199,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3642},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9078096,"byte_end":9078112,"line_start":1209,"line_end":1209,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9077854,"byte_end":9077922,"line_start":1204,"line_end":1204,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9077927,"byte_end":9077930,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9077935,"byte_end":9078008,"line_start":1206,"line_end":1206,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9078013,"byte_end":9078016,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9078021,"byte_end":9078084,"line_start":1208,"line_end":1208,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3643},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9078581,"byte_end":9078601,"line_start":1222,"line_end":1222,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9078187,"byte_end":9078255,"line_start":1213,"line_end":1213,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9078260,"byte_end":9078263,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9078268,"byte_end":9078338,"line_start":1215,"line_end":1215,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9078343,"byte_end":9078417,"line_start":1216,"line_end":1216,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9078422,"byte_end":9078484,"line_start":1217,"line_end":1217,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9078489,"byte_end":9078492,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9078497,"byte_end":9078507,"line_start":1219,"line_end":1219,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9078512,"byte_end":9078515,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9078520,"byte_end":9078569,"line_start":1221,"line_end":1221,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3644},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9078940,"byte_end":9078957,"line_start":1231,"line_end":1231,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9078692,"byte_end":9078763,"line_start":1226,"line_end":1226,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9078768,"byte_end":9078771,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9078776,"byte_end":9078850,"line_start":1228,"line_end":1228,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9078855,"byte_end":9078858,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9078863,"byte_end":9078928,"line_start":1230,"line_end":1230,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3645},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079291,"byte_end":9079312,"line_start":1242,"line_end":1242,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079034,"byte_end":9079105,"line_start":1235,"line_end":1235,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079110,"byte_end":9079113,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079118,"byte_end":9079194,"line_start":1237,"line_end":1237,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079199,"byte_end":9079202,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079207,"byte_end":9079217,"line_start":1239,"line_end":1239,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079222,"byte_end":9079225,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079230,"byte_end":9079279,"line_start":1241,"line_end":1241,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3646},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079909,"byte_end":9079912,"line_start":1265,"line_end":1265,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079403,"byte_end":9079461,"line_start":1246,"line_end":1246,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079466,"byte_end":9079469,"line_start":1247,"line_end":1247,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079474,"byte_end":9079534,"line_start":1248,"line_end":1248,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079539,"byte_end":9079542,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079547,"byte_end":9079584,"line_start":1250,"line_end":1250,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079589,"byte_end":9079592,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079597,"byte_end":9079611,"line_start":1252,"line_end":1252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079616,"byte_end":9079619,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079624,"byte_end":9079637,"line_start":1254,"line_end":1254,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079642,"byte_end":9079672,"line_start":1255,"line_end":1255,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079677,"byte_end":9079695,"line_start":1256,"line_end":1256,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079700,"byte_end":9079703,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079708,"byte_end":9079748,"line_start":1258,"line_end":1258,"column_start":5,"column_end":45}},{"value":"/ let sock = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079753,"byte_end":9079809,"line_start":1259,"line_end":1259,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079814,"byte_end":9079817,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", sock.ttl()?);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079822,"byte_end":9079856,"line_start":1261,"line_end":1261,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079861,"byte_end":9079873,"line_start":1262,"line_end":1262,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079878,"byte_end":9079885,"line_start":1263,"line_end":1263,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079890,"byte_end":9079897,"line_start":1264,"line_end":1264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3647},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080460,"byte_end":9080467,"line_start":1287,"line_end":1287,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9079974,"byte_end":9080032,"line_start":1269,"line_end":1269,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080037,"byte_end":9080040,"line_start":1270,"line_end":1270,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080045,"byte_end":9080121,"line_start":1271,"line_end":1271,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080126,"byte_end":9080147,"line_start":1272,"line_end":1272,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080152,"byte_end":9080155,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080160,"byte_end":9080174,"line_start":1274,"line_end":1274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080179,"byte_end":9080182,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080187,"byte_end":9080200,"line_start":1276,"line_end":1276,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080205,"byte_end":9080235,"line_start":1277,"line_end":1277,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080240,"byte_end":9080258,"line_start":1278,"line_end":1278,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080263,"byte_end":9080266,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080271,"byte_end":9080311,"line_start":1280,"line_end":1280,"column_start":5,"column_end":45}},{"value":"/ let sock = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080316,"byte_end":9080372,"line_start":1281,"line_end":1281,"column_start":5,"column_end":61}},{"value":"/ sock.set_ttl(60)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080377,"byte_end":9080399,"line_start":1282,"line_end":1282,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080404,"byte_end":9080407,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080412,"byte_end":9080424,"line_start":1284,"line_end":1284,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080429,"byte_end":9080436,"line_start":1285,"line_end":1285,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080441,"byte_end":9080448,"line_start":1286,"line_end":1286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3648},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080975,"byte_end":9080992,"line_start":1298,"line_end":1298,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080545,"byte_end":9080603,"line_start":1291,"line_end":1291,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080608,"byte_end":9080611,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080616,"byte_end":9080690,"line_start":1293,"line_end":1293,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080695,"byte_end":9080768,"line_start":1294,"line_end":1294,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080773,"byte_end":9080845,"line_start":1295,"line_end":1295,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080850,"byte_end":9080920,"line_start":1296,"line_end":1296,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9080925,"byte_end":9080963,"line_start":1297,"line_end":1297,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3649},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9081447,"byte_end":9081464,"line_start":1307,"line_end":1307,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9081131,"byte_end":9081191,"line_start":1302,"line_end":1302,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9081196,"byte_end":9081199,"line_start":1303,"line_end":1303,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9081204,"byte_end":9081278,"line_start":1304,"line_end":1304,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9081283,"byte_end":9081356,"line_start":1305,"line_end":1305,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9081361,"byte_end":9081435,"line_start":1306,"line_end":1306,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3650},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9081821,"byte_end":9081839,"line_start":1316,"line_end":1316,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9081597,"byte_end":9081656,"line_start":1311,"line_end":1311,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9081661,"byte_end":9081664,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9081669,"byte_end":9081739,"line_start":1313,"line_end":1313,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9081744,"byte_end":9081747,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9081752,"byte_end":9081809,"line_start":1315,"line_end":1315,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3651},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082205,"byte_end":9082223,"line_start":1325,"line_end":1325,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9081979,"byte_end":9082040,"line_start":1320,"line_end":1320,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082045,"byte_end":9082048,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082053,"byte_end":9082123,"line_start":1322,"line_end":1322,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082128,"byte_end":9082131,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082136,"byte_end":9082193,"line_start":1324,"line_end":1324,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082860,"byte_end":9082870,"line_start":1348,"line_end":1348,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082357,"byte_end":9082404,"line_start":1329,"line_end":1329,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082409,"byte_end":9082412,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082417,"byte_end":9082431,"line_start":1331,"line_end":1331,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082436,"byte_end":9082443,"line_start":1332,"line_end":1332,"column_start":5,"column_end":12}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082448,"byte_end":9082478,"line_start":1333,"line_end":1333,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082483,"byte_end":9082499,"line_start":1334,"line_end":1334,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082504,"byte_end":9082507,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082512,"byte_end":9082530,"line_start":1336,"line_end":1336,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082535,"byte_end":9082574,"line_start":1337,"line_end":1337,"column_start":5,"column_end":44}},{"value":"/     // Create a socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082579,"byte_end":9082605,"line_start":1338,"line_end":1338,"column_start":5,"column_end":31}},{"value":"/     let socket = UdpSocket::bind(\"0.0.0.0:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082610,"byte_end":9082670,"line_start":1339,"line_end":1339,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082675,"byte_end":9082678,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/     if let Ok(Some(err)) = socket.take_error() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082683,"byte_end":9082735,"line_start":1341,"line_end":1341,"column_start":5,"column_end":57}},{"value":"/         println!(\"Got error: {:?}\", err);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082740,"byte_end":9082785,"line_start":1342,"line_end":1342,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082790,"byte_end":9082799,"line_start":1343,"line_end":1343,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082804,"byte_end":9082807,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082812,"byte_end":9082826,"line_start":1345,"line_end":1345,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082831,"byte_end":9082836,"line_start":1346,"line_end":1346,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082841,"byte_end":9082848,"line_start":1347,"line_end":1347,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":3726},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::net::unix","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/mod.rs","parent":null,"children":[{"krate":0,"index":3727},{"krate":0,"index":3809},{"krate":0,"index":3845},{"krate":0,"index":3870},{"krate":0,"index":3871},{"krate":0,"index":3872},{"krate":0,"index":3873},{"krate":0,"index":3913},{"krate":0,"index":3914},{"krate":0,"index":3915},{"krate":0,"index":3916},{"krate":0,"index":12410},{"krate":0,"index":3917},{"krate":0,"index":3928},{"krate":0,"index":12416},{"krate":0,"index":3929},{"krate":0,"index":4019},{"krate":0,"index":4020},{"krate":0,"index":4044}],"decl_id":null,"docs":" Unix domain socket utility types\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":21642,"byte_end":21676,"line_start":179,"line_end":179,"column_start":13,"column_end":47}},{"value":"/ Unix domain socket utility types","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/mod.rs","byte_start":9083873,"byte_end":9083909,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":3727},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"datagram","qualname":"::net::unix::datagram","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/mod.rs","parent":null,"children":[{"krate":0,"index":3728}],"decl_id":null,"docs":" Unix datagram types.\n","sig":null,"attributes":[{"value":"/ Unix datagram types.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/mod.rs","byte_start":9084234,"byte_end":9084258,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":4049},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9087290,"byte_end":9087302,"line_start":93,"line_end":93,"column_start":16,"column_end":28},"name":"UnixDatagram","qualname":"::net::unix::datagram::socket::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":4050}],"decl_id":null,"docs":" An I/O object representing a Unix datagram socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":21642,"byte_end":21676,"line_start":179,"line_end":179,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3748},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089717,"byte_end":9089722,"line_start":160,"line_end":160,"column_start":18,"column_end":23},"name":"ready","qualname":"<UnixDatagram>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9087387,"byte_end":9087434,"line_start":99,"line_end":99,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9087439,"byte_end":9087442,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_recv()` or `try_send()`. It","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9087447,"byte_end":9087520,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ can be used to concurrently recv / send to the same socket on a single","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9087525,"byte_end":9087599,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ task without splitting the socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9087604,"byte_end":9087642,"line_start":103,"line_end":103,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9087647,"byte_end":9087650,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being ready. This is a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9087655,"byte_end":9087726,"line_start":105,"line_end":105,"column_start":5,"column_end":76}},{"value":"/ false-positive and attempting an operation will return with","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9087731,"byte_end":9087794,"line_start":106,"line_end":106,"column_start":5,"column_end":68}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9087799,"byte_end":9087831,"line_start":107,"line_end":107,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9087836,"byte_end":9087839,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9087844,"byte_end":9087858,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9087863,"byte_end":9087866,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Concurrently receive from and send to the socket on the same task","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9087871,"byte_end":9087940,"line_start":111,"line_end":111,"column_start":5,"column_end":74}},{"value":"/ without splitting.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9087945,"byte_end":9087967,"line_start":112,"line_end":112,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9087972,"byte_end":9087975,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9087980,"byte_end":9087993,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9087998,"byte_end":9088026,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088031,"byte_end":9088064,"line_start":116,"line_end":116,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088069,"byte_end":9088085,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088090,"byte_end":9088093,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088098,"byte_end":9088116,"line_start":119,"line_end":119,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088121,"byte_end":9088160,"line_start":120,"line_end":120,"column_start":5,"column_end":44}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088165,"byte_end":9088212,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088217,"byte_end":9088274,"line_start":122,"line_end":122,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088279,"byte_end":9088336,"line_start":123,"line_end":123,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088341,"byte_end":9088396,"line_start":124,"line_end":124,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088401,"byte_end":9088439,"line_start":125,"line_end":125,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088444,"byte_end":9088447,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088452,"byte_end":9088466,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/         let ready = socket.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088471,"byte_end":9088556,"line_start":128,"line_end":128,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088561,"byte_end":9088564,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088569,"byte_end":9088605,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/             let mut data = [0; 1024];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088610,"byte_end":9088651,"line_start":131,"line_end":131,"column_start":5,"column_end":46}},{"value":"/             match socket.try_recv(&mut data[..]) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088656,"byte_end":9088710,"line_start":132,"line_end":132,"column_start":5,"column_end":59}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088715,"byte_end":9088745,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"/                     println!(\"received {:?}\", &data[..n]);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088750,"byte_end":9088812,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088817,"byte_end":9088838,"line_start":135,"line_end":135,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088843,"byte_end":9088890,"line_start":136,"line_end":136,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088895,"byte_end":9088972,"line_start":137,"line_end":137,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9088977,"byte_end":9089008,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089013,"byte_end":9089051,"line_start":139,"line_end":139,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089056,"byte_end":9089077,"line_start":140,"line_end":140,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089082,"byte_end":9089099,"line_start":141,"line_end":141,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089104,"byte_end":9089117,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089122,"byte_end":9089125,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089130,"byte_end":9089166,"line_start":144,"line_end":144,"column_start":5,"column_end":41}},{"value":"/             // Write some data","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089171,"byte_end":9089205,"line_start":145,"line_end":145,"column_start":5,"column_end":39}},{"value":"/             match socket.try_send(b\"hello world\") {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089210,"byte_end":9089265,"line_start":146,"line_end":146,"column_start":5,"column_end":60}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089270,"byte_end":9089300,"line_start":147,"line_end":147,"column_start":5,"column_end":35}},{"value":"/                     println!(\"sent {} bytes\", n);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089305,"byte_end":9089358,"line_start":148,"line_end":148,"column_start":5,"column_end":58}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089363,"byte_end":9089384,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089389,"byte_end":9089436,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089441,"byte_end":9089518,"line_start":151,"line_end":151,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089523,"byte_end":9089554,"line_start":152,"line_end":152,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089559,"byte_end":9089597,"line_start":153,"line_end":153,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089602,"byte_end":9089623,"line_start":154,"line_end":154,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089628,"byte_end":9089645,"line_start":155,"line_end":155,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089650,"byte_end":9089663,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089668,"byte_end":9089677,"line_start":157,"line_end":157,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089682,"byte_end":9089687,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089692,"byte_end":9089699,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3751},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091459,"byte_end":9091467,"line_start":210,"line_end":210,"column_start":18,"column_end":26},"name":"writable","qualname":"<UnixDatagram>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089879,"byte_end":9089922,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089927,"byte_end":9089930,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9089935,"byte_end":9090004,"line_start":167,"line_end":167,"column_start":5,"column_end":74}},{"value":"/ usually paired with `try_send()` or `try_send_to()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090009,"byte_end":9090065,"line_start":168,"line_end":168,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090070,"byte_end":9090073,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being writable. This is a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090078,"byte_end":9090152,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_send()` will return with","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090157,"byte_end":9090222,"line_start":171,"line_end":171,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090227,"byte_end":9090259,"line_start":172,"line_end":172,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090264,"byte_end":9090267,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090272,"byte_end":9090286,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090291,"byte_end":9090294,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090299,"byte_end":9090312,"line_start":176,"line_end":176,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090317,"byte_end":9090350,"line_start":177,"line_end":177,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090355,"byte_end":9090371,"line_start":178,"line_end":178,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090376,"byte_end":9090379,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090384,"byte_end":9090402,"line_start":180,"line_end":180,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090407,"byte_end":9090446,"line_start":181,"line_end":181,"column_start":5,"column_end":44}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090451,"byte_end":9090498,"line_start":182,"line_end":182,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090503,"byte_end":9090560,"line_start":183,"line_end":183,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090565,"byte_end":9090622,"line_start":184,"line_end":184,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090627,"byte_end":9090682,"line_start":185,"line_end":185,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090687,"byte_end":9090725,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090730,"byte_end":9090733,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090738,"byte_end":9090752,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090757,"byte_end":9090806,"line_start":189,"line_end":189,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090811,"byte_end":9090848,"line_start":190,"line_end":190,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090853,"byte_end":9090856,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090861,"byte_end":9090931,"line_start":192,"line_end":192,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090936,"byte_end":9090994,"line_start":193,"line_end":193,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9090999,"byte_end":9091050,"line_start":194,"line_end":194,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091055,"byte_end":9091081,"line_start":195,"line_end":195,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091086,"byte_end":9091112,"line_start":196,"line_end":196,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091117,"byte_end":9091134,"line_start":197,"line_end":197,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091139,"byte_end":9091211,"line_start":198,"line_end":198,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091216,"byte_end":9091245,"line_start":199,"line_end":199,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091250,"byte_end":9091267,"line_start":200,"line_end":200,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091272,"byte_end":9091299,"line_start":201,"line_end":201,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091304,"byte_end":9091338,"line_start":202,"line_end":202,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091343,"byte_end":9091360,"line_start":203,"line_end":203,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091365,"byte_end":9091378,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091383,"byte_end":9091392,"line_start":205,"line_end":205,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091397,"byte_end":9091400,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091405,"byte_end":9091419,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091424,"byte_end":9091429,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091434,"byte_end":9091441,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3754},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093383,"byte_end":9093391,"line_start":266,"line_end":266,"column_start":18,"column_end":26},"name":"readable","qualname":"<UnixDatagram>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091568,"byte_end":9091611,"line_start":215,"line_end":215,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091616,"byte_end":9091619,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091624,"byte_end":9091701,"line_start":217,"line_end":217,"column_start":5,"column_end":82}},{"value":"/ paired with `try_recv()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091706,"byte_end":9091735,"line_start":218,"line_end":218,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091740,"byte_end":9091743,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being readable. This is a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091748,"byte_end":9091822,"line_start":220,"line_end":220,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_recv()` will return with","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091827,"byte_end":9091892,"line_start":221,"line_end":221,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091897,"byte_end":9091929,"line_start":222,"line_end":222,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091934,"byte_end":9091937,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091942,"byte_end":9091956,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091961,"byte_end":9091964,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091969,"byte_end":9091982,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9091987,"byte_end":9092020,"line_start":227,"line_end":227,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092025,"byte_end":9092041,"line_start":228,"line_end":228,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092046,"byte_end":9092049,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092054,"byte_end":9092072,"line_start":230,"line_end":230,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092077,"byte_end":9092116,"line_start":231,"line_end":231,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092121,"byte_end":9092149,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092154,"byte_end":9092201,"line_start":233,"line_end":233,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092206,"byte_end":9092263,"line_start":234,"line_end":234,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092268,"byte_end":9092325,"line_start":235,"line_end":235,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092330,"byte_end":9092385,"line_start":236,"line_end":236,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092390,"byte_end":9092428,"line_start":237,"line_end":237,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092433,"byte_end":9092436,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092441,"byte_end":9092455,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092460,"byte_end":9092509,"line_start":240,"line_end":240,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092514,"byte_end":9092551,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092556,"byte_end":9092559,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092564,"byte_end":9092636,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092641,"byte_end":9092680,"line_start":244,"line_end":244,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092685,"byte_end":9092721,"line_start":245,"line_end":245,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092726,"byte_end":9092729,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092734,"byte_end":9092804,"line_start":247,"line_end":247,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092809,"byte_end":9092867,"line_start":248,"line_end":248,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092872,"byte_end":9092917,"line_start":249,"line_end":249,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092922,"byte_end":9092948,"line_start":250,"line_end":250,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9092953,"byte_end":9093005,"line_start":251,"line_end":251,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093010,"byte_end":9093036,"line_start":252,"line_end":252,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093041,"byte_end":9093058,"line_start":253,"line_end":253,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093063,"byte_end":9093135,"line_start":254,"line_end":254,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093140,"byte_end":9093169,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093174,"byte_end":9093191,"line_start":256,"line_end":256,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093196,"byte_end":9093223,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093228,"byte_end":9093262,"line_start":258,"line_end":258,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093267,"byte_end":9093284,"line_start":259,"line_end":259,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093289,"byte_end":9093302,"line_start":260,"line_end":260,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093307,"byte_end":9093316,"line_start":261,"line_end":261,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093321,"byte_end":9093324,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093329,"byte_end":9093343,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093348,"byte_end":9093353,"line_start":264,"line_end":264,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093358,"byte_end":9093365,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3757},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094164,"byte_end":9094168,"line_start":292,"line_end":292,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixDatagram> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` bound to the specified path.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093492,"byte_end":9093553,"line_start":271,"line_end":271,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093558,"byte_end":9093561,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093566,"byte_end":9093580,"line_start":273,"line_end":273,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093585,"byte_end":9093592,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093597,"byte_end":9093625,"line_start":275,"line_end":275,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093630,"byte_end":9093650,"line_start":276,"line_end":276,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093655,"byte_end":9093708,"line_start":277,"line_end":277,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093713,"byte_end":9093746,"line_start":278,"line_end":278,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093751,"byte_end":9093777,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093782,"byte_end":9093785,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093790,"byte_end":9093844,"line_start":281,"line_end":281,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093849,"byte_end":9093908,"line_start":282,"line_end":282,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093913,"byte_end":9093938,"line_start":283,"line_end":283,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093943,"byte_end":9093946,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ // Bind the socket to a filesystem path","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093951,"byte_end":9093994,"line_start":285,"line_end":285,"column_start":5,"column_end":48}},{"value":"/ let socket_path = tmp.path().join(\"socket\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9093999,"byte_end":9094047,"line_start":286,"line_end":286,"column_start":5,"column_end":53}},{"value":"/ let socket = UnixDatagram::bind(&socket_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094052,"byte_end":9094103,"line_start":287,"line_end":287,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094108,"byte_end":9094111,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094116,"byte_end":9094128,"line_start":289,"line_end":289,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094133,"byte_end":9094140,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094145,"byte_end":9094152,"line_start":291,"line_end":291,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3759},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095238,"byte_end":9095242,"line_start":329,"line_end":329,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094352,"byte_end":9094401,"line_start":300,"line_end":300,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094406,"byte_end":9094409,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094414,"byte_end":9094485,"line_start":302,"line_end":302,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094490,"byte_end":9094543,"line_start":303,"line_end":303,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094548,"byte_end":9094551,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094556,"byte_end":9094570,"line_start":305,"line_end":305,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094575,"byte_end":9094582,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094587,"byte_end":9094615,"line_start":307,"line_end":307,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094620,"byte_end":9094640,"line_start":308,"line_end":308,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094645,"byte_end":9094698,"line_start":309,"line_end":309,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094703,"byte_end":9094736,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094741,"byte_end":9094744,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ // Create the pair of sockets","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094749,"byte_end":9094782,"line_start":312,"line_end":312,"column_start":5,"column_end":38}},{"value":"/ let (sock1, sock2) = UnixDatagram::pair()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094787,"byte_end":9094834,"line_start":313,"line_end":313,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094839,"byte_end":9094842,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ // Since the sockets are paired, the paired send/recv","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094847,"byte_end":9094904,"line_start":315,"line_end":315,"column_start":5,"column_end":62}},{"value":"/ // functions can be used","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094909,"byte_end":9094937,"line_start":316,"line_end":316,"column_start":5,"column_end":33}},{"value":"/ let bytes = b\"hail eris\";","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094942,"byte_end":9094971,"line_start":317,"line_end":317,"column_start":5,"column_end":34}},{"value":"/ sock1.send(bytes).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9094976,"byte_end":9095005,"line_start":318,"line_end":318,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095010,"byte_end":9095013,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ let mut buff = vec![0u8; 24];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095018,"byte_end":9095051,"line_start":320,"line_end":320,"column_start":5,"column_end":38}},{"value":"/ let size = sock2.recv(&mut buff).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095056,"byte_end":9095100,"line_start":321,"line_end":321,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095105,"byte_end":9095108,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buff[..size];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095113,"byte_end":9095143,"line_start":323,"line_end":323,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095148,"byte_end":9095177,"line_start":324,"line_end":324,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095182,"byte_end":9095185,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095190,"byte_end":9095202,"line_start":326,"line_end":326,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095207,"byte_end":9095214,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095219,"byte_end":9095226,"line_start":328,"line_end":328,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3760},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096906,"byte_end":9096914,"line_start":373,"line_end":373,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"pub fn from_std(net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UnixDatagram` from a `std::os::unix::net::UnixDatagram`.","sig":null,"attributes":[{"value":"/ Creates new `UnixDatagram` from a `std::os::unix::net::UnixDatagram`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095454,"byte_end":9095527,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095532,"byte_end":9095535,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UnixDatagram from the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095540,"byte_end":9095612,"line_start":339,"line_end":339,"column_start":5,"column_end":77}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095617,"byte_end":9095685,"line_start":340,"line_end":340,"column_start":5,"column_end":73}},{"value":"/ nothing about the underlying datagram; it is left up to the user to set","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095690,"byte_end":9095765,"line_start":341,"line_end":341,"column_start":5,"column_end":80}},{"value":"/ it in non-blocking mode.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095770,"byte_end":9095798,"line_start":342,"line_end":342,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095803,"byte_end":9095806,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095811,"byte_end":9095823,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095828,"byte_end":9095831,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095836,"byte_end":9095896,"line_start":346,"line_end":346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095901,"byte_end":9095904,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095909,"byte_end":9095979,"line_start":348,"line_end":348,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a Tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9095984,"byte_end":9096057,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096062,"byte_end":9096142,"line_start":350,"line_end":350,"column_start":5,"column_end":85}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096147,"byte_end":9096161,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096166,"byte_end":9096173,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096178,"byte_end":9096206,"line_start":353,"line_end":353,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096211,"byte_end":9096231,"line_start":354,"line_end":354,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096236,"byte_end":9096289,"line_start":355,"line_end":355,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096294,"byte_end":9096327,"line_start":356,"line_end":356,"column_start":5,"column_end":38}},{"value":"/ use std::os::unix::net::UnixDatagram as StdUDS;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096332,"byte_end":9096383,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096388,"byte_end":9096414,"line_start":358,"line_end":358,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096419,"byte_end":9096422,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096427,"byte_end":9096481,"line_start":360,"line_end":360,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096486,"byte_end":9096545,"line_start":361,"line_end":361,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096550,"byte_end":9096575,"line_start":362,"line_end":362,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096580,"byte_end":9096583,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ // Bind the socket to a filesystem path","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096588,"byte_end":9096631,"line_start":364,"line_end":364,"column_start":5,"column_end":48}},{"value":"/ let socket_path = tmp.path().join(\"socket\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096636,"byte_end":9096684,"line_start":365,"line_end":365,"column_start":5,"column_end":53}},{"value":"/ let std_socket = StdUDS::bind(&socket_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096689,"byte_end":9096738,"line_start":366,"line_end":366,"column_start":5,"column_end":54}},{"value":"/ std_socket.set_nonblocking(true)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096743,"byte_end":9096781,"line_start":367,"line_end":367,"column_start":5,"column_end":43}},{"value":"/ let tokio_socket = UnixDatagram::from_std(std_socket)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096786,"byte_end":9096845,"line_start":368,"line_end":368,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096850,"byte_end":9096853,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096858,"byte_end":9096870,"line_start":370,"line_end":370,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096875,"byte_end":9096882,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9096887,"byte_end":9096894,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3762},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098195,"byte_end":9098202,"line_start":415,"line_end":415,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` which is not bound to any address.","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` which is not bound to any address.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097282,"byte_end":9097349,"line_start":384,"line_end":384,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097354,"byte_end":9097357,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097362,"byte_end":9097376,"line_start":386,"line_end":386,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097381,"byte_end":9097388,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097393,"byte_end":9097421,"line_start":388,"line_end":388,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097426,"byte_end":9097446,"line_start":389,"line_end":389,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097451,"byte_end":9097504,"line_start":390,"line_end":390,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097509,"byte_end":9097542,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097547,"byte_end":9097573,"line_start":392,"line_end":392,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097578,"byte_end":9097581,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097586,"byte_end":9097617,"line_start":394,"line_end":394,"column_start":5,"column_end":36}},{"value":"/ let tx = UnixDatagram::unbound()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097622,"byte_end":9097660,"line_start":395,"line_end":395,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097665,"byte_end":9097668,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ // Create another, bound socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097673,"byte_end":9097708,"line_start":397,"line_end":397,"column_start":5,"column_end":40}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097713,"byte_end":9097738,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097743,"byte_end":9097783,"line_start":399,"line_end":399,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097788,"byte_end":9097831,"line_start":400,"line_end":400,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097836,"byte_end":9097839,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ // Send to the bound socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097844,"byte_end":9097875,"line_start":402,"line_end":402,"column_start":5,"column_end":36}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097880,"byte_end":9097911,"line_start":403,"line_end":403,"column_start":5,"column_end":36}},{"value":"/ tx.send_to(bytes, &rx_path).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097916,"byte_end":9097955,"line_start":404,"line_end":404,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097960,"byte_end":9097963,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 24];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9097968,"byte_end":9098000,"line_start":406,"line_end":406,"column_start":5,"column_end":37}},{"value":"/ let (size, addr) = rx.recv_from(&mut buf).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098005,"byte_end":9098058,"line_start":407,"line_end":407,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098063,"byte_end":9098066,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buf[..size];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098071,"byte_end":9098100,"line_start":409,"line_end":409,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098105,"byte_end":9098134,"line_start":410,"line_end":410,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098139,"byte_end":9098142,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098147,"byte_end":9098159,"line_start":412,"line_end":412,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098164,"byte_end":9098171,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098176,"byte_end":9098183,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3763},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099455,"byte_end":9099462,"line_start":457,"line_end":457,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098337,"byte_end":9098386,"line_start":420,"line_end":420,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098391,"byte_end":9098394,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ The `send` method may be used to send data to the specified address.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098399,"byte_end":9098471,"line_start":422,"line_end":422,"column_start":5,"column_end":77}},{"value":"/ `recv` and `recv_from` will only receive data from that address.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098476,"byte_end":9098544,"line_start":423,"line_end":423,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098549,"byte_end":9098552,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098557,"byte_end":9098571,"line_start":425,"line_end":425,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098576,"byte_end":9098583,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098588,"byte_end":9098616,"line_start":427,"line_end":427,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098621,"byte_end":9098641,"line_start":428,"line_end":428,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098646,"byte_end":9098699,"line_start":429,"line_end":429,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098704,"byte_end":9098737,"line_start":430,"line_end":430,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098742,"byte_end":9098768,"line_start":431,"line_end":431,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098773,"byte_end":9098776,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098781,"byte_end":9098812,"line_start":433,"line_end":433,"column_start":5,"column_end":36}},{"value":"/ let tx = UnixDatagram::unbound()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098817,"byte_end":9098855,"line_start":434,"line_end":434,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098860,"byte_end":9098863,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ // Create another, bound socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098868,"byte_end":9098903,"line_start":436,"line_end":436,"column_start":5,"column_end":40}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098908,"byte_end":9098933,"line_start":437,"line_end":437,"column_start":5,"column_end":30}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098938,"byte_end":9098978,"line_start":438,"line_end":438,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9098983,"byte_end":9099026,"line_start":439,"line_end":439,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099031,"byte_end":9099034,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ // Connect to the bound socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099039,"byte_end":9099073,"line_start":441,"line_end":441,"column_start":5,"column_end":39}},{"value":"/ tx.connect(&rx_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099078,"byte_end":9099104,"line_start":442,"line_end":442,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099109,"byte_end":9099112,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ // Send to the bound socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099117,"byte_end":9099148,"line_start":444,"line_end":444,"column_start":5,"column_end":36}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099153,"byte_end":9099184,"line_start":445,"line_end":445,"column_start":5,"column_end":36}},{"value":"/ tx.send(bytes).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099189,"byte_end":9099215,"line_start":446,"line_end":446,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099220,"byte_end":9099223,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 24];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099228,"byte_end":9099260,"line_start":448,"line_end":448,"column_start":5,"column_end":37}},{"value":"/ let (size, addr) = rx.recv_from(&mut buf).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099265,"byte_end":9099318,"line_start":449,"line_end":449,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099323,"byte_end":9099326,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buf[..size];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099331,"byte_end":9099360,"line_start":451,"line_end":451,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099365,"byte_end":9099394,"line_start":452,"line_end":452,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099399,"byte_end":9099402,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099407,"byte_end":9099419,"line_start":454,"line_end":454,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099424,"byte_end":9099431,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099436,"byte_end":9099443,"line_start":456,"line_end":456,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3765},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100309,"byte_end":9100313,"line_start":487,"line_end":487,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099556,"byte_end":9099606,"line_start":461,"line_end":461,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099611,"byte_end":9099614,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099619,"byte_end":9099633,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099638,"byte_end":9099645,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099650,"byte_end":9099678,"line_start":465,"line_end":465,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099683,"byte_end":9099703,"line_start":466,"line_end":466,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099708,"byte_end":9099761,"line_start":467,"line_end":467,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099766,"byte_end":9099799,"line_start":468,"line_end":468,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099804,"byte_end":9099807,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ // Create the pair of sockets","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099812,"byte_end":9099845,"line_start":470,"line_end":470,"column_start":5,"column_end":38}},{"value":"/ let (sock1, sock2) = UnixDatagram::pair()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099850,"byte_end":9099897,"line_start":471,"line_end":471,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099902,"byte_end":9099905,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ // Since the sockets are paired, the paired send/recv","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099910,"byte_end":9099967,"line_start":473,"line_end":473,"column_start":5,"column_end":62}},{"value":"/ // functions can be used","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9099972,"byte_end":9100000,"line_start":474,"line_end":474,"column_start":5,"column_end":33}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100005,"byte_end":9100036,"line_start":475,"line_end":475,"column_start":5,"column_end":36}},{"value":"/ sock1.send(bytes).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100041,"byte_end":9100070,"line_start":476,"line_end":476,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100075,"byte_end":9100078,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ let mut buff = vec![0u8; 24];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100083,"byte_end":9100116,"line_start":478,"line_end":478,"column_start":5,"column_end":38}},{"value":"/ let size = sock2.recv(&mut buff).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100121,"byte_end":9100165,"line_start":479,"line_end":479,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100170,"byte_end":9100173,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buff[..size];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100178,"byte_end":9100208,"line_start":481,"line_end":481,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100213,"byte_end":9100242,"line_start":482,"line_end":482,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100247,"byte_end":9100250,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100255,"byte_end":9100267,"line_start":484,"line_end":484,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100272,"byte_end":9100279,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100284,"byte_end":9100291,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3769},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101743,"byte_end":9101751,"line_start":532,"line_end":532,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UnixDatagram>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send a datagram to the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to send a datagram to the peer without waiting.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100494,"byte_end":9100549,"line_start":494,"line_end":494,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100554,"byte_end":9100557,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100562,"byte_end":9100576,"line_start":496,"line_end":496,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100581,"byte_end":9100584,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100589,"byte_end":9100602,"line_start":498,"line_end":498,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100607,"byte_end":9100640,"line_start":499,"line_end":499,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100645,"byte_end":9100661,"line_start":500,"line_end":500,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100666,"byte_end":9100669,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100674,"byte_end":9100692,"line_start":502,"line_end":502,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100697,"byte_end":9100736,"line_start":503,"line_end":503,"column_start":5,"column_end":44}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100741,"byte_end":9100788,"line_start":504,"line_end":504,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100793,"byte_end":9100850,"line_start":505,"line_end":505,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100855,"byte_end":9100912,"line_start":506,"line_end":506,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100917,"byte_end":9100972,"line_start":507,"line_end":507,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9100977,"byte_end":9101015,"line_start":508,"line_end":508,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101020,"byte_end":9101023,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101028,"byte_end":9101042,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101047,"byte_end":9101096,"line_start":511,"line_end":511,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101101,"byte_end":9101138,"line_start":512,"line_end":512,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101143,"byte_end":9101146,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101151,"byte_end":9101221,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101226,"byte_end":9101284,"line_start":515,"line_end":515,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101289,"byte_end":9101340,"line_start":516,"line_end":516,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101345,"byte_end":9101371,"line_start":517,"line_end":517,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101376,"byte_end":9101402,"line_start":518,"line_end":518,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101407,"byte_end":9101424,"line_start":519,"line_end":519,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101429,"byte_end":9101501,"line_start":520,"line_end":520,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101506,"byte_end":9101535,"line_start":521,"line_end":521,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101540,"byte_end":9101557,"line_start":522,"line_end":522,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101562,"byte_end":9101589,"line_start":523,"line_end":523,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101594,"byte_end":9101628,"line_start":524,"line_end":524,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101633,"byte_end":9101650,"line_start":525,"line_end":525,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101655,"byte_end":9101668,"line_start":526,"line_end":526,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101673,"byte_end":9101682,"line_start":527,"line_end":527,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101687,"byte_end":9101690,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101695,"byte_end":9101709,"line_start":529,"line_end":529,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101714,"byte_end":9101719,"line_start":530,"line_end":530,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101724,"byte_end":9101731,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3771},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103134,"byte_end":9103145,"line_start":575,"line_end":575,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UnixDatagram>::try_send_to","value":"pub fn try_send_to<P>(&Self, &[u8], P) -> io::Result<usize> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Try to send a datagram to the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to send a datagram to the peer without waiting.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101911,"byte_end":9101966,"line_start":538,"line_end":538,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101971,"byte_end":9101974,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101979,"byte_end":9101993,"line_start":540,"line_end":540,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9101998,"byte_end":9102001,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102006,"byte_end":9102019,"line_start":542,"line_end":542,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102024,"byte_end":9102057,"line_start":543,"line_end":543,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102062,"byte_end":9102078,"line_start":544,"line_end":544,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102083,"byte_end":9102086,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102091,"byte_end":9102109,"line_start":546,"line_end":546,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102114,"byte_end":9102153,"line_start":547,"line_end":547,"column_start":5,"column_end":44}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102158,"byte_end":9102205,"line_start":548,"line_end":548,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102210,"byte_end":9102267,"line_start":549,"line_end":549,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102272,"byte_end":9102329,"line_start":550,"line_end":550,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102334,"byte_end":9102389,"line_start":551,"line_end":551,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102394,"byte_end":9102397,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102402,"byte_end":9102416,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102421,"byte_end":9102470,"line_start":554,"line_end":554,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102475,"byte_end":9102512,"line_start":555,"line_end":555,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102517,"byte_end":9102520,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102525,"byte_end":9102595,"line_start":557,"line_end":557,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102600,"byte_end":9102658,"line_start":558,"line_end":558,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send_to(b\"hello world\", &server_path) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102663,"byte_end":9102731,"line_start":559,"line_end":559,"column_start":5,"column_end":73}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102736,"byte_end":9102762,"line_start":560,"line_end":560,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102767,"byte_end":9102793,"line_start":561,"line_end":561,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102798,"byte_end":9102815,"line_start":562,"line_end":562,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102820,"byte_end":9102892,"line_start":563,"line_end":563,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102897,"byte_end":9102926,"line_start":564,"line_end":564,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102931,"byte_end":9102948,"line_start":565,"line_end":565,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102953,"byte_end":9102980,"line_start":566,"line_end":566,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9102985,"byte_end":9103019,"line_start":567,"line_end":567,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103024,"byte_end":9103041,"line_start":568,"line_end":568,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103046,"byte_end":9103059,"line_start":569,"line_end":569,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103064,"byte_end":9103073,"line_start":570,"line_end":570,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103078,"byte_end":9103081,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103086,"byte_end":9103100,"line_start":572,"line_end":572,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103105,"byte_end":9103110,"line_start":573,"line_end":573,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103115,"byte_end":9103122,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3774},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104105,"byte_end":9104109,"line_start":610,"line_end":610,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103368,"byte_end":9103402,"line_start":584,"line_end":584,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103407,"byte_end":9103410,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103415,"byte_end":9103429,"line_start":586,"line_end":586,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103434,"byte_end":9103441,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103446,"byte_end":9103474,"line_start":588,"line_end":588,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103479,"byte_end":9103499,"line_start":589,"line_end":589,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103504,"byte_end":9103557,"line_start":590,"line_end":590,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103562,"byte_end":9103595,"line_start":591,"line_end":591,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103600,"byte_end":9103603,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ // Create the pair of sockets","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103608,"byte_end":9103641,"line_start":593,"line_end":593,"column_start":5,"column_end":38}},{"value":"/ let (sock1, sock2) = UnixDatagram::pair()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103646,"byte_end":9103693,"line_start":594,"line_end":594,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103698,"byte_end":9103701,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ // Since the sockets are paired, the paired send/recv","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103706,"byte_end":9103763,"line_start":596,"line_end":596,"column_start":5,"column_end":62}},{"value":"/ // functions can be used","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103768,"byte_end":9103796,"line_start":597,"line_end":597,"column_start":5,"column_end":33}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103801,"byte_end":9103832,"line_start":598,"line_end":598,"column_start":5,"column_end":36}},{"value":"/ sock1.send(bytes).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103837,"byte_end":9103866,"line_start":599,"line_end":599,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103871,"byte_end":9103874,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ let mut buff = vec![0u8; 24];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103879,"byte_end":9103912,"line_start":601,"line_end":601,"column_start":5,"column_end":38}},{"value":"/ let size = sock2.recv(&mut buff).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103917,"byte_end":9103961,"line_start":602,"line_end":602,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103966,"byte_end":9103969,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buff[..size];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9103974,"byte_end":9104004,"line_start":604,"line_end":604,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104009,"byte_end":9104038,"line_start":605,"line_end":605,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104043,"byte_end":9104046,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104051,"byte_end":9104063,"line_start":607,"line_end":607,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104068,"byte_end":9104075,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104080,"byte_end":9104087,"line_start":609,"line_end":609,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3778},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105802,"byte_end":9105810,"line_start":661,"line_end":661,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnixDatagram>::try_recv","value":"pub fn try_recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a datagram from the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to receive a datagram from the peer without waiting.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104294,"byte_end":9104354,"line_start":617,"line_end":617,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104359,"byte_end":9104362,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104367,"byte_end":9104381,"line_start":619,"line_end":619,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104386,"byte_end":9104389,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104394,"byte_end":9104407,"line_start":621,"line_end":621,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104412,"byte_end":9104445,"line_start":622,"line_end":622,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104450,"byte_end":9104466,"line_start":623,"line_end":623,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104471,"byte_end":9104474,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104479,"byte_end":9104497,"line_start":625,"line_end":625,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104502,"byte_end":9104541,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104546,"byte_end":9104574,"line_start":627,"line_end":627,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104579,"byte_end":9104626,"line_start":628,"line_end":628,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104631,"byte_end":9104688,"line_start":629,"line_end":629,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104693,"byte_end":9104750,"line_start":630,"line_end":630,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104755,"byte_end":9104810,"line_start":631,"line_end":631,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104815,"byte_end":9104853,"line_start":632,"line_end":632,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104858,"byte_end":9104861,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104866,"byte_end":9104880,"line_start":634,"line_end":634,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104885,"byte_end":9104934,"line_start":635,"line_end":635,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104939,"byte_end":9104976,"line_start":636,"line_end":636,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104981,"byte_end":9104984,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9104989,"byte_end":9105061,"line_start":638,"line_end":638,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105066,"byte_end":9105105,"line_start":639,"line_end":639,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105110,"byte_end":9105146,"line_start":640,"line_end":640,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105151,"byte_end":9105154,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105159,"byte_end":9105229,"line_start":642,"line_end":642,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105234,"byte_end":9105292,"line_start":643,"line_end":643,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105297,"byte_end":9105342,"line_start":644,"line_end":644,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105347,"byte_end":9105373,"line_start":645,"line_end":645,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105378,"byte_end":9105430,"line_start":646,"line_end":646,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105435,"byte_end":9105461,"line_start":647,"line_end":647,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105466,"byte_end":9105483,"line_start":648,"line_end":648,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105488,"byte_end":9105560,"line_start":649,"line_end":649,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105565,"byte_end":9105594,"line_start":650,"line_end":650,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105599,"byte_end":9105616,"line_start":651,"line_end":651,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105621,"byte_end":9105648,"line_start":652,"line_end":652,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105653,"byte_end":9105687,"line_start":653,"line_end":653,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105692,"byte_end":9105709,"line_start":654,"line_end":654,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105714,"byte_end":9105727,"line_start":655,"line_end":655,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105732,"byte_end":9105741,"line_start":656,"line_end":656,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105746,"byte_end":9105749,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105754,"byte_end":9105768,"line_start":658,"line_end":658,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105773,"byte_end":9105778,"line_start":659,"line_end":659,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9105783,"byte_end":9105790,"line_start":660,"line_end":660,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4051},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9107534,"byte_end":9107551,"line_start":709,"line_end":709,"column_start":16,"column_end":33},"name":"try_recv_buf_from","qualname":"<UnixDatagram>::try_recv_buf_from","value":"pub fn try_recv_buf_from<B: BufMut>(&Self, &mut B)\n-> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the socket without waiting.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4054},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9109915,"byte_end":9109927,"line_start":772,"line_end":772,"column_start":16,"column_end":28},"name":"try_recv_buf","qualname":"<UnixDatagram>::try_recv_buf","value":"pub fn try_recv_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3780},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111607,"byte_end":9111614,"line_start":824,"line_end":824,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub async fn send_to<P, '_, '_>(&'_ Self, &'_ [u8], P) -> /*impl Trait*/ where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9110532,"byte_end":9110586,"line_start":791,"line_end":791,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9110591,"byte_end":9110594,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9110599,"byte_end":9110613,"line_start":793,"line_end":793,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9110618,"byte_end":9110625,"line_start":794,"line_end":794,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9110630,"byte_end":9110658,"line_start":795,"line_end":795,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9110663,"byte_end":9110683,"line_start":796,"line_end":796,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9110688,"byte_end":9110741,"line_start":797,"line_end":797,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9110746,"byte_end":9110779,"line_start":798,"line_end":798,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9110784,"byte_end":9110810,"line_start":799,"line_end":799,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9110815,"byte_end":9110818,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9110823,"byte_end":9110877,"line_start":801,"line_end":801,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9110882,"byte_end":9110941,"line_start":802,"line_end":802,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9110946,"byte_end":9110971,"line_start":803,"line_end":803,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9110976,"byte_end":9110979,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ // Bind each socket to a filesystem path","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9110984,"byte_end":9111028,"line_start":805,"line_end":805,"column_start":5,"column_end":49}},{"value":"/ let tx_path = tmp.path().join(\"tx\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111033,"byte_end":9111073,"line_start":806,"line_end":806,"column_start":5,"column_end":45}},{"value":"/ let tx = UnixDatagram::bind(&tx_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111078,"byte_end":9111121,"line_start":807,"line_end":807,"column_start":5,"column_end":48}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111126,"byte_end":9111166,"line_start":808,"line_end":808,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111171,"byte_end":9111214,"line_start":809,"line_end":809,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111219,"byte_end":9111222,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111227,"byte_end":9111258,"line_start":811,"line_end":811,"column_start":5,"column_end":36}},{"value":"/ tx.send_to(bytes, &rx_path).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111263,"byte_end":9111302,"line_start":812,"line_end":812,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111307,"byte_end":9111310,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 24];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111315,"byte_end":9111347,"line_start":814,"line_end":814,"column_start":5,"column_end":37}},{"value":"/ let (size, addr) = rx.recv_from(&mut buf).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111352,"byte_end":9111405,"line_start":815,"line_end":815,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111410,"byte_end":9111413,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buf[..size];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111418,"byte_end":9111447,"line_start":817,"line_end":817,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111452,"byte_end":9111481,"line_start":818,"line_end":818,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(addr.as_pathname().unwrap(), &tx_path);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111486,"byte_end":9111540,"line_start":819,"line_end":819,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111545,"byte_end":9111548,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111553,"byte_end":9111565,"line_start":821,"line_end":821,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111570,"byte_end":9111577,"line_start":822,"line_end":822,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111582,"byte_end":9111589,"line_start":823,"line_end":823,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3785},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112922,"byte_end":9112931,"line_start":867,"line_end":867,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111867,"byte_end":9111901,"line_start":834,"line_end":834,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111906,"byte_end":9111909,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111914,"byte_end":9111928,"line_start":836,"line_end":836,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111933,"byte_end":9111940,"line_start":837,"line_end":837,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111945,"byte_end":9111973,"line_start":838,"line_end":838,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9111978,"byte_end":9111998,"line_start":839,"line_end":839,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112003,"byte_end":9112056,"line_start":840,"line_end":840,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112061,"byte_end":9112094,"line_start":841,"line_end":841,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112099,"byte_end":9112125,"line_start":842,"line_end":842,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112130,"byte_end":9112133,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112138,"byte_end":9112192,"line_start":844,"line_end":844,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112197,"byte_end":9112256,"line_start":845,"line_end":845,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112261,"byte_end":9112286,"line_start":846,"line_end":846,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112291,"byte_end":9112294,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ // Bind each socket to a filesystem path","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112299,"byte_end":9112343,"line_start":848,"line_end":848,"column_start":5,"column_end":49}},{"value":"/ let tx_path = tmp.path().join(\"tx\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112348,"byte_end":9112388,"line_start":849,"line_end":849,"column_start":5,"column_end":45}},{"value":"/ let tx = UnixDatagram::bind(&tx_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112393,"byte_end":9112436,"line_start":850,"line_end":850,"column_start":5,"column_end":48}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112441,"byte_end":9112481,"line_start":851,"line_end":851,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112486,"byte_end":9112529,"line_start":852,"line_end":852,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112534,"byte_end":9112537,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112542,"byte_end":9112573,"line_start":854,"line_end":854,"column_start":5,"column_end":36}},{"value":"/ tx.send_to(bytes, &rx_path).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112578,"byte_end":9112617,"line_start":855,"line_end":855,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112622,"byte_end":9112625,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 24];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112630,"byte_end":9112662,"line_start":857,"line_end":857,"column_start":5,"column_end":37}},{"value":"/ let (size, addr) = rx.recv_from(&mut buf).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112667,"byte_end":9112720,"line_start":858,"line_end":858,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112725,"byte_end":9112728,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buf[..size];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112733,"byte_end":9112762,"line_start":860,"line_end":860,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112767,"byte_end":9112796,"line_start":861,"line_end":861,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(addr.as_pathname().unwrap(), &tx_path);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112801,"byte_end":9112855,"line_start":862,"line_end":862,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112860,"byte_end":9112863,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112868,"byte_end":9112880,"line_start":864,"line_end":864,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112885,"byte_end":9112892,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9112897,"byte_end":9112904,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3789},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9113896,"byte_end":9113910,"line_start":894,"line_end":894,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UnixDatagram>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram on the specified address.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram on the specified address.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9113201,"byte_end":9113268,"line_start":877,"line_end":877,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9113273,"byte_end":9113276,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9113281,"byte_end":9113365,"line_start":879,"line_end":879,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9113370,"byte_end":9113452,"line_start":880,"line_end":880,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9113457,"byte_end":9113478,"line_start":881,"line_end":881,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9113483,"byte_end":9113486,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9113491,"byte_end":9113509,"line_start":883,"line_end":883,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9113514,"byte_end":9113517,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9113522,"byte_end":9113547,"line_start":885,"line_end":885,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9113552,"byte_end":9113555,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9113560,"byte_end":9113616,"line_start":887,"line_end":887,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9113621,"byte_end":9113711,"line_start":888,"line_end":888,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9113716,"byte_end":9113771,"line_start":889,"line_end":889,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9113776,"byte_end":9113779,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9113784,"byte_end":9113796,"line_start":891,"line_end":891,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9113801,"byte_end":9113804,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9113809,"byte_end":9113884,"line_start":893,"line_end":893,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3790},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9115219,"byte_end":9115231,"line_start":933,"line_end":933,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UnixDatagram>::poll_send_to","value":"pub fn poll_send_to<P>(&Self, &mut Context, &[u8], P)\n-> Poll<io::Result<usize>> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data to the specified address.","sig":null,"attributes":[{"value":"/ Attempts to send data to the specified address.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9114570,"byte_end":9114621,"line_start":916,"line_end":916,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9114626,"byte_end":9114629,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction, only the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9114634,"byte_end":9114718,"line_start":918,"line_end":918,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9114723,"byte_end":9114805,"line_start":919,"line_end":919,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9114810,"byte_end":9114831,"line_start":920,"line_end":920,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9114836,"byte_end":9114839,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9114844,"byte_end":9114862,"line_start":922,"line_end":922,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9114867,"byte_end":9114870,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9114875,"byte_end":9114900,"line_start":924,"line_end":924,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9114905,"byte_end":9114908,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to write","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9114913,"byte_end":9114970,"line_start":926,"line_end":926,"column_start":5,"column_end":62}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9114975,"byte_end":9115034,"line_start":927,"line_end":927,"column_start":5,"column_end":64}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9115039,"byte_end":9115094,"line_start":928,"line_end":928,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9115099,"byte_end":9115102,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9115107,"byte_end":9115119,"line_start":930,"line_end":930,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9115124,"byte_end":9115127,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9115132,"byte_end":9115207,"line_start":932,"line_end":932,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3793},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116428,"byte_end":9116437,"line_start":970,"line_end":970,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UnixDatagram>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to the remote address to which it\n was previously `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to the remote address to which it","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9115521,"byte_end":9115594,"line_start":947,"line_end":947,"column_start":5,"column_end":78}},{"value":"/ was previously `connect`ed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9115599,"byte_end":9115630,"line_start":948,"line_end":948,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9115635,"byte_end":9115638,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9115643,"byte_end":9115715,"line_start":950,"line_end":950,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9115720,"byte_end":9115777,"line_start":951,"line_end":951,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9115782,"byte_end":9115785,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9115790,"byte_end":9115865,"line_start":953,"line_end":953,"column_start":5,"column_end":80}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9115870,"byte_end":9115945,"line_start":954,"line_end":954,"column_start":5,"column_end":80}},{"value":"/ be scheduled to receive a wakeup.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9115950,"byte_end":9115987,"line_start":955,"line_end":955,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9115992,"byte_end":9115995,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116000,"byte_end":9116018,"line_start":957,"line_end":957,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116023,"byte_end":9116026,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116031,"byte_end":9116056,"line_start":959,"line_end":959,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116061,"byte_end":9116064,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not available to write","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116069,"byte_end":9116130,"line_start":961,"line_end":961,"column_start":5,"column_end":66}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116135,"byte_end":9116193,"line_start":962,"line_end":962,"column_start":5,"column_end":63}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116198,"byte_end":9116253,"line_start":963,"line_end":963,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116258,"byte_end":9116261,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116266,"byte_end":9116278,"line_start":965,"line_end":965,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116283,"byte_end":9116286,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116291,"byte_end":9116366,"line_start":967,"line_end":967,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116371,"byte_end":9116374,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116379,"byte_end":9116416,"line_start":969,"line_end":969,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3795},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9117556,"byte_end":9117565,"line_start":999,"line_end":999,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnixDatagram>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram message on the socket from the remote\n address to which it is `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram message on the socket from the remote","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116616,"byte_end":9116695,"line_start":976,"line_end":976,"column_start":5,"column_end":84}},{"value":"/ address to which it is `connect`ed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116700,"byte_end":9116739,"line_start":977,"line_end":977,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116744,"byte_end":9116747,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. This method","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116752,"byte_end":9116836,"line_start":979,"line_end":979,"column_start":5,"column_end":89}},{"value":"/ resolves to an error if the socket is not connected.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116841,"byte_end":9116897,"line_start":980,"line_end":980,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116902,"byte_end":9116905,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116910,"byte_end":9116994,"line_start":982,"line_end":982,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9116999,"byte_end":9117081,"line_start":983,"line_end":983,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9117086,"byte_end":9117107,"line_start":984,"line_end":984,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9117112,"byte_end":9117115,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9117120,"byte_end":9117138,"line_start":986,"line_end":986,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9117143,"byte_end":9117146,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9117151,"byte_end":9117176,"line_start":988,"line_end":988,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9117181,"byte_end":9117184,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9117189,"byte_end":9117245,"line_start":990,"line_end":990,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(()))` reads data `ReadBuf` if the socket is ready","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9117250,"byte_end":9117321,"line_start":991,"line_end":991,"column_start":5,"column_end":76}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9117326,"byte_end":9117381,"line_start":992,"line_end":992,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9117386,"byte_end":9117389,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9117394,"byte_end":9117406,"line_start":994,"line_end":994,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9117411,"byte_end":9117414,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9117419,"byte_end":9117494,"line_start":996,"line_end":996,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9117499,"byte_end":9117502,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9117507,"byte_end":9117544,"line_start":998,"line_end":998,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3796},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119634,"byte_end":9119647,"line_start":1060,"line_end":1060,"column_start":12,"column_end":25},"name":"try_recv_from","qualname":"<UnixDatagram>::try_recv_from","value":"pub fn try_recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the socket without waiting.","sig":null,"attributes":[{"value":"/ Try to receive data from the socket without waiting.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118159,"byte_end":9118215,"line_start":1017,"line_end":1017,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118220,"byte_end":9118223,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118228,"byte_end":9118242,"line_start":1019,"line_end":1019,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118247,"byte_end":9118250,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118255,"byte_end":9118268,"line_start":1021,"line_end":1021,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118273,"byte_end":9118306,"line_start":1022,"line_end":1022,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118311,"byte_end":9118327,"line_start":1023,"line_end":1023,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118332,"byte_end":9118335,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118340,"byte_end":9118358,"line_start":1025,"line_end":1025,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118363,"byte_end":9118402,"line_start":1026,"line_end":1026,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118407,"byte_end":9118435,"line_start":1027,"line_end":1027,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118440,"byte_end":9118487,"line_start":1028,"line_end":1028,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118492,"byte_end":9118549,"line_start":1029,"line_end":1029,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118554,"byte_end":9118611,"line_start":1030,"line_end":1030,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118616,"byte_end":9118671,"line_start":1031,"line_end":1031,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118676,"byte_end":9118679,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118684,"byte_end":9118698,"line_start":1033,"line_end":1033,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118703,"byte_end":9118752,"line_start":1034,"line_end":1034,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118757,"byte_end":9118794,"line_start":1035,"line_end":1035,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118799,"byte_end":9118802,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118807,"byte_end":9118879,"line_start":1037,"line_end":1037,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118884,"byte_end":9118923,"line_start":1038,"line_end":1038,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118928,"byte_end":9118964,"line_start":1039,"line_end":1039,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118969,"byte_end":9118972,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9118977,"byte_end":9119047,"line_start":1041,"line_end":1041,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119052,"byte_end":9119110,"line_start":1042,"line_end":1042,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv_from(&mut buf) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119115,"byte_end":9119165,"line_start":1043,"line_end":1043,"column_start":5,"column_end":55}},{"value":"/             Ok((n, _addr)) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119170,"byte_end":9119205,"line_start":1044,"line_end":1044,"column_start":5,"column_end":40}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119210,"byte_end":9119262,"line_start":1045,"line_end":1045,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119267,"byte_end":9119293,"line_start":1046,"line_end":1046,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119298,"byte_end":9119315,"line_start":1047,"line_end":1047,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119320,"byte_end":9119392,"line_start":1048,"line_end":1048,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119397,"byte_end":9119426,"line_start":1049,"line_end":1049,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119431,"byte_end":9119448,"line_start":1050,"line_end":1050,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119453,"byte_end":9119480,"line_start":1051,"line_end":1051,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119485,"byte_end":9119519,"line_start":1052,"line_end":1052,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119524,"byte_end":9119541,"line_start":1053,"line_end":1053,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119546,"byte_end":9119559,"line_start":1054,"line_end":1054,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119564,"byte_end":9119573,"line_start":1055,"line_end":1055,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119578,"byte_end":9119581,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119586,"byte_end":9119600,"line_start":1057,"line_end":1057,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119605,"byte_end":9119610,"line_start":1058,"line_end":1058,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119615,"byte_end":9119622,"line_start":1059,"line_end":1059,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3798},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121096,"byte_end":9121106,"line_start":1109,"line_end":1109,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119896,"byte_end":9119955,"line_start":1069,"line_end":1069,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119960,"byte_end":9119963,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119968,"byte_end":9119982,"line_start":1071,"line_end":1071,"column_start":5,"column_end":19}},{"value":"/ For a socket bound to a local path","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9119987,"byte_end":9120025,"line_start":1072,"line_end":1072,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120030,"byte_end":9120037,"line_start":1073,"line_end":1073,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120042,"byte_end":9120070,"line_start":1074,"line_end":1074,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120075,"byte_end":9120095,"line_start":1075,"line_end":1075,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120100,"byte_end":9120153,"line_start":1076,"line_end":1076,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120158,"byte_end":9120191,"line_start":1077,"line_end":1077,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120196,"byte_end":9120222,"line_start":1078,"line_end":1078,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120227,"byte_end":9120230,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120235,"byte_end":9120289,"line_start":1080,"line_end":1080,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120294,"byte_end":9120353,"line_start":1081,"line_end":1081,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120358,"byte_end":9120383,"line_start":1082,"line_end":1082,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120388,"byte_end":9120391,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ // Bind socket to a filesystem path","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120396,"byte_end":9120435,"line_start":1084,"line_end":1084,"column_start":5,"column_end":44}},{"value":"/ let socket_path = tmp.path().join(\"socket\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120440,"byte_end":9120488,"line_start":1085,"line_end":1085,"column_start":5,"column_end":53}},{"value":"/ let socket = UnixDatagram::bind(&socket_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120493,"byte_end":9120544,"line_start":1086,"line_end":1086,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120549,"byte_end":9120552,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.local_addr()?.as_pathname().unwrap(), &socket_path);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120557,"byte_end":9120631,"line_start":1088,"line_end":1088,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120636,"byte_end":9120639,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120644,"byte_end":9120656,"line_start":1090,"line_end":1090,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120661,"byte_end":9120668,"line_start":1091,"line_end":1091,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120673,"byte_end":9120680,"line_start":1092,"line_end":1092,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120685,"byte_end":9120688,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ For an unbound socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120693,"byte_end":9120718,"line_start":1094,"line_end":1094,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120723,"byte_end":9120730,"line_start":1095,"line_end":1095,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120735,"byte_end":9120763,"line_start":1096,"line_end":1096,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120768,"byte_end":9120788,"line_start":1097,"line_end":1097,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120793,"byte_end":9120846,"line_start":1098,"line_end":1098,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120851,"byte_end":9120884,"line_start":1099,"line_end":1099,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120889,"byte_end":9120892,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120897,"byte_end":9120928,"line_start":1101,"line_end":1101,"column_start":5,"column_end":36}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120933,"byte_end":9120975,"line_start":1102,"line_end":1102,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120980,"byte_end":9120983,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ assert!(socket.local_addr()?.is_unnamed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9120988,"byte_end":9121035,"line_start":1104,"line_end":1104,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121040,"byte_end":9121043,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121048,"byte_end":9121060,"line_start":1106,"line_end":1106,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121065,"byte_end":9121072,"line_start":1107,"line_end":1107,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121077,"byte_end":9121084,"line_start":1108,"line_end":1108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3799},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122459,"byte_end":9122468,"line_start":1158,"line_end":1158,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121198,"byte_end":9121244,"line_start":1113,"line_end":1113,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121249,"byte_end":9121252,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121257,"byte_end":9121316,"line_start":1115,"line_end":1115,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121321,"byte_end":9121324,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121329,"byte_end":9121343,"line_start":1117,"line_end":1117,"column_start":5,"column_end":19}},{"value":"/ For a peer with a local path","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121348,"byte_end":9121380,"line_start":1118,"line_end":1118,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121385,"byte_end":9121392,"line_start":1119,"line_end":1119,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121397,"byte_end":9121425,"line_start":1120,"line_end":1120,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121430,"byte_end":9121450,"line_start":1121,"line_end":1121,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121455,"byte_end":9121508,"line_start":1122,"line_end":1122,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121513,"byte_end":9121546,"line_start":1123,"line_end":1123,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121551,"byte_end":9121577,"line_start":1124,"line_end":1124,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121582,"byte_end":9121585,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121590,"byte_end":9121621,"line_start":1126,"line_end":1126,"column_start":5,"column_end":36}},{"value":"/ let tx = UnixDatagram::unbound()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121626,"byte_end":9121664,"line_start":1127,"line_end":1127,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121669,"byte_end":9121672,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ // Create another, bound socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121677,"byte_end":9121712,"line_start":1129,"line_end":1129,"column_start":5,"column_end":40}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121717,"byte_end":9121742,"line_start":1130,"line_end":1130,"column_start":5,"column_end":30}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121747,"byte_end":9121787,"line_start":1131,"line_end":1131,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121792,"byte_end":9121835,"line_start":1132,"line_end":1132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121840,"byte_end":9121843,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ // Connect to the bound socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121848,"byte_end":9121882,"line_start":1134,"line_end":1134,"column_start":5,"column_end":39}},{"value":"/ tx.connect(&rx_path)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121887,"byte_end":9121913,"line_start":1135,"line_end":1135,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121918,"byte_end":9121921,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(tx.peer_addr()?.as_pathname().unwrap(), &rx_path);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121926,"byte_end":9121991,"line_start":1137,"line_end":1137,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9121996,"byte_end":9121999,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122004,"byte_end":9122016,"line_start":1139,"line_end":1139,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122021,"byte_end":9122028,"line_start":1140,"line_end":1140,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122033,"byte_end":9122040,"line_start":1141,"line_end":1141,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122045,"byte_end":9122048,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ For an unbound peer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122053,"byte_end":9122076,"line_start":1143,"line_end":1143,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122081,"byte_end":9122088,"line_start":1144,"line_end":1144,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122093,"byte_end":9122121,"line_start":1145,"line_end":1145,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122126,"byte_end":9122146,"line_start":1146,"line_end":1146,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122151,"byte_end":9122204,"line_start":1147,"line_end":1147,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122209,"byte_end":9122242,"line_start":1148,"line_end":1148,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122247,"byte_end":9122250,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ // Create the pair of sockets","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122255,"byte_end":9122288,"line_start":1150,"line_end":1150,"column_start":5,"column_end":38}},{"value":"/ let (sock1, sock2) = UnixDatagram::pair()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122293,"byte_end":9122340,"line_start":1151,"line_end":1151,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122345,"byte_end":9122348,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ assert!(sock1.peer_addr()?.is_unnamed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122353,"byte_end":9122398,"line_start":1153,"line_end":1153,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122403,"byte_end":9122406,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122411,"byte_end":9122423,"line_start":1155,"line_end":1155,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122428,"byte_end":9122435,"line_start":1156,"line_end":1156,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122440,"byte_end":9122447,"line_start":1157,"line_end":1157,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3800},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123068,"byte_end":9123078,"line_start":1181,"line_end":1181,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122559,"byte_end":9122606,"line_start":1162,"line_end":1162,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122611,"byte_end":9122614,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122619,"byte_end":9122633,"line_start":1164,"line_end":1164,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122638,"byte_end":9122645,"line_start":1165,"line_end":1165,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122650,"byte_end":9122678,"line_start":1166,"line_end":1166,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122683,"byte_end":9122703,"line_start":1167,"line_end":1167,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122708,"byte_end":9122761,"line_start":1168,"line_end":1168,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122766,"byte_end":9122799,"line_start":1169,"line_end":1169,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122804,"byte_end":9122807,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122812,"byte_end":9122843,"line_start":1171,"line_end":1171,"column_start":5,"column_end":36}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122848,"byte_end":9122890,"line_start":1172,"line_end":1172,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122895,"byte_end":9122898,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ if let Ok(Some(err)) = socket.take_error() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122903,"byte_end":9122951,"line_start":1174,"line_end":1174,"column_start":5,"column_end":53}},{"value":"/     println!(\"Got error: {:?}\", err);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9122956,"byte_end":9122997,"line_start":1175,"line_end":1175,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123002,"byte_end":9123007,"line_start":1176,"line_end":1176,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123012,"byte_end":9123015,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123020,"byte_end":9123032,"line_start":1178,"line_end":1178,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123037,"byte_end":9123044,"line_start":1179,"line_end":1179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123049,"byte_end":9123056,"line_start":1180,"line_end":1180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3801},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9124319,"byte_end":9124327,"line_start":1217,"line_end":1217,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123161,"byte_end":9123227,"line_start":1185,"line_end":1185,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123232,"byte_end":9123235,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123240,"byte_end":9123308,"line_start":1187,"line_end":1187,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123313,"byte_end":9123383,"line_start":1188,"line_end":1188,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123388,"byte_end":9123430,"line_start":1189,"line_end":1189,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123435,"byte_end":9123438,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123443,"byte_end":9123457,"line_start":1191,"line_end":1191,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123462,"byte_end":9123469,"line_start":1192,"line_end":1192,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123474,"byte_end":9123502,"line_start":1193,"line_end":1193,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123507,"byte_end":9123527,"line_start":1194,"line_end":1194,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123532,"byte_end":9123585,"line_start":1195,"line_end":1195,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123590,"byte_end":9123623,"line_start":1196,"line_end":1196,"column_start":5,"column_end":38}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123628,"byte_end":9123655,"line_start":1197,"line_end":1197,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123660,"byte_end":9123663,"line_start":1198,"line_end":1198,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123668,"byte_end":9123699,"line_start":1199,"line_end":1199,"column_start":5,"column_end":36}},{"value":"/ let (socket, other) = UnixDatagram::pair()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123704,"byte_end":9123752,"line_start":1200,"line_end":1200,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123757,"byte_end":9123760,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ socket.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123765,"byte_end":9123802,"line_start":1202,"line_end":1202,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123807,"byte_end":9123810,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ // NOTE: the following commented out code does NOT work as expected.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123815,"byte_end":9123887,"line_start":1204,"line_end":1204,"column_start":5,"column_end":77}},{"value":"/ // Due to an underlying issue, the recv call will block indefinitely.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123892,"byte_end":9123965,"line_start":1205,"line_end":1205,"column_start":5,"column_end":78}},{"value":"/ // See: https://github.com/tokio-rs/tokio/issues/1679","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9123970,"byte_end":9124027,"line_start":1206,"line_end":1206,"column_start":5,"column_end":62}},{"value":"/ //let mut buff = vec![0u8; 24];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9124032,"byte_end":9124067,"line_start":1207,"line_end":1207,"column_start":5,"column_end":40}},{"value":"/ //let size = socket.recv(&mut buff).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9124072,"byte_end":9124119,"line_start":1208,"line_end":1208,"column_start":5,"column_end":52}},{"value":"/ //assert_eq!(size, 0);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9124124,"byte_end":9124150,"line_start":1209,"line_end":1209,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9124155,"byte_end":9124158,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ let send_result = socket.send(b\"hello world\").await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9124163,"byte_end":9124219,"line_start":1211,"line_end":1211,"column_start":5,"column_end":61}},{"value":"/ assert!(send_result.is_err());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9124224,"byte_end":9124258,"line_start":1212,"line_end":1212,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9124263,"byte_end":9124266,"line_start":1213,"line_end":1213,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9124271,"byte_end":9124283,"line_start":1214,"line_end":1214,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9124288,"byte_end":9124295,"line_start":1215,"line_end":1215,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9124300,"byte_end":9124307,"line_start":1216,"line_end":1216,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4059},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9126608,"byte_end":9126620,"line_start":47,"line_end":47,"column_start":16,"column_end":28},"name":"UnixListener","qualname":"::net::unix::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":4060}],"decl_id":null,"docs":" A Unix socket which can accept connections from other Unix sockets.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":21642,"byte_end":21676,"line_start":179,"line_end":179,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3828},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9127122,"byte_end":9127126,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixListener> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified path.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9126705,"byte_end":9126766,"line_start":53,"line_end":53,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9126771,"byte_end":9126774,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9126779,"byte_end":9126791,"line_start":55,"line_end":55,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9126796,"byte_end":9126799,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9126804,"byte_end":9126864,"line_start":57,"line_end":57,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9126869,"byte_end":9126872,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9126877,"byte_end":9126947,"line_start":59,"line_end":59,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9126952,"byte_end":9127025,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9127030,"byte_end":9127110,"line_start":61,"line_end":61,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3830},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9128057,"byte_end":9128065,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"pub fn from_std(net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UnixListener` from a `std::os::unix::net::UnixListener `.","sig":null,"attributes":[{"value":"/ Creates new `UnixListener` from a `std::os::unix::net::UnixListener `.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9127356,"byte_end":9127430,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9127435,"byte_end":9127438,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UnixListener from the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9127443,"byte_end":9127515,"line_start":73,"line_end":73,"column_start":5,"column_end":77}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9127520,"byte_end":9127588,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"/ nothing about the underlying listener; it is left up to the user to set","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9127593,"byte_end":9127668,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ it in non-blocking mode.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9127673,"byte_end":9127701,"line_start":76,"line_end":76,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9127706,"byte_end":9127709,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9127714,"byte_end":9127726,"line_start":78,"line_end":78,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9127731,"byte_end":9127734,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9127739,"byte_end":9127799,"line_start":80,"line_end":80,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9127804,"byte_end":9127807,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9127812,"byte_end":9127882,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9127887,"byte_end":9127960,"line_start":83,"line_end":83,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9127965,"byte_end":9128045,"line_start":84,"line_end":84,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3831},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9128347,"byte_end":9128357,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9128281,"byte_end":9128335,"line_start":91,"line_end":91,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3832},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9128508,"byte_end":9128518,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9128449,"byte_end":9128496,"line_start":96,"line_end":96,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3833},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9128674,"byte_end":9128680,"line_start":102,"line_end":102,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.\n","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9128601,"byte_end":9128656,"line_start":101,"line_end":101,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3837},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9129387,"byte_end":9129398,"line_start":120,"line_end":120,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<UnixListener>::poll_accept","value":"pub fn poll_accept(&Self, &mut Context)\n-> Poll<io::Result<(UnixStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9129009,"byte_end":9129072,"line_start":114,"line_end":114,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9129077,"byte_end":9129080,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9129085,"byte_end":9129161,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.  Note that on multiple calls","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9129166,"byte_end":9129240,"line_start":117,"line_end":117,"column_start":5,"column_end":79}},{"value":"/ to `poll_accept`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9129245,"byte_end":9129321,"line_start":118,"line_end":118,"column_start":5,"column_end":81}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9129326,"byte_end":9129375,"line_start":119,"line_end":119,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":4062},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9131209,"byte_end":9131217,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::unix::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`UnixStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`UnixStream`], created by [`split`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9130872,"byte_end":9130937,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9130938,"byte_end":9130941,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9130942,"byte_end":9131030,"line_start":21,"line_end":21,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9131031,"byte_end":9131058,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9131059,"byte_end":9131062,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9131063,"byte_end":9131093,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ [`split`]: UnixStream::split()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9131094,"byte_end":9131128,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9131129,"byte_end":9131180,"line_start":26,"line_end":26,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4069},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9131843,"byte_end":9131852,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::unix::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`UnixStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`UnixStream`], created by [`split`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9131240,"byte_end":9131306,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9131307,"byte_end":9131310,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9131311,"byte_end":9131397,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ shut down the UnixStream stream in the write direction.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9131398,"byte_end":9131457,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9131458,"byte_end":9131461,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9131462,"byte_end":9131543,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9131544,"byte_end":9131579,"line_start":36,"line_end":36,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9131580,"byte_end":9131583,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9131584,"byte_end":9131614,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ [`split`]: UnixStream::split()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9131615,"byte_end":9131649,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9131650,"byte_end":9131697,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9131698,"byte_end":9131760,"line_start":41,"line_end":41,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9131761,"byte_end":9131814,"line_start":42,"line_end":42,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":4076},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9134248,"byte_end":9134261,"line_start":30,"line_end":30,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::unix::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":4077}],"decl_id":null,"docs":" Owned read half of a [`UnixStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`UnixStream`], created by [`into_split`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9133869,"byte_end":9133936,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9133937,"byte_end":9133940,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9133941,"byte_end":9134028,"line_start":23,"line_end":23,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9134029,"byte_end":9134063,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9134064,"byte_end":9134067,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: crate::net::UnixStream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9134068,"byte_end":9134110,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9134111,"byte_end":9134167,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9134168,"byte_end":9134219,"line_start":28,"line_end":28,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4080},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9135007,"byte_end":9135021,"line_start":49,"line_end":49,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::unix::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":4081},{"krate":0,"index":4082}],"decl_id":null,"docs":" Owned write half of a [`UnixStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`UnixStream`], created by [`into_split`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9134295,"byte_end":9134363,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9134364,"byte_end":9134367,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9134368,"byte_end":9134432,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/ [`poll_shutdown`] will shut down the stream in the write direction.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9134433,"byte_end":9134504,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ Dropping the write half will also shut down the write half of the stream.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9134505,"byte_end":9134582,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9134583,"byte_end":9134586,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9134587,"byte_end":9134667,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/ found on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9134668,"byte_end":9134709,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9134710,"byte_end":9134713,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: crate::net::UnixStream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9134714,"byte_end":9134756,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9134757,"byte_end":9134813,"line_start":44,"line_end":44,"column_start":1,"column_end":57}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9134814,"byte_end":9134861,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9134862,"byte_end":9134924,"line_start":46,"line_end":46,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9134925,"byte_end":9134978,"line_start":47,"line_end":47,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":4085},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9135990,"byte_end":9136002,"line_start":83,"line_end":83,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::unix::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9135858,"byte_end":9135940,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9135941,"byte_end":9135961,"line_start":81,"line_end":81,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":4087},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9136003,"byte_end":9136020,"line_start":83,"line_end":83,"column_start":25,"column_end":42},"name":"0","qualname":"::net::unix::split_owned::ReuniteError::0","value":"net::unix::split_owned::OwnedReadHalf","parent":{"krate":0,"index":4085},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4088},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9136022,"byte_end":9136040,"line_start":83,"line_end":83,"column_start":44,"column_end":62},"name":"1","qualname":"::net::unix::split_owned::ReuniteError::1","value":"net::unix::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":4085},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3895},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9136600,"byte_end":9136607,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<UnixStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `UnixStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `UnixStream` back together and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9136323,"byte_end":9136393,"line_start":97,"line_end":97,"column_start":5,"column_end":75}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9136398,"byte_end":9136462,"line_start":98,"line_end":98,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9136467,"byte_end":9136519,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9136524,"byte_end":9136527,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9136532,"byte_end":9136588,"line_start":101,"line_end":101,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3899},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9137244,"byte_end":9137251,"line_start":123,"line_end":123,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<UnixStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `UnixStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `UnixStream` back together and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9136967,"byte_end":9137037,"line_start":118,"line_end":118,"column_start":5,"column_end":75}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9137042,"byte_end":9137106,"line_start":119,"line_end":119,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9137111,"byte_end":9137163,"line_start":120,"line_end":120,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9137168,"byte_end":9137171,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9137176,"byte_end":9137232,"line_start":122,"line_end":122,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3900},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9137557,"byte_end":9137563,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9137358,"byte_end":9137430,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9137435,"byte_end":9137504,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9137509,"byte_end":9137545,"line_start":129,"line_end":129,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3920},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/socketaddr.rs","byte_start":9139189,"byte_end":9139199,"line_start":5,"line_end":5,"column_start":12,"column_end":22},"name":"SocketAddr","qualname":"::net::unix::socketaddr::SocketAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":" An address associated with a Tokio Unix socket.\n","sig":null,"attributes":[{"value":"/ An address associated with a Tokio Unix socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/socketaddr.rs","byte_start":9139126,"byte_end":9139177,"line_start":4,"line_end":4,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3924},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/socketaddr.rs","byte_start":9139435,"byte_end":9139445,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"is_unnamed","qualname":"<SocketAddr>::is_unnamed","value":"pub fn is_unnamed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the address is unnamed.","sig":null,"attributes":[{"value":"/ Returns `true` if the address is unnamed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/socketaddr.rs","byte_start":9139257,"byte_end":9139302,"line_start":8,"line_end":8,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/socketaddr.rs","byte_start":9139307,"byte_end":9139310,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ Documentation reflected in [`SocketAddr`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/socketaddr.rs","byte_start":9139315,"byte_end":9139360,"line_start":10,"line_end":10,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/socketaddr.rs","byte_start":9139365,"byte_end":9139368,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ [`SocketAddr`]: std::os::unix::net::SocketAddr","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/socketaddr.rs","byte_start":9139373,"byte_end":9139423,"line_start":12,"line_end":12,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3925},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/socketaddr.rs","byte_start":9139706,"byte_end":9139717,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"as_pathname","qualname":"<SocketAddr>::as_pathname","value":"pub fn as_pathname(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this address if it is a `pathname` address.","sig":null,"attributes":[{"value":"/ Returns the contents of this address if it is a `pathname` address.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/socketaddr.rs","byte_start":9139502,"byte_end":9139573,"line_start":17,"line_end":17,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/socketaddr.rs","byte_start":9139578,"byte_end":9139581,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Documentation reflected in [`SocketAddr`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/socketaddr.rs","byte_start":9139586,"byte_end":9139631,"line_start":19,"line_end":19,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/socketaddr.rs","byte_start":9139636,"byte_end":9139639,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ [`SocketAddr`]: std::os::unix::net::SocketAddr","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/socketaddr.rs","byte_start":9139644,"byte_end":9139694,"line_start":21,"line_end":21,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":4092},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9141198,"byte_end":9141208,"line_start":35,"line_end":35,"column_start":16,"column_end":26},"name":"UnixStream","qualname":"::net::unix::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":4093}],"decl_id":null,"docs":" A structure representing a connected Unix socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":21642,"byte_end":21676,"line_start":179,"line_end":179,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3967},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9141531,"byte_end":9141538,"line_start":46,"line_end":46,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"pub async fn connect<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9141289,"byte_end":9141332,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9141337,"byte_end":9141340,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function will create a new Unix socket and connect to the path","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9141345,"byte_end":9141416,"line_start":43,"line_end":43,"column_start":5,"column_end":76}},{"value":"/ specified, associating the returned stream with the default event loop's","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9141421,"byte_end":9141497,"line_start":44,"line_end":44,"column_start":5,"column_end":81}},{"value":"/ handle.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9141502,"byte_end":9141513,"line_start":45,"line_end":45,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3972},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144201,"byte_end":9144206,"line_start":119,"line_end":119,"column_start":18,"column_end":23},"name":"ready","qualname":"<UnixStream>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9141830,"byte_end":9141877,"line_start":57,"line_end":57,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9141882,"byte_end":9141885,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_read()` or `try_write()`. It","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9141890,"byte_end":9141964,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ can be used to concurrently read / write to the same socket on a single","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9141969,"byte_end":9142044,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/ task without splitting the socket.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142049,"byte_end":9142087,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142092,"byte_end":9142095,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142100,"byte_end":9142114,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142119,"byte_end":9142122,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Concurrently read and write to the stream on the same task without","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142127,"byte_end":9142197,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ splitting.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142202,"byte_end":9142216,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142221,"byte_end":9142224,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142229,"byte_end":9142242,"line_start":68,"line_end":68,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142247,"byte_end":9142275,"line_start":69,"line_end":69,"column_start":5,"column_end":33}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142280,"byte_end":9142311,"line_start":70,"line_end":70,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142316,"byte_end":9142342,"line_start":71,"line_end":71,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142347,"byte_end":9142363,"line_start":72,"line_end":72,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142368,"byte_end":9142371,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142376,"byte_end":9142394,"line_start":74,"line_end":74,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142399,"byte_end":9142450,"line_start":75,"line_end":75,"column_start":5,"column_end":56}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142455,"byte_end":9142502,"line_start":76,"line_end":76,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142507,"byte_end":9142560,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142565,"byte_end":9142624,"line_start":78,"line_end":78,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142629,"byte_end":9142632,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142637,"byte_end":9142651,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/         let ready = stream.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142656,"byte_end":9142741,"line_start":81,"line_end":81,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142746,"byte_end":9142749,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142754,"byte_end":9142790,"line_start":83,"line_end":83,"column_start":5,"column_end":41}},{"value":"/             let mut data = vec![0; 1024];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142795,"byte_end":9142840,"line_start":84,"line_end":84,"column_start":5,"column_end":50}},{"value":"/             // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142845,"byte_end":9142919,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142924,"byte_end":9142986,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/             match stream.try_read(&mut data) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9142991,"byte_end":9143041,"line_start":87,"line_end":87,"column_start":5,"column_end":55}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143046,"byte_end":9143076,"line_start":88,"line_end":88,"column_start":5,"column_end":35}},{"value":"/                     println!(\"read {} bytes\", n);        ","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143081,"byte_end":9143142,"line_start":89,"line_end":89,"column_start":5,"column_end":66}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143147,"byte_end":9143168,"line_start":90,"line_end":90,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143173,"byte_end":9143249,"line_start":91,"line_end":91,"column_start":5,"column_end":81}},{"value":"/                     continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143254,"byte_end":9143287,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143292,"byte_end":9143313,"line_start":93,"line_end":93,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143318,"byte_end":9143349,"line_start":94,"line_end":94,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143354,"byte_end":9143399,"line_start":95,"line_end":95,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143404,"byte_end":9143425,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143430,"byte_end":9143447,"line_start":97,"line_end":97,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143452,"byte_end":9143455,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143460,"byte_end":9143473,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143478,"byte_end":9143481,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143486,"byte_end":9143522,"line_start":101,"line_end":101,"column_start":5,"column_end":41}},{"value":"/             // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143527,"byte_end":9143602,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143607,"byte_end":9143669,"line_start":103,"line_end":103,"column_start":5,"column_end":67}},{"value":"/             match stream.try_write(b\"hello world\") {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143674,"byte_end":9143730,"line_start":104,"line_end":104,"column_start":5,"column_end":61}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143735,"byte_end":9143765,"line_start":105,"line_end":105,"column_start":5,"column_end":35}},{"value":"/                     println!(\"write {} bytes\", n);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143770,"byte_end":9143824,"line_start":106,"line_end":106,"column_start":5,"column_end":59}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143829,"byte_end":9143850,"line_start":107,"line_end":107,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143855,"byte_end":9143931,"line_start":108,"line_end":108,"column_start":5,"column_end":81}},{"value":"/                     continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143936,"byte_end":9143969,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9143974,"byte_end":9143995,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144000,"byte_end":9144031,"line_start":111,"line_end":111,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144036,"byte_end":9144081,"line_start":112,"line_end":112,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144086,"byte_end":9144107,"line_start":113,"line_end":113,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144112,"byte_end":9144129,"line_start":114,"line_end":114,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144134,"byte_end":9144147,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144152,"byte_end":9144161,"line_start":116,"line_end":116,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144166,"byte_end":9144171,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144176,"byte_end":9144183,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3975},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145831,"byte_end":9145839,"line_start":169,"line_end":169,"column_start":18,"column_end":26},"name":"readable","qualname":"<UnixStream>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144363,"byte_end":9144406,"line_start":124,"line_end":124,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144411,"byte_end":9144414,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144419,"byte_end":9144496,"line_start":126,"line_end":126,"column_start":5,"column_end":82}},{"value":"/ paired with `try_read()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144501,"byte_end":9144530,"line_start":127,"line_end":127,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144535,"byte_end":9144538,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144543,"byte_end":9144557,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144562,"byte_end":9144565,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144570,"byte_end":9144583,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144588,"byte_end":9144619,"line_start":132,"line_end":132,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144624,"byte_end":9144650,"line_start":133,"line_end":133,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144655,"byte_end":9144671,"line_start":134,"line_end":134,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144676,"byte_end":9144679,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144684,"byte_end":9144702,"line_start":136,"line_end":136,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144707,"byte_end":9144758,"line_start":137,"line_end":137,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144763,"byte_end":9144791,"line_start":138,"line_end":138,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144796,"byte_end":9144843,"line_start":139,"line_end":139,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144848,"byte_end":9144901,"line_start":140,"line_end":140,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144906,"byte_end":9144965,"line_start":141,"line_end":141,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144970,"byte_end":9144973,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     let mut msg = vec![0; 1024];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9144978,"byte_end":9145014,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145019,"byte_end":9145022,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145027,"byte_end":9145041,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145046,"byte_end":9145095,"line_start":146,"line_end":146,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145100,"byte_end":9145137,"line_start":147,"line_end":147,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145142,"byte_end":9145145,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145150,"byte_end":9145220,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145225,"byte_end":9145283,"line_start":150,"line_end":150,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut msg) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145288,"byte_end":9145333,"line_start":151,"line_end":151,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145338,"byte_end":9145364,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/                 msg.truncate(n);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145369,"byte_end":9145405,"line_start":153,"line_end":153,"column_start":5,"column_end":41}},{"value":"/                 break;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145410,"byte_end":9145436,"line_start":154,"line_end":154,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145441,"byte_end":9145458,"line_start":155,"line_end":155,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145463,"byte_end":9145535,"line_start":156,"line_end":156,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145540,"byte_end":9145569,"line_start":157,"line_end":157,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145574,"byte_end":9145591,"line_start":158,"line_end":158,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145596,"byte_end":9145623,"line_start":159,"line_end":159,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145628,"byte_end":9145669,"line_start":160,"line_end":160,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145674,"byte_end":9145691,"line_start":161,"line_end":161,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145696,"byte_end":9145709,"line_start":162,"line_end":162,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145714,"byte_end":9145723,"line_start":163,"line_end":163,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145728,"byte_end":9145731,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/     println!(\"GOT = {:?}\", msg);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145736,"byte_end":9145772,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145777,"byte_end":9145791,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145796,"byte_end":9145801,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145806,"byte_end":9145813,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3978},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147202,"byte_end":9147217,"line_start":203,"line_end":203,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<UnixStream>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145940,"byte_end":9145969,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145974,"byte_end":9145977,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ If the unix stream is not currently ready for reading, this method will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9145982,"byte_end":9146057,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the unix","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9146062,"byte_end":9146137,"line_start":177,"line_end":177,"column_start":5,"column_end":80}},{"value":"/ stream becomes ready for reading, `Waker::wake` will be called on the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9146142,"byte_end":9146215,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9146220,"byte_end":9146230,"line_start":179,"line_end":179,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9146235,"byte_end":9146238,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_read_ready` or `poll_read`, only","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9146243,"byte_end":9146316,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9146321,"byte_end":9146389,"line_start":182,"line_end":182,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup. (However, `poll_write_ready` retains a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9146394,"byte_end":9146467,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ second, independent waker.)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9146472,"byte_end":9146503,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9146508,"byte_end":9146511,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9146516,"byte_end":9146591,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9146596,"byte_end":9146671,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9146676,"byte_end":9146744,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9146749,"byte_end":9146752,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9146757,"byte_end":9146775,"line_start":190,"line_end":190,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9146780,"byte_end":9146783,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9146788,"byte_end":9146813,"line_start":192,"line_end":192,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9146818,"byte_end":9146821,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the unix stream is not ready for reading.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9146826,"byte_end":9146892,"line_start":194,"line_end":194,"column_start":5,"column_end":71}},{"value":"/ * `Poll::Ready(Ok(()))` if the unix stream is ready for reading.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9146897,"byte_end":9146965,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9146970,"byte_end":9147025,"line_start":196,"line_end":196,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147030,"byte_end":9147033,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147038,"byte_end":9147050,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147055,"byte_end":9147058,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147063,"byte_end":9147138,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147143,"byte_end":9147146,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147151,"byte_end":9147190,"line_start":202,"line_end":202,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3980},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149660,"byte_end":9149668,"line_start":268,"line_end":268,"column_start":12,"column_end":20},"name":"try_read","qualname":"<UnixStream>::try_read","value":"pub fn try_read(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, returning how\n many bytes were read.","sig":null,"attributes":[{"value":"/ Try to read data from the stream into the provided buffer, returning how","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147350,"byte_end":9147426,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ many bytes were read.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147431,"byte_end":9147456,"line_start":208,"line_end":208,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147461,"byte_end":9147464,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Receives any pending data from the socket but does not wait for new data","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147469,"byte_end":9147545,"line_start":210,"line_end":210,"column_start":5,"column_end":81}},{"value":"/ to arrive. On success, returns the number of bytes read. Because","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147550,"byte_end":9147618,"line_start":211,"line_end":211,"column_start":5,"column_end":73}},{"value":"/ `try_read()` is non-blocking, the buffer does not have to be stored by","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147623,"byte_end":9147697,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ the async task and can exist entirely on the stack.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147702,"byte_end":9147757,"line_start":213,"line_end":213,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147762,"byte_end":9147765,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Usually, [`readable()`] or [`ready()`] is used with this function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147770,"byte_end":9147840,"line_start":215,"line_end":215,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147845,"byte_end":9147848,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ [`readable()`]: UnixStream::readable()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147853,"byte_end":9147895,"line_start":217,"line_end":217,"column_start":5,"column_end":47}},{"value":"/ [`ready()`]: UnixStream::ready()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147900,"byte_end":9147936,"line_start":218,"line_end":218,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147941,"byte_end":9147944,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147949,"byte_end":9147961,"line_start":220,"line_end":220,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147966,"byte_end":9147969,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ If data is successfully read, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9147974,"byte_end":9148045,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ number of bytes read. `Ok(0)` indicates the stream's read half is closed","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148050,"byte_end":9148126,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ and will no longer yield data. If the stream is not ready to read data","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148131,"byte_end":9148205,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148210,"byte_end":9148259,"line_start":225,"line_end":225,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148264,"byte_end":9148267,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148272,"byte_end":9148286,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148291,"byte_end":9148294,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148299,"byte_end":9148312,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148317,"byte_end":9148348,"line_start":230,"line_end":230,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148353,"byte_end":9148379,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148384,"byte_end":9148400,"line_start":232,"line_end":232,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148405,"byte_end":9148408,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148413,"byte_end":9148431,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148436,"byte_end":9148487,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148492,"byte_end":9148520,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148525,"byte_end":9148572,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148577,"byte_end":9148630,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148635,"byte_end":9148694,"line_start":239,"line_end":239,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148699,"byte_end":9148702,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148707,"byte_end":9148721,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148726,"byte_end":9148775,"line_start":242,"line_end":242,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148780,"byte_end":9148817,"line_start":243,"line_end":243,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148822,"byte_end":9148825,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/         // Creating the buffer **after** the `await` prevents it from","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148830,"byte_end":9148903,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/         // being stored in the async task.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148908,"byte_end":9148954,"line_start":246,"line_end":246,"column_start":5,"column_end":51}},{"value":"/         let mut buf = [0; 4096];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9148959,"byte_end":9148995,"line_start":247,"line_end":247,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149000,"byte_end":9149003,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149008,"byte_end":9149078,"line_start":249,"line_end":249,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149083,"byte_end":9149141,"line_start":250,"line_end":250,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut buf) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149146,"byte_end":9149191,"line_start":251,"line_end":251,"column_start":5,"column_end":50}},{"value":"/             Ok(0) => break,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149196,"byte_end":9149227,"line_start":252,"line_end":252,"column_start":5,"column_end":36}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149232,"byte_end":9149258,"line_start":253,"line_end":253,"column_start":5,"column_end":31}},{"value":"/                 println!(\"read {} bytes\", n);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149263,"byte_end":9149312,"line_start":254,"line_end":254,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149317,"byte_end":9149334,"line_start":255,"line_end":255,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149339,"byte_end":9149411,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149416,"byte_end":9149445,"line_start":257,"line_end":257,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149450,"byte_end":9149467,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149472,"byte_end":9149499,"line_start":259,"line_end":259,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149504,"byte_end":9149545,"line_start":260,"line_end":260,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149550,"byte_end":9149567,"line_start":261,"line_end":261,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149572,"byte_end":9149585,"line_start":262,"line_end":262,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149590,"byte_end":9149599,"line_start":263,"line_end":263,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149604,"byte_end":9149607,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149612,"byte_end":9149626,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149631,"byte_end":9149636,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9149641,"byte_end":9149648,"line_start":267,"line_end":267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4094},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9152339,"byte_end":9152351,"line_start":334,"line_end":334,"column_start":16,"column_end":28},"name":"try_read_buf","qualname":"<UnixStream>::try_read_buf","value":"pub fn try_read_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":20702,"byte_end":20729,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3982},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154336,"byte_end":9154344,"line_start":396,"line_end":396,"column_start":18,"column_end":26},"name":"writable","qualname":"<UnixStream>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9152990,"byte_end":9153033,"line_start":355,"line_end":355,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153038,"byte_end":9153041,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is usually","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153046,"byte_end":9153123,"line_start":357,"line_end":357,"column_start":5,"column_end":82}},{"value":"/ paired with `try_write()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153128,"byte_end":9153158,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153163,"byte_end":9153166,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153171,"byte_end":9153185,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153190,"byte_end":9153193,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153198,"byte_end":9153211,"line_start":362,"line_end":362,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153216,"byte_end":9153247,"line_start":363,"line_end":363,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153252,"byte_end":9153278,"line_start":364,"line_end":364,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153283,"byte_end":9153299,"line_start":365,"line_end":365,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153304,"byte_end":9153307,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153312,"byte_end":9153330,"line_start":367,"line_end":367,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153335,"byte_end":9153386,"line_start":368,"line_end":368,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153391,"byte_end":9153419,"line_start":369,"line_end":369,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153424,"byte_end":9153471,"line_start":370,"line_end":370,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153476,"byte_end":9153529,"line_start":371,"line_end":371,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153534,"byte_end":9153593,"line_start":372,"line_end":372,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153598,"byte_end":9153601,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153606,"byte_end":9153620,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153625,"byte_end":9153674,"line_start":375,"line_end":375,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153679,"byte_end":9153716,"line_start":376,"line_end":376,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153721,"byte_end":9153724,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153729,"byte_end":9153800,"line_start":378,"line_end":378,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153805,"byte_end":9153863,"line_start":379,"line_end":379,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153868,"byte_end":9153920,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153925,"byte_end":9153951,"line_start":381,"line_end":381,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153956,"byte_end":9153982,"line_start":382,"line_end":382,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9153987,"byte_end":9154004,"line_start":383,"line_end":383,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154009,"byte_end":9154081,"line_start":384,"line_end":384,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154086,"byte_end":9154115,"line_start":385,"line_end":385,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154120,"byte_end":9154137,"line_start":386,"line_end":386,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154142,"byte_end":9154169,"line_start":387,"line_end":387,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154174,"byte_end":9154215,"line_start":388,"line_end":388,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154220,"byte_end":9154237,"line_start":389,"line_end":389,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154242,"byte_end":9154255,"line_start":390,"line_end":390,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154260,"byte_end":9154269,"line_start":391,"line_end":391,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154274,"byte_end":9154277,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154282,"byte_end":9154296,"line_start":393,"line_end":393,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154301,"byte_end":9154306,"line_start":394,"line_end":394,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154311,"byte_end":9154318,"line_start":395,"line_end":395,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3985},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155709,"byte_end":9155725,"line_start":430,"line_end":430,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<UnixStream>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154445,"byte_end":9154475,"line_start":401,"line_end":401,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154480,"byte_end":9154483,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ If the unix stream is not currently ready for writing, this method will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154488,"byte_end":9154563,"line_start":403,"line_end":403,"column_start":5,"column_end":80}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the unix","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154568,"byte_end":9154643,"line_start":404,"line_end":404,"column_start":5,"column_end":80}},{"value":"/ stream becomes ready for writing, `Waker::wake` will be called on the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154648,"byte_end":9154721,"line_start":405,"line_end":405,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154726,"byte_end":9154736,"line_start":406,"line_end":406,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154741,"byte_end":9154744,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_write_ready` or `poll_write`, only","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154749,"byte_end":9154824,"line_start":408,"line_end":408,"column_start":5,"column_end":80}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154829,"byte_end":9154897,"line_start":409,"line_end":409,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup. (However, `poll_read_ready` retains a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154902,"byte_end":9154974,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/ second, independent waker.)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9154979,"byte_end":9155010,"line_start":411,"line_end":411,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155015,"byte_end":9155018,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155023,"byte_end":9155098,"line_start":413,"line_end":413,"column_start":5,"column_end":80}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155103,"byte_end":9155178,"line_start":414,"line_end":414,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155183,"byte_end":9155251,"line_start":415,"line_end":415,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155256,"byte_end":9155259,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155264,"byte_end":9155282,"line_start":417,"line_end":417,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155287,"byte_end":9155290,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155295,"byte_end":9155320,"line_start":419,"line_end":419,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155325,"byte_end":9155328,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the unix stream is not ready for writing.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155333,"byte_end":9155399,"line_start":421,"line_end":421,"column_start":5,"column_end":71}},{"value":"/ * `Poll::Ready(Ok(()))` if the unix stream is ready for writing.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155404,"byte_end":9155472,"line_start":422,"line_end":422,"column_start":5,"column_end":73}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155477,"byte_end":9155532,"line_start":423,"line_end":423,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155537,"byte_end":9155540,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155545,"byte_end":9155557,"line_start":425,"line_end":425,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155562,"byte_end":9155565,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155570,"byte_end":9155645,"line_start":427,"line_end":427,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155650,"byte_end":9155653,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ [`writable`]: method@Self::writable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155658,"byte_end":9155697,"line_start":429,"line_end":429,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3987},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157559,"byte_end":9157568,"line_start":484,"line_end":484,"column_start":12,"column_end":21},"name":"try_write","qualname":"<UnixStream>::try_write","value":"pub fn try_write(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to write a buffer to the stream, returning how many bytes were\n written.","sig":null,"attributes":[{"value":"/ Try to write a buffer to the stream, returning how many bytes were","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155859,"byte_end":9155929,"line_start":434,"line_end":434,"column_start":5,"column_end":75}},{"value":"/ written.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155934,"byte_end":9155946,"line_start":435,"line_end":435,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155951,"byte_end":9155954,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ The function will attempt to write the entire contents of `buf`, but","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9155959,"byte_end":9156031,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ only part of the buffer may be written.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156036,"byte_end":9156079,"line_start":438,"line_end":438,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156084,"byte_end":9156087,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156092,"byte_end":9156146,"line_start":440,"line_end":440,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156151,"byte_end":9156154,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156159,"byte_end":9156171,"line_start":442,"line_end":442,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156176,"byte_end":9156179,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ If data is successfully written, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156184,"byte_end":9156258,"line_start":444,"line_end":444,"column_start":5,"column_end":79}},{"value":"/ number of bytes written. If the stream is not ready to write data,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156263,"byte_end":9156333,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156338,"byte_end":9156387,"line_start":446,"line_end":446,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156392,"byte_end":9156395,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156400,"byte_end":9156414,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156419,"byte_end":9156422,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156427,"byte_end":9156440,"line_start":450,"line_end":450,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156445,"byte_end":9156476,"line_start":451,"line_end":451,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156481,"byte_end":9156507,"line_start":452,"line_end":452,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156512,"byte_end":9156528,"line_start":453,"line_end":453,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156533,"byte_end":9156536,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156541,"byte_end":9156559,"line_start":455,"line_end":455,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156564,"byte_end":9156615,"line_start":456,"line_end":456,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156620,"byte_end":9156648,"line_start":457,"line_end":457,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156653,"byte_end":9156700,"line_start":458,"line_end":458,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156705,"byte_end":9156758,"line_start":459,"line_end":459,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156763,"byte_end":9156822,"line_start":460,"line_end":460,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156827,"byte_end":9156830,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156835,"byte_end":9156849,"line_start":462,"line_end":462,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156854,"byte_end":9156903,"line_start":463,"line_end":463,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156908,"byte_end":9156945,"line_start":464,"line_end":464,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156950,"byte_end":9156953,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9156958,"byte_end":9157029,"line_start":466,"line_end":466,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157034,"byte_end":9157092,"line_start":467,"line_end":467,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157097,"byte_end":9157149,"line_start":468,"line_end":468,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157154,"byte_end":9157180,"line_start":469,"line_end":469,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157185,"byte_end":9157211,"line_start":470,"line_end":470,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157216,"byte_end":9157233,"line_start":471,"line_end":471,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157238,"byte_end":9157310,"line_start":472,"line_end":472,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157315,"byte_end":9157344,"line_start":473,"line_end":473,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157349,"byte_end":9157366,"line_start":474,"line_end":474,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157371,"byte_end":9157398,"line_start":475,"line_end":475,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157403,"byte_end":9157444,"line_start":476,"line_end":476,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157449,"byte_end":9157466,"line_start":477,"line_end":477,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157471,"byte_end":9157484,"line_start":478,"line_end":478,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157489,"byte_end":9157498,"line_start":479,"line_end":479,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157503,"byte_end":9157506,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157511,"byte_end":9157525,"line_start":481,"line_end":481,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157530,"byte_end":9157535,"line_start":482,"line_end":482,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157540,"byte_end":9157547,"line_start":483,"line_end":483,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3989},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9158425,"byte_end":9158433,"line_start":504,"line_end":504,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"pub fn from_std(net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UnixStream` from a `std::os::unix::net::UnixStream`.","sig":null,"attributes":[{"value":"/ Creates new `UnixStream` from a `std::os::unix::net::UnixStream`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157733,"byte_end":9157802,"line_start":490,"line_end":490,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157807,"byte_end":9157810,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UnixStream from the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157815,"byte_end":9157885,"line_start":492,"line_end":492,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157890,"byte_end":9157958,"line_start":493,"line_end":493,"column_start":5,"column_end":73}},{"value":"/ nothing about the underlying stream; it is left up to the user to set","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9157963,"byte_end":9158036,"line_start":494,"line_end":494,"column_start":5,"column_end":78}},{"value":"/ it in non-blocking mode.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9158041,"byte_end":9158069,"line_start":495,"line_end":495,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9158074,"byte_end":9158077,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9158082,"byte_end":9158094,"line_start":497,"line_end":497,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9158099,"byte_end":9158102,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9158107,"byte_end":9158167,"line_start":499,"line_end":499,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9158172,"byte_end":9158175,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9158180,"byte_end":9158250,"line_start":501,"line_end":501,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9158255,"byte_end":9158328,"line_start":502,"line_end":502,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9158333,"byte_end":9158413,"line_start":503,"line_end":503,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3990},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9158914,"byte_end":9158918,"line_start":516,"line_end":516,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9158634,"byte_end":9158683,"line_start":511,"line_end":511,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9158688,"byte_end":9158691,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9158696,"byte_end":9158767,"line_start":513,"line_end":513,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9158772,"byte_end":9158842,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9158847,"byte_end":9158902,"line_start":515,"line_end":515,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3992},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9159361,"byte_end":9159371,"line_start":530,"line_end":530,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9159281,"byte_end":9159349,"line_start":529,"line_end":529,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3993},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9159544,"byte_end":9159553,"line_start":535,"line_end":535,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9159463,"byte_end":9159532,"line_start":534,"line_end":534,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3994},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9159738,"byte_end":9159747,"line_start":540,"line_end":540,"column_start":12,"column_end":21},"name":"peer_cred","qualname":"<UnixStream>::peer_cred","value":"pub fn peer_cred(&Self) -> io::Result<UCred>","parent":null,"children":[],"decl_id":null,"docs":" Returns effective credentials of the process which called `connect` or `pair`.\n","sig":null,"attributes":[{"value":"/ Returns effective credentials of the process which called `connect` or `pair`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9159644,"byte_end":9159726,"line_start":539,"line_end":539,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3995},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9159883,"byte_end":9159893,"line_start":545,"line_end":545,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9159824,"byte_end":9159871,"line_start":544,"line_end":544,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3997},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9160869,"byte_end":9160874,"line_start":568,"line_end":568,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9160497,"byte_end":9160533,"line_start":560,"line_end":560,"column_start":5,"column_end":41}},{"value":"/ Split a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9160538,"byte_end":9160615,"line_start":561,"line_end":561,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9160620,"byte_end":9160666,"line_start":562,"line_end":562,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9160671,"byte_end":9160674,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9160679,"byte_end":9160758,"line_start":564,"line_end":564,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9160763,"byte_end":9160806,"line_start":565,"line_end":565,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9160811,"byte_end":9160814,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: Self::into_split()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9160819,"byte_end":9160857,"line_start":567,"line_end":567,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3999},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9161516,"byte_end":9161526,"line_start":583,"line_end":583,"column_start":12,"column_end":22},"name":"into_split","qualname":"<UnixStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9160959,"byte_end":9161037,"line_start":572,"line_end":572,"column_start":5,"column_end":83}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9161042,"byte_end":9161088,"line_start":573,"line_end":573,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9161093,"byte_end":9161096,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9161101,"byte_end":9161179,"line_start":575,"line_end":575,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9161184,"byte_end":9161232,"line_start":576,"line_end":576,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9161237,"byte_end":9161240,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9161245,"byte_end":9161319,"line_start":578,"line_end":578,"column_start":5,"column_end":79}},{"value":"/ stream. This is equivalent to calling [`shutdown()`] on the `UnixStream`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9161324,"byte_end":9161401,"line_start":579,"line_end":579,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9161406,"byte_end":9161409,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ [`split`]: Self::split()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9161414,"byte_end":9161442,"line_start":581,"line_end":581,"column_start":5,"column_end":33}},{"value":"/ [`shutdown()`]: fn@crate::io::AsyncWriteExt::shutdown","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9161447,"byte_end":9161504,"line_start":582,"line_end":582,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":4098},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/ucred.rs","byte_start":9164565,"byte_end":9164570,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"UCred","qualname":"::net::unix::ucred::UCred","value":"UCred {  }","parent":null,"children":[{"krate":0,"index":4099},{"krate":0,"index":4100},{"krate":0,"index":4101}],"decl_id":null,"docs":" Credentials of a process\n","sig":null,"attributes":[{"value":"/ Credentials of a process","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/ucred.rs","byte_start":9164474,"byte_end":9164502,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4026},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/ucred.rs","byte_start":9164814,"byte_end":9164817,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"uid","qualname":"<UCred>::uid","value":"pub fn uid(&Self) -> uid_t","parent":null,"children":[],"decl_id":null,"docs":" Gets UID (user ID) of the process.\n","sig":null,"attributes":[{"value":"/ Gets UID (user ID) of the process.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/ucred.rs","byte_start":9164764,"byte_end":9164802,"line_start":15,"line_end":15,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4027},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/ucred.rs","byte_start":9164915,"byte_end":9164918,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"gid","qualname":"<UCred>::gid","value":"pub fn gid(&Self) -> gid_t","parent":null,"children":[],"decl_id":null,"docs":" Gets GID (group ID) of the process.\n","sig":null,"attributes":[{"value":"/ Gets GID (group ID) of the process.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/ucred.rs","byte_start":9164864,"byte_end":9164903,"line_start":20,"line_end":20,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4028},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/ucred.rs","byte_start":9165172,"byte_end":9165175,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"pid","qualname":"<UCred>::pid","value":"pub fn pid(&Self) -> Option<pid_t>","parent":null,"children":[],"decl_id":null,"docs":" Gets PID (process ID) of the process.","sig":null,"attributes":[{"value":"/ Gets PID (process ID) of the process.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/ucred.rs","byte_start":9164965,"byte_end":9165006,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/ucred.rs","byte_start":9165011,"byte_end":9165014,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This is only implemented under Linux, Android, iOS, macOS, Solaris and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/ucred.rs","byte_start":9165019,"byte_end":9165093,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ Illumos. On other plaforms this will always return `None`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/ucred.rs","byte_start":9165098,"byte_end":9165160,"line_start":28,"line_end":28,"column_start":5,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":632},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/mod.rs","byte_start":108331,"byte_end":108337,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":631},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/mod.rs","byte_start":108268,"byte_end":108321,"line_start":49,"line_end":49,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":633},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/mod.rs","byte_start":108390,"byte_end":108395,"line_start":53,"line_end":53,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":631},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/mod.rs","byte_start":108352,"byte_end":108380,"line_start":52,"line_end":52,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":4208},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":4209},{"krate":0,"index":4224},{"krate":0,"index":4763},{"krate":0,"index":4881},{"krate":0,"index":4882},{"krate":0,"index":4998},{"krate":0,"index":4999},{"krate":0,"index":5000},{"krate":0,"index":5055},{"krate":0,"index":5056},{"krate":0,"index":5066},{"krate":0,"index":5091},{"krate":0,"index":5092},{"krate":0,"index":5124},{"krate":0,"index":5125},{"krate":0,"index":5126},{"krate":0,"index":5127},{"krate":0,"index":5130},{"krate":0,"index":5229},{"krate":0,"index":5230},{"krate":0,"index":5231},{"krate":0,"index":5245},{"krate":0,"index":5249},{"krate":0,"index":5251},{"krate":0,"index":5255},{"krate":0,"index":5232},{"krate":0,"index":5233}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"/ The Tokio runtime.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172092,"byte_end":9172114,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172115,"byte_end":9172118,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require runtime","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172119,"byte_end":9172192,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ support. In particular, the following runtime services are necessary:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172193,"byte_end":9172266,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172267,"byte_end":9172270,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172271,"byte_end":9172349,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172350,"byte_end":9172407,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172408,"byte_end":9172478,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172479,"byte_end":9172551,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172552,"byte_end":9172555,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172556,"byte_end":9172636,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, often it is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172637,"byte_end":9172717,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ not required to configure a [`Runtime`] manually, and a user may just use the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172718,"byte_end":9172799,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"/ [`tokio::main`] attribute macro, which creates a [`Runtime`] under the hood.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172800,"byte_end":9172880,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172881,"byte_end":9172884,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172885,"byte_end":9172896,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172897,"byte_end":9172900,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When no fine tuning is required, the [`tokio::main`] attribute macro can be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172901,"byte_end":9172980,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ used.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172981,"byte_end":9172990,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172991,"byte_end":9172994,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9172995,"byte_end":9173008,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173009,"byte_end":9173041,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173042,"byte_end":9173091,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173092,"byte_end":9173095,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173096,"byte_end":9173114,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173115,"byte_end":9173178,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173179,"byte_end":9173245,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173246,"byte_end":9173249,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173250,"byte_end":9173264,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173265,"byte_end":9173324,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173325,"byte_end":9173328,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173329,"byte_end":9173366,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173367,"byte_end":9173407,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173408,"byte_end":9173411,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173412,"byte_end":9173492,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173493,"byte_end":9173515,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173516,"byte_end":9173579,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173580,"byte_end":9173620,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173621,"byte_end":9173671,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173672,"byte_end":9173707,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173708,"byte_end":9173743,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173744,"byte_end":9173826,"line_start":42,"line_end":42,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173827,"byte_end":9173862,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173863,"byte_end":9173888,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173889,"byte_end":9173911,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173912,"byte_end":9173915,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173916,"byte_end":9173958,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9173959,"byte_end":9174031,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174032,"byte_end":9174109,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174110,"byte_end":9174141,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174142,"byte_end":9174163,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174164,"byte_end":9174181,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174182,"byte_end":9174197,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174198,"byte_end":9174207,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174208,"byte_end":9174213,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174214,"byte_end":9174221,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174222,"byte_end":9174225,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174226,"byte_end":9174304,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174305,"byte_end":9174383,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174384,"byte_end":9174445,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174446,"byte_end":9174449,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174450,"byte_end":9174503,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174504,"byte_end":9174507,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174508,"byte_end":9174521,"line_start":64,"line_end":64,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174522,"byte_end":9174554,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174555,"byte_end":9174604,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174605,"byte_end":9174637,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174638,"byte_end":9174641,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174642,"byte_end":9174699,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174700,"byte_end":9174729,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/     let rt  = Runtime::new()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174730,"byte_end":9174764,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174765,"byte_end":9174768,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174769,"byte_end":9174799,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174800,"byte_end":9174827,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/         let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174828,"byte_end":9174898,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174899,"byte_end":9174902,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174903,"byte_end":9174921,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174922,"byte_end":9174985,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174986,"byte_end":9174989,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9174990,"byte_end":9175031,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175032,"byte_end":9175076,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175077,"byte_end":9175080,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175081,"byte_end":9175165,"line_start":83,"line_end":83,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175166,"byte_end":9175192,"line_start":84,"line_end":84,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175193,"byte_end":9175260,"line_start":85,"line_end":85,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175261,"byte_end":9175305,"line_start":86,"line_end":86,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175306,"byte_end":9175360,"line_start":87,"line_end":87,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175361,"byte_end":9175400,"line_start":88,"line_end":88,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175401,"byte_end":9175440,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175441,"byte_end":9175527,"line_start":90,"line_end":90,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175528,"byte_end":9175567,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175568,"byte_end":9175597,"line_start":92,"line_end":92,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175598,"byte_end":9175624,"line_start":93,"line_end":93,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175625,"byte_end":9175628,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175629,"byte_end":9175675,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175676,"byte_end":9175752,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175753,"byte_end":9175834,"line_start":97,"line_end":97,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175835,"byte_end":9175870,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175871,"byte_end":9175896,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175897,"byte_end":9175918,"line_start":100,"line_end":100,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175919,"byte_end":9175938,"line_start":101,"line_end":101,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175939,"byte_end":9175952,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175953,"byte_end":9175963,"line_start":103,"line_end":103,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175964,"byte_end":9175969,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175970,"byte_end":9175977,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175978,"byte_end":9175981,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9175982,"byte_end":9176011,"line_start":107,"line_end":107,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176012,"byte_end":9176015,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176016,"byte_end":9176094,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176095,"byte_end":9176171,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176172,"byte_end":9176214,"line_start":111,"line_end":111,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176215,"byte_end":9176218,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ #### Multi-Thread Scheduler","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176219,"byte_end":9176250,"line_start":113,"line_end":113,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176251,"byte_end":9176254,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ The multi-thread scheduler executes futures on a _thread pool_, using a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176255,"byte_end":9176330,"line_start":115,"line_end":115,"column_start":1,"column_end":76}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176331,"byte_end":9176409,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configuration","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176410,"byte_end":9176488,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ for most applications. The multi-thread scheduler requires the `rt-multi-thread`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176489,"byte_end":9176573,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/ feature flag, and is selected by default:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176574,"byte_end":9176619,"line_start":119,"line_end":119,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176620,"byte_end":9176627,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176628,"byte_end":9176651,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176652,"byte_end":9176655,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176656,"byte_end":9176715,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Runtime::new()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176716,"byte_end":9176763,"line_start":124,"line_end":124,"column_start":1,"column_end":48}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176764,"byte_end":9176778,"line_start":125,"line_end":125,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176779,"byte_end":9176786,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176787,"byte_end":9176790,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the multi-thread scheduler, except in some","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176791,"byte_end":9176866,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ niche use-cases, such as when running only a single thread is required.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176867,"byte_end":9176942,"line_start":129,"line_end":129,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176943,"byte_end":9176946,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ #### Current-Thread Scheduler","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176947,"byte_end":9176980,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176981,"byte_end":9176984,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The current-thread scheduler provides a _single-threaded_ future executor.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9176985,"byte_end":9177063,"line_start":133,"line_end":133,"column_start":1,"column_end":79}},{"value":"/ All tasks will be created and executed on the current thread. This requires","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177064,"byte_end":9177143,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ the `rt` feature flag.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177144,"byte_end":9177170,"line_start":135,"line_end":135,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177171,"byte_end":9177178,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177179,"byte_end":9177202,"line_start":137,"line_end":137,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177203,"byte_end":9177206,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177207,"byte_end":9177266,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new_current_thread()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177267,"byte_end":9177324,"line_start":140,"line_end":140,"column_start":1,"column_end":58}},{"value":"/     .build()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177325,"byte_end":9177343,"line_start":141,"line_end":141,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177344,"byte_end":9177358,"line_start":142,"line_end":142,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177359,"byte_end":9177366,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177367,"byte_end":9177370,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177371,"byte_end":9177396,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177397,"byte_end":9177400,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177401,"byte_end":9177475,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177476,"byte_end":9177556,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177557,"byte_end":9177636,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177637,"byte_end":9177716,"line_start":150,"line_end":150,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177717,"byte_end":9177786,"line_start":151,"line_end":151,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177787,"byte_end":9177790,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177791,"byte_end":9177825,"line_start":153,"line_end":153,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177826,"byte_end":9177829,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177830,"byte_end":9177909,"line_start":155,"line_end":155,"column_start":1,"column_end":80}},{"value":"/ multi-thread scheduler spawns threads to schedule tasks and for `spawn_blocking`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177910,"byte_end":9177994,"line_start":156,"line_end":156,"column_start":1,"column_end":85}},{"value":"/ calls.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9177995,"byte_end":9178005,"line_start":157,"line_end":157,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9178006,"byte_end":9178009,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9178010,"byte_end":9178088,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9178089,"byte_end":9178168,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9178169,"byte_end":9178227,"line_start":161,"line_end":161,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9178228,"byte_end":9178231,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9178232,"byte_end":9178256,"line_start":163,"line_end":163,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9178257,"byte_end":9178281,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9178282,"byte_end":9178316,"line_start":165,"line_end":165,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9178317,"byte_end":9178355,"line_start":166,"line_end":166,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9178356,"byte_end":9178402,"line_start":167,"line_end":167,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9178403,"byte_end":9178453,"line_start":168,"line_end":168,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9178454,"byte_end":9178528,"line_start":169,"line_end":169,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9178529,"byte_end":9178609,"line_start":170,"line_end":170,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9178610,"byte_end":9178672,"line_start":171,"line_end":171,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9178673,"byte_end":9178739,"line_start":172,"line_end":172,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9178740,"byte_end":9178804,"line_start":173,"line_end":173,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":4745},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9213961,"byte_end":9213970,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":4746}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4337},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214459,"byte_end":9214471,"line_start":32,"line_end":32,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214379,"byte_end":9214447,"line_start":31,"line_end":31,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4338},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214925,"byte_end":9214933,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214546,"byte_end":9214608,"line_start":36,"line_end":36,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214613,"byte_end":9214616,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214621,"byte_end":9214635,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214640,"byte_end":9214643,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214648,"byte_end":9214655,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214660,"byte_end":9214679,"line_start":41,"line_end":41,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214684,"byte_end":9214687,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214692,"byte_end":9214710,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214715,"byte_end":9214736,"line_start":44,"line_end":44,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214741,"byte_end":9214779,"line_start":45,"line_end":45,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214784,"byte_end":9214811,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214816,"byte_end":9214846,"line_start":47,"line_end":47,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214851,"byte_end":9214854,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214859,"byte_end":9214891,"line_start":49,"line_end":49,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214896,"byte_end":9214901,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214906,"byte_end":9214913,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4339},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215788,"byte_end":9215798,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215007,"byte_end":9215086,"line_start":56,"line_end":56,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215091,"byte_end":9215094,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215099,"byte_end":9215111,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215116,"byte_end":9215119,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215124,"byte_end":9215198,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215203,"byte_end":9215278,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215283,"byte_end":9215341,"line_start":62,"line_end":62,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215346,"byte_end":9215349,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215354,"byte_end":9215368,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215373,"byte_end":9215376,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215381,"byte_end":9215400,"line_start":66,"line_end":66,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215405,"byte_end":9215424,"line_start":67,"line_end":67,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215429,"byte_end":9215432,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215437,"byte_end":9215455,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215460,"byte_end":9215481,"line_start":70,"line_end":70,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215486,"byte_end":9215524,"line_start":71,"line_end":71,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215529,"byte_end":9215556,"line_start":72,"line_end":72,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215561,"byte_end":9215591,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215596,"byte_end":9215599,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215604,"byte_end":9215631,"line_start":75,"line_end":75,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215636,"byte_end":9215684,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215689,"byte_end":9215740,"line_start":77,"line_end":77,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215745,"byte_end":9215754,"line_start":78,"line_end":78,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215759,"byte_end":9215764,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215769,"byte_end":9215776,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4340},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216563,"byte_end":9216577,"line_start":107,"line_end":107,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self) -> Result<Box<Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9215939,"byte_end":9216008,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216013,"byte_end":9216085,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216090,"byte_end":9216103,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216108,"byte_end":9216111,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216116,"byte_end":9216130,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216135,"byte_end":9216138,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216143,"byte_end":9216162,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216167,"byte_end":9216186,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216191,"byte_end":9216194,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216199,"byte_end":9216217,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216222,"byte_end":9216243,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216248,"byte_end":9216286,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216291,"byte_end":9216318,"line_start":98,"line_end":98,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216323,"byte_end":9216353,"line_start":99,"line_end":99,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216358,"byte_end":9216361,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216366,"byte_end":9216416,"line_start":101,"line_end":101,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216421,"byte_end":9216469,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216474,"byte_end":9216515,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216520,"byte_end":9216529,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216534,"byte_end":9216539,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216544,"byte_end":9216551,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4747},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9236561,"byte_end":9236571,"line_start":144,"line_end":144,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":4749},{"krate":0,"index":4750}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4462},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237874,"byte_end":9237879,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"abort","qualname":"<JoinHandle<T>>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the task associated with the handle.","sig":null,"attributes":[{"value":"/ Abort the task associated with the handle.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9236917,"byte_end":9236963,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9236968,"byte_end":9236971,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Awaiting a cancelled task might complete as usual if the task was","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9236976,"byte_end":9237045,"line_start":163,"line_end":163,"column_start":5,"column_end":74}},{"value":"/ already completed at the time it was cancelled, but most likely it","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237050,"byte_end":9237120,"line_start":164,"line_end":164,"column_start":5,"column_end":75}},{"value":"/ will complete with a `Err(JoinError::Cancelled)`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237125,"byte_end":9237178,"line_start":165,"line_end":165,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237183,"byte_end":9237186,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237191,"byte_end":9237202,"line_start":167,"line_end":167,"column_start":5,"column_end":16}},{"value":"/ use tokio::time;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237207,"byte_end":9237227,"line_start":168,"line_end":168,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237232,"byte_end":9237235,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237240,"byte_end":9237258,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237263,"byte_end":9237284,"line_start":171,"line_end":171,"column_start":5,"column_end":26}},{"value":"/    let mut handles = Vec::new();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237289,"byte_end":9237325,"line_start":172,"line_end":172,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237330,"byte_end":9237333,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237338,"byte_end":9237378,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237383,"byte_end":9237442,"line_start":175,"line_end":175,"column_start":5,"column_end":64}},{"value":"/       true","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237447,"byte_end":9237461,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/    }));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237466,"byte_end":9237477,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237482,"byte_end":9237485,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237490,"byte_end":9237530,"line_start":179,"line_end":179,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237535,"byte_end":9237594,"line_start":180,"line_end":180,"column_start":5,"column_end":64}},{"value":"/       false","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237599,"byte_end":9237614,"line_start":181,"line_end":181,"column_start":5,"column_end":20}},{"value":"/    }));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237619,"byte_end":9237630,"line_start":182,"line_end":182,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237635,"byte_end":9237638,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/    for handle in &handles {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237643,"byte_end":9237674,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/        handle.abort();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237679,"byte_end":9237705,"line_start":185,"line_end":185,"column_start":5,"column_end":31}},{"value":"/    }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237710,"byte_end":9237718,"line_start":186,"line_end":186,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237723,"byte_end":9237726,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/    for handle in handles {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237731,"byte_end":9237761,"line_start":188,"line_end":188,"column_start":5,"column_end":35}},{"value":"/        assert!(handle.await.unwrap_err().is_cancelled());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237766,"byte_end":9237827,"line_start":189,"line_end":189,"column_start":5,"column_end":66}},{"value":"/    }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237832,"byte_end":9237840,"line_start":190,"line_end":190,"column_start":5,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237845,"byte_end":9237850,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237855,"byte_end":9237862,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5011},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289599,"byte_end":9289606,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":5012},{"krate":0,"index":5013},{"krate":0,"index":5014},{"krate":0,"index":5015},{"krate":0,"index":5016},{"krate":0,"index":5017},{"krate":0,"index":5018},{"krate":0,"index":5019},{"krate":0,"index":5020},{"krate":0,"index":5021},{"krate":0,"index":5022}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9288643,"byte_end":9288701,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9288702,"byte_end":9288705,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9288706,"byte_end":9288778,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9288779,"byte_end":9288827,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9288828,"byte_end":9288831,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new_multi_thread`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9288832,"byte_end":9288909,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ or [`Builder::new_current_thread`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9288910,"byte_end":9288949,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9288950,"byte_end":9288953,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9288954,"byte_end":9289031,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289032,"byte_end":9289045,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289046,"byte_end":9289049,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289050,"byte_end":9289083,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new_multi_thread`]: method@Self::new_multi_thread","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289084,"byte_end":9289148,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ [`Builder::new_current_thread`]: method@Self::new_current_thread","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289149,"byte_end":9289217,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289218,"byte_end":9289221,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289222,"byte_end":9289236,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289237,"byte_end":9289240,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289241,"byte_end":9289248,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289249,"byte_end":9289281,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289282,"byte_end":9289285,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289286,"byte_end":9289301,"line_start":28,"line_end":28,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289302,"byte_end":9289326,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new_multi_thread()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289327,"byte_end":9289376,"line_start":30,"line_end":30,"column_start":1,"column_end":50}},{"value":"/         .worker_threads(4)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289377,"byte_end":9289407,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289408,"byte_end":9289450,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289451,"byte_end":9289498,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289499,"byte_end":9289519,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289520,"byte_end":9289542,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289543,"byte_end":9289546,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289547,"byte_end":9289573,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289574,"byte_end":9289579,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9289580,"byte_end":9289587,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5028},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9290967,"byte_end":9290985,"line_start":89,"line_end":89,"column_start":12,"column_end":30},"name":"new_current_thread","qualname":"<Builder>::new_current_thread","value":"pub fn new_current_thread() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new builder with the current thread scheduler selected.","sig":null,"attributes":[{"value":"/ Returns a new builder with the current thread scheduler selected.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9290812,"byte_end":9290881,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9290886,"byte_end":9290889,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9290894,"byte_end":9290955,"line_start":88,"line_end":88,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5031},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9292856,"byte_end":9292866,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9292363,"byte_end":9292401,"line_start":138,"line_end":138,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9292406,"byte_end":9292409,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9292414,"byte_end":9292485,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9292490,"byte_end":9292566,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9292571,"byte_end":9292625,"line_start":142,"line_end":142,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9292630,"byte_end":9292633,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9292638,"byte_end":9292652,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9292657,"byte_end":9292660,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9292665,"byte_end":9292672,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9292677,"byte_end":9292700,"line_start":147,"line_end":147,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9292705,"byte_end":9292708,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9292713,"byte_end":9292762,"line_start":149,"line_end":149,"column_start":5,"column_end":54}},{"value":"/     .enable_all()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9292767,"byte_end":9292788,"line_start":150,"line_end":150,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9292793,"byte_end":9292809,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9292814,"byte_end":9292832,"line_start":152,"line_end":152,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9292837,"byte_end":9292844,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5032},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294557,"byte_end":9294571,"line_start":212,"line_end":212,"column_start":12,"column_end":26},"name":"worker_threads","qualname":"<Builder>::worker_threads","value":"pub fn worker_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of worker threads the `Runtime` will use.","sig":null,"attributes":[{"value":"/ Sets the number of worker threads the `Runtime` will use.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293094,"byte_end":9293155,"line_start":163,"line_end":163,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293160,"byte_end":9293163,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 0 and 32,768 though it is advised to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293168,"byte_end":9293240,"line_start":165,"line_end":165,"column_start":5,"column_end":77}},{"value":"/ keep this value on the smaller side.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293245,"byte_end":9293285,"line_start":166,"line_end":166,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293290,"byte_end":9293293,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293298,"byte_end":9293311,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293316,"byte_end":9293319,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293324,"byte_end":9293393,"line_start":170,"line_end":170,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293398,"byte_end":9293401,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293406,"byte_end":9293417,"line_start":172,"line_end":172,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293422,"byte_end":9293425,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ When using the `current_thread` runtime this method will panic, since","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293430,"byte_end":9293503,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/ those variants do not allow setting worker thread counts.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293508,"byte_end":9293569,"line_start":175,"line_end":175,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293574,"byte_end":9293577,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293582,"byte_end":9293585,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293590,"byte_end":9293604,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293609,"byte_end":9293612,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ## Multi threaded runtime with 4 threads","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293617,"byte_end":9293661,"line_start":180,"line_end":180,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293666,"byte_end":9293669,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293674,"byte_end":9293681,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293686,"byte_end":9293709,"line_start":183,"line_end":183,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293714,"byte_end":9293717,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ // This will spawn a work-stealing runtime with 4 worker threads.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293722,"byte_end":9293791,"line_start":185,"line_end":185,"column_start":5,"column_end":74}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293796,"byte_end":9293845,"line_start":186,"line_end":186,"column_start":5,"column_end":54}},{"value":"/     .worker_threads(4)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293850,"byte_end":9293876,"line_start":187,"line_end":187,"column_start":5,"column_end":31}},{"value":"/     .build()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293881,"byte_end":9293897,"line_start":188,"line_end":188,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293902,"byte_end":9293920,"line_start":189,"line_end":189,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293925,"byte_end":9293928,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ rt.spawn(async move {});","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293933,"byte_end":9293961,"line_start":191,"line_end":191,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293966,"byte_end":9293973,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293978,"byte_end":9293981,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ## Current thread runtime (will only run on the current thread via `Runtime::block_on`)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9293986,"byte_end":9294077,"line_start":194,"line_end":194,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294082,"byte_end":9294085,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294090,"byte_end":9294097,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294102,"byte_end":9294125,"line_start":197,"line_end":197,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294130,"byte_end":9294133,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ // Create a runtime that _must_ be driven from a call","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294138,"byte_end":9294195,"line_start":199,"line_end":199,"column_start":5,"column_end":62}},{"value":"/ // to `Runtime::block_on`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294200,"byte_end":9294230,"line_start":200,"line_end":200,"column_start":5,"column_end":35}},{"value":"/ let rt = runtime::Builder::new_current_thread()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294235,"byte_end":9294286,"line_start":201,"line_end":201,"column_start":5,"column_end":56}},{"value":"/     .build()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294291,"byte_end":9294307,"line_start":202,"line_end":202,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294312,"byte_end":9294330,"line_start":203,"line_end":203,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294335,"byte_end":9294338,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ // This will run the runtime and future on the current thread","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294343,"byte_end":9294408,"line_start":205,"line_end":205,"column_start":5,"column_end":70}},{"value":"/ rt.block_on(async move {});","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294413,"byte_end":9294444,"line_start":206,"line_end":206,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294449,"byte_end":9294456,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294461,"byte_end":9294464,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294469,"byte_end":9294480,"line_start":209,"line_end":209,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294485,"byte_end":9294488,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294493,"byte_end":9294545,"line_start":211,"line_end":211,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5033},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295203,"byte_end":9295223,"line_start":231,"line_end":231,"column_start":12,"column_end":32},"name":"max_blocking_threads","qualname":"<Builder>::max_blocking_threads","value":"pub fn max_blocking_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads spawned by the Runtime used for blocking operations.","sig":null,"attributes":[{"value":"/ Specifies limit for threads spawned by the Runtime used for blocking operations.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294738,"byte_end":9294822,"line_start":218,"line_end":218,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294827,"byte_end":9294830,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294835,"byte_end":9294838,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `worker_threads`, this number should be between 1 and 32,768.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294843,"byte_end":9294925,"line_start":221,"line_end":221,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294930,"byte_end":9294933,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294938,"byte_end":9294967,"line_start":223,"line_end":223,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294972,"byte_end":9294975,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `worker_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9294980,"byte_end":9295071,"line_start":225,"line_end":225,"column_start":5,"column_end":96}},{"value":"/ blocking annotations).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295076,"byte_end":9295102,"line_start":226,"line_end":226,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295107,"byte_end":9295110,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295115,"byte_end":9295126,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295131,"byte_end":9295134,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295139,"byte_end":9295191,"line_start":230,"line_end":230,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5034},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295779,"byte_end":9295790,"line_start":252,"line_end":252,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295396,"byte_end":9295460,"line_start":237,"line_end":237,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295465,"byte_end":9295468,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295473,"byte_end":9295520,"line_start":239,"line_end":239,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295525,"byte_end":9295528,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295533,"byte_end":9295547,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295552,"byte_end":9295555,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295560,"byte_end":9295567,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295572,"byte_end":9295597,"line_start":244,"line_end":244,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295602,"byte_end":9295605,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295610,"byte_end":9295631,"line_start":246,"line_end":246,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295636,"byte_end":9295685,"line_start":247,"line_end":247,"column_start":5,"column_end":54}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295690,"byte_end":9295721,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295726,"byte_end":9295743,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295748,"byte_end":9295755,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295760,"byte_end":9295767,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5037},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296639,"byte_end":9296653,"line_start":278,"line_end":278,"column_start":12,"column_end":26},"name":"thread_name_fn","qualname":"<Builder>::thread_name_fn","value":"pub fn thread_name_fn<F>(&mut Self, F) -> &mut Self where F: Fn() -> String +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9295964,"byte_end":9296060,"line_start":258,"line_end":258,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296065,"byte_end":9296068,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ The default name fn is `|| \"tokio-runtime-worker\".into()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296073,"byte_end":9296135,"line_start":260,"line_end":260,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296140,"byte_end":9296143,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296148,"byte_end":9296162,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296167,"byte_end":9296170,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296175,"byte_end":9296182,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296187,"byte_end":9296212,"line_start":265,"line_end":265,"column_start":5,"column_end":30}},{"value":"/ # use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296217,"byte_end":9296270,"line_start":266,"line_end":266,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296275,"byte_end":9296278,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296283,"byte_end":9296304,"line_start":268,"line_end":268,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296309,"byte_end":9296358,"line_start":269,"line_end":269,"column_start":5,"column_end":54}},{"value":"/     .thread_name_fn(|| {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296363,"byte_end":9296391,"line_start":270,"line_end":270,"column_start":5,"column_end":33}},{"value":"/        static ATOMIC_ID: AtomicUsize = AtomicUsize::new(0);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296396,"byte_end":9296459,"line_start":271,"line_end":271,"column_start":5,"column_end":68}},{"value":"/        let id = ATOMIC_ID.fetch_add(1, Ordering::SeqCst);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296464,"byte_end":9296525,"line_start":272,"line_end":272,"column_start":5,"column_end":66}},{"value":"/        format!(\"my-pool-{}\", id)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296530,"byte_end":9296566,"line_start":273,"line_end":273,"column_start":5,"column_end":41}},{"value":"/     })","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296571,"byte_end":9296581,"line_start":274,"line_end":274,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296586,"byte_end":9296603,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296608,"byte_end":9296615,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296620,"byte_end":9296627,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5039},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297418,"byte_end":9297435,"line_start":305,"line_end":305,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296829,"byte_end":9296883,"line_start":286,"line_end":286,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296888,"byte_end":9296891,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296896,"byte_end":9296968,"line_start":288,"line_end":288,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9296973,"byte_end":9297006,"line_start":289,"line_end":289,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297011,"byte_end":9297014,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297019,"byte_end":9297087,"line_start":291,"line_end":291,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297092,"byte_end":9297153,"line_start":292,"line_end":292,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297158,"byte_end":9297161,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297166,"byte_end":9297180,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297185,"byte_end":9297188,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297193,"byte_end":9297200,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297205,"byte_end":9297230,"line_start":297,"line_end":297,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297235,"byte_end":9297238,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297243,"byte_end":9297264,"line_start":299,"line_end":299,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297269,"byte_end":9297318,"line_start":300,"line_end":300,"column_start":5,"column_end":54}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297323,"byte_end":9297360,"line_start":301,"line_end":301,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297365,"byte_end":9297382,"line_start":302,"line_end":302,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297387,"byte_end":9297394,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297399,"byte_end":9297406,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5040},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298055,"byte_end":9298070,"line_start":329,"line_end":329,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297542,"byte_end":9297617,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297622,"byte_end":9297637,"line_start":311,"line_end":311,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297642,"byte_end":9297645,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297650,"byte_end":9297712,"line_start":313,"line_end":313,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297717,"byte_end":9297720,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297725,"byte_end":9297739,"line_start":315,"line_end":315,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297744,"byte_end":9297747,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297752,"byte_end":9297759,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297764,"byte_end":9297789,"line_start":318,"line_end":318,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297794,"byte_end":9297797,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297802,"byte_end":9297823,"line_start":320,"line_end":320,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297828,"byte_end":9297882,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297887,"byte_end":9297916,"line_start":322,"line_end":322,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297921,"byte_end":9297960,"line_start":323,"line_end":323,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297965,"byte_end":9297975,"line_start":324,"line_end":324,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9297980,"byte_end":9297997,"line_start":325,"line_end":325,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298002,"byte_end":9298009,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298014,"byte_end":9298021,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298026,"byte_end":9298043,"line_start":328,"line_end":328,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5042},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298711,"byte_end":9298725,"line_start":355,"line_end":355,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298242,"byte_end":9298293,"line_start":337,"line_end":337,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298298,"byte_end":9298301,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298306,"byte_end":9298368,"line_start":339,"line_end":339,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298373,"byte_end":9298376,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298381,"byte_end":9298395,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298400,"byte_end":9298403,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298408,"byte_end":9298415,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298420,"byte_end":9298445,"line_start":344,"line_end":344,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298450,"byte_end":9298453,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298458,"byte_end":9298479,"line_start":346,"line_end":346,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298484,"byte_end":9298538,"line_start":347,"line_end":347,"column_start":5,"column_end":59}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298543,"byte_end":9298571,"line_start":348,"line_end":348,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298576,"byte_end":9298616,"line_start":349,"line_end":349,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298621,"byte_end":9298631,"line_start":350,"line_end":350,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298636,"byte_end":9298653,"line_start":351,"line_end":351,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298658,"byte_end":9298665,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298670,"byte_end":9298677,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298682,"byte_end":9298699,"line_start":354,"line_end":354,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5044},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9299289,"byte_end":9299294,"line_start":378,"line_end":378,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298897,"byte_end":9298934,"line_start":363,"line_end":363,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298939,"byte_end":9298942,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The returned `Runtime` instance is ready to spawn tasks.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9298947,"byte_end":9299007,"line_start":365,"line_end":365,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9299012,"byte_end":9299015,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9299020,"byte_end":9299034,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9299039,"byte_end":9299042,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9299047,"byte_end":9299054,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9299059,"byte_end":9299091,"line_start":370,"line_end":370,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9299096,"byte_end":9299099,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let rt  = Builder::new_multi_thread().build().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9299104,"byte_end":9299163,"line_start":372,"line_end":372,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9299168,"byte_end":9299171,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9299176,"byte_end":9299199,"line_start":374,"line_end":374,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9299204,"byte_end":9299253,"line_start":375,"line_end":375,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9299258,"byte_end":9299265,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9299270,"byte_end":9299277,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5046},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9300473,"byte_end":9300490,"line_start":416,"line_end":416,"column_start":12,"column_end":29},"name":"thread_keep_alive","qualname":"<Builder>::thread_keep_alive","value":"pub fn thread_keep_alive(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom timeout for a thread in the blocking pool.","sig":null,"attributes":[{"value":"/ Sets a custom timeout for a thread in the blocking pool.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9299964,"byte_end":9300024,"line_start":399,"line_end":399,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9300029,"byte_end":9300032,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ By default, the timeout for a thread is set to 10 seconds. This can","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9300037,"byte_end":9300108,"line_start":401,"line_end":401,"column_start":5,"column_end":76}},{"value":"/ be overriden using .thread_keep_alive().","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9300113,"byte_end":9300157,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9300162,"byte_end":9300165,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9300170,"byte_end":9300183,"line_start":404,"line_end":404,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9300188,"byte_end":9300191,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9300196,"byte_end":9300203,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9300208,"byte_end":9300233,"line_start":407,"line_end":407,"column_start":5,"column_end":30}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9300238,"byte_end":9300268,"line_start":408,"line_end":408,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9300273,"byte_end":9300276,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9300281,"byte_end":9300302,"line_start":410,"line_end":410,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9300307,"byte_end":9300356,"line_start":411,"line_end":411,"column_start":5,"column_end":54}},{"value":"/     .thread_keep_alive(Duration::from_millis(100))","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9300361,"byte_end":9300415,"line_start":412,"line_end":412,"column_start":5,"column_end":59}},{"value":"/     .build();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9300420,"byte_end":9300437,"line_start":413,"line_end":413,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9300442,"byte_end":9300449,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9300454,"byte_end":9300461,"line_start":415,"line_end":415,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5155},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9302237,"byte_end":9302246,"line_start":469,"line_end":469,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5157},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9302770,"byte_end":9302781,"line_start":492,"line_end":492,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5159},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9303442,"byte_end":9303454,"line_start":517,"line_end":517,"column_start":16,"column_end":28},"name":"start_paused","qualname":"<Builder>::start_paused","value":"pub fn start_paused(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Controls if the runtime's clock starts paused or advancing.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5197},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9313709,"byte_end":9313715,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":5198},{"krate":0,"index":5199},{"krate":0,"index":5200},{"krate":0,"index":5201},{"krate":0,"index":5202},{"krate":0,"index":5203}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9313440,"byte_end":9313466,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9313467,"byte_end":9313470,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9313471,"byte_end":9313559,"line_start":11,"line_end":11,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9313560,"byte_end":9313610,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9313611,"byte_end":9313614,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9313615,"byte_end":9313673,"line_start":14,"line_end":14,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":5208},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9314402,"byte_end":9314412,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"EnterGuard","qualname":"::runtime::handle::EnterGuard","value":"EnterGuard {  }","parent":null,"children":[{"krate":0,"index":5210},{"krate":0,"index":5211}],"decl_id":null,"docs":" Runtime context guard.","sig":null,"attributes":[{"value":"/ Runtime context guard.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9314166,"byte_end":9314192,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9314193,"byte_end":9314196,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Returned by [`Runtime::enter`] and [`Handle::enter`], the context guard exits","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9314197,"byte_end":9314278,"line_start":37,"line_end":37,"column_start":1,"column_end":82}},{"value":"/ the runtime context on drop.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9314279,"byte_end":9314311,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9314312,"byte_end":9314315,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9314316,"byte_end":9314373,"line_start":40,"line_end":40,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5108},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9314886,"byte_end":9314891,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Sleep`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9314496,"byte_end":9314571,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Sleep`] or [`TcpStream`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9314576,"byte_end":9314654,"line_start":49,"line_end":49,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9314659,"byte_end":9314727,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9314732,"byte_end":9314735,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ [`Sleep`]: struct@crate::time::Sleep","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9314740,"byte_end":9314780,"line_start":52,"line_end":52,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9314785,"byte_end":9314832,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9314837,"byte_end":9314874,"line_start":54,"line_end":54,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5109},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316385,"byte_end":9316392,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315036,"byte_end":9315100,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315105,"byte_end":9315108,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315113,"byte_end":9315124,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315129,"byte_end":9315132,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315137,"byte_end":9315231,"line_start":66,"line_end":66,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315236,"byte_end":9315328,"line_start":67,"line_end":67,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315333,"byte_end":9315409,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315414,"byte_end":9315417,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315422,"byte_end":9315436,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315441,"byte_end":9315444,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315449,"byte_end":9315531,"line_start":72,"line_end":72,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315536,"byte_end":9315582,"line_start":73,"line_end":73,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315587,"byte_end":9315590,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315595,"byte_end":9315602,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315607,"byte_end":9315629,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315634,"byte_end":9315668,"line_start":77,"line_end":77,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315673,"byte_end":9315689,"line_start":78,"line_end":78,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315694,"byte_end":9315733,"line_start":79,"line_end":79,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315738,"byte_end":9315760,"line_start":80,"line_end":80,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315765,"byte_end":9315796,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315801,"byte_end":9315804,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315809,"byte_end":9315850,"line_start":83,"line_end":83,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315855,"byte_end":9315890,"line_start":84,"line_end":84,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315895,"byte_end":9315919,"line_start":85,"line_end":85,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315924,"byte_end":9315980,"line_start":86,"line_end":86,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315985,"byte_end":9315992,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9315997,"byte_end":9316000,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316005,"byte_end":9316023,"line_start":89,"line_end":89,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316028,"byte_end":9316055,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316060,"byte_end":9316145,"line_start":91,"line_end":91,"column_start":5,"column_end":90}},{"value":"/     handle.spawn(async { /* ... */ })","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316150,"byte_end":9316191,"line_start":92,"line_end":92,"column_start":5,"column_end":46}},{"value":"/     // This next line would cause a panic","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316196,"byte_end":9316241,"line_start":93,"line_end":93,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316246,"byte_end":9316289,"line_start":94,"line_end":94,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316294,"byte_end":9316301,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316306,"byte_end":9316335,"line_start":96,"line_end":96,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316340,"byte_end":9316349,"line_start":97,"line_end":97,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316354,"byte_end":9316361,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316366,"byte_end":9316373,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5110},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316666,"byte_end":9316677,"line_start":109,"line_end":109,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316473,"byte_end":9316533,"line_start":104,"line_end":104,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316538,"byte_end":9316541,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316546,"byte_end":9316597,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316602,"byte_end":9316605,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316610,"byte_end":9316654,"line_start":108,"line_end":108,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5111},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317632,"byte_end":9317637,"line_start":141,"line_end":141,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316780,"byte_end":9316822,"line_start":113,"line_end":113,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316827,"byte_end":9316830,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316835,"byte_end":9316906,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316911,"byte_end":9316986,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9316991,"byte_end":9317014,"line_start":117,"line_end":117,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317019,"byte_end":9317022,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317027,"byte_end":9317086,"line_start":119,"line_end":119,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317091,"byte_end":9317094,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317099,"byte_end":9317120,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317125,"byte_end":9317128,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317133,"byte_end":9317147,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317152,"byte_end":9317155,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317160,"byte_end":9317167,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317172,"byte_end":9317204,"line_start":126,"line_end":126,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317209,"byte_end":9317212,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317217,"byte_end":9317233,"line_start":128,"line_end":128,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317238,"byte_end":9317263,"line_start":129,"line_end":129,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317268,"byte_end":9317305,"line_start":130,"line_end":130,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317310,"byte_end":9317347,"line_start":131,"line_end":131,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317352,"byte_end":9317381,"line_start":132,"line_end":132,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317386,"byte_end":9317389,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime using the handle","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317394,"byte_end":9317449,"line_start":134,"line_end":134,"column_start":5,"column_end":60}},{"value":"/ handle.spawn(async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317454,"byte_end":9317478,"line_start":135,"line_end":135,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317483,"byte_end":9317534,"line_start":136,"line_end":136,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317539,"byte_end":9317546,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317551,"byte_end":9317558,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317563,"byte_end":9317570,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317606,"byte_end":9317618,"line_start":140,"line_end":140,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5113},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9318540,"byte_end":9318554,"line_start":171,"line_end":171,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run the provided function on an executor dedicated to blocking\n operations.","sig":null,"attributes":[{"value":"/ Run the provided function on an executor dedicated to blocking","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9317937,"byte_end":9318003,"line_start":151,"line_end":151,"column_start":5,"column_end":71}},{"value":"/ operations.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9318008,"byte_end":9318023,"line_start":152,"line_end":152,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9318028,"byte_end":9318031,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9318036,"byte_end":9318050,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9318055,"byte_end":9318058,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9318063,"byte_end":9318070,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9318075,"byte_end":9318107,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9318112,"byte_end":9318115,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9318120,"byte_end":9318136,"line_start":159,"line_end":159,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9318141,"byte_end":9318166,"line_start":160,"line_end":160,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9318171,"byte_end":9318208,"line_start":161,"line_end":161,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9318213,"byte_end":9318250,"line_start":162,"line_end":162,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9318255,"byte_end":9318284,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9318289,"byte_end":9318292,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Spawn a blocking function onto the runtime using the handle","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9318297,"byte_end":9318363,"line_start":165,"line_end":165,"column_start":5,"column_end":71}},{"value":"/ handle.spawn_blocking(|| {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9318368,"byte_end":9318398,"line_start":166,"line_end":166,"column_start":5,"column_end":35}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9318403,"byte_end":9318454,"line_start":167,"line_end":167,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9318459,"byte_end":9318466,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9318471,"byte_end":9318478,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9318514,"byte_end":9318526,"line_start":170,"line_end":170,"column_start":36,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5116},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9319823,"byte_end":9319838,"line_start":207,"line_end":207,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9319743,"byte_end":9319811,"line_start":206,"line_end":206,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":5245},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9181181,"byte_end":9181188,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":5246},{"krate":0,"index":5247},{"krate":0,"index":5248}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5234},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9183812,"byte_end":9183818,"line_start":342,"line_end":342,"column_start":16,"column_end":22},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5235},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9184742,"byte_end":9184747,"line_start":372,"line_end":372,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9184712,"byte_end":9184724,"line_start":371,"line_end":371,"column_start":40,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5237},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9185520,"byte_end":9185534,"line_start":397,"line_end":397,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Runtime>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run the provided function on an executor dedicated to blocking operations.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9185490,"byte_end":9185502,"line_start":396,"line_end":396,"column_start":40,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5240},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9187459,"byte_end":9187467,"line_start":446,"line_end":446,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the\n runtime's entry point.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5242},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9188955,"byte_end":9188960,"line_start":488,"line_end":488,"column_start":16,"column_end":21},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5243},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9190530,"byte_end":9190546,"line_start":527,"line_end":527,"column_start":16,"column_end":32},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5244},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9191975,"byte_end":9191994,"line_start":559,"line_end":559,"column_start":16,"column_end":35},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5287},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":5288},{"krate":0,"index":5298},{"krate":0,"index":5299},{"krate":0,"index":5300},{"krate":0,"index":5301},{"krate":0,"index":5464},{"krate":0,"index":5870},{"krate":0,"index":5960},{"krate":0,"index":5961},{"krate":0,"index":5962},{"krate":0,"index":5963},{"krate":0,"index":13294},{"krate":0,"index":5964},{"krate":0,"index":5965},{"krate":0,"index":6024},{"krate":0,"index":6025},{"krate":0,"index":6140},{"krate":0,"index":6233},{"krate":0,"index":6234},{"krate":0,"index":6235},{"krate":0,"index":6236},{"krate":0,"index":6270},{"krate":0,"index":6271},{"krate":0,"index":6272},{"krate":0,"index":6273},{"krate":0,"index":6274},{"krate":0,"index":6379},{"krate":0,"index":6380},{"krate":0,"index":6381},{"krate":0,"index":6382},{"krate":0,"index":6383},{"krate":0,"index":6428},{"krate":0,"index":6429}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9321376,"byte_end":9321440,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9321441,"byte_end":9321444,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9321445,"byte_end":9321520,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9321521,"byte_end":9321601,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9321602,"byte_end":9321681,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9321682,"byte_end":9321716,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9321717,"byte_end":9321720,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9321721,"byte_end":9321745,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9321746,"byte_end":9321749,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9321750,"byte_end":9321771,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9321772,"byte_end":9321775,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9321776,"byte_end":9321849,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9321850,"byte_end":9321929,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9321930,"byte_end":9321999,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322000,"byte_end":9322003,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322004,"byte_end":9322083,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322084,"byte_end":9322161,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322162,"byte_end":9322237,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322238,"byte_end":9322310,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322311,"byte_end":9322383,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports multiple consumers, many different separate tasks may **receive**","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322384,"byte_end":9322462,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ messages.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322463,"byte_end":9322476,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322477,"byte_end":9322480,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322481,"byte_end":9322559,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322560,"byte_end":9322621,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322622,"byte_end":9322625,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322626,"byte_end":9322650,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322651,"byte_end":9322654,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322655,"byte_end":9322734,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322735,"byte_end":9322813,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322814,"byte_end":9322858,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322859,"byte_end":9322862,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322863,"byte_end":9322943,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322944,"byte_end":9322960,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322961,"byte_end":9322964,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322965,"byte_end":9322972,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9322973,"byte_end":9323002,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323003,"byte_end":9323006,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323007,"byte_end":9323050,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323051,"byte_end":9323113,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323114,"byte_end":9323119,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323120,"byte_end":9323123,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323124,"byte_end":9323142,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323143,"byte_end":9323164,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323165,"byte_end":9323207,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323208,"byte_end":9323211,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323212,"byte_end":9323245,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323246,"byte_end":9323293,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323294,"byte_end":9323328,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323329,"byte_end":9323340,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323341,"byte_end":9323344,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323345,"byte_end":9323422,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323423,"byte_end":9323426,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323427,"byte_end":9323469,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323470,"byte_end":9323506,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323507,"byte_end":9323512,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323513,"byte_end":9323520,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323521,"byte_end":9323524,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323525,"byte_end":9323589,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323590,"byte_end":9323654,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323655,"byte_end":9323717,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323718,"byte_end":9323788,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323789,"byte_end":9323854,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323855,"byte_end":9323865,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323866,"byte_end":9323869,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323870,"byte_end":9323886,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323887,"byte_end":9323890,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323891,"byte_end":9323898,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323899,"byte_end":9323942,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323943,"byte_end":9323994,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9323995,"byte_end":9324000,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324001,"byte_end":9324004,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324005,"byte_end":9324023,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324024,"byte_end":9324045,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324046,"byte_end":9324097,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324098,"byte_end":9324134,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324135,"byte_end":9324146,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324147,"byte_end":9324150,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324151,"byte_end":9324228,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324229,"byte_end":9324232,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324233,"byte_end":9324275,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324276,"byte_end":9324321,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324322,"byte_end":9324327,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324328,"byte_end":9324335,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324336,"byte_end":9324339,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324340,"byte_end":9324362,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324363,"byte_end":9324406,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324407,"byte_end":9324410,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324411,"byte_end":9324432,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324433,"byte_end":9324436,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324437,"byte_end":9324514,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324515,"byte_end":9324595,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324596,"byte_end":9324651,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324652,"byte_end":9324655,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324656,"byte_end":9324734,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324735,"byte_end":9324755,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324756,"byte_end":9324759,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324760,"byte_end":9324767,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324768,"byte_end":9324794,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324795,"byte_end":9324798,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324799,"byte_end":9324852,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324853,"byte_end":9324907,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324908,"byte_end":9324913,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324914,"byte_end":9324917,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324918,"byte_end":9324936,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324937,"byte_end":9324958,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9324959,"byte_end":9325005,"line_start":109,"line_end":109,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325006,"byte_end":9325009,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325010,"byte_end":9325043,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325044,"byte_end":9325072,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325073,"byte_end":9325125,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325126,"byte_end":9325170,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325171,"byte_end":9325184,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325185,"byte_end":9325196,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325197,"byte_end":9325200,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325201,"byte_end":9325248,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325249,"byte_end":9325287,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325288,"byte_end":9325297,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325298,"byte_end":9325303,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325304,"byte_end":9325311,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325312,"byte_end":9325315,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325316,"byte_end":9325396,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325397,"byte_end":9325474,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325475,"byte_end":9325548,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325549,"byte_end":9325624,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325625,"byte_end":9325638,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325639,"byte_end":9325642,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325643,"byte_end":9325718,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325719,"byte_end":9325798,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325799,"byte_end":9325877,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325878,"byte_end":9325957,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9325958,"byte_end":9326038,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326039,"byte_end":9326104,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326105,"byte_end":9326108,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326109,"byte_end":9326189,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326190,"byte_end":9326202,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326203,"byte_end":9326206,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326207,"byte_end":9326220,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326221,"byte_end":9326262,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326263,"byte_end":9326293,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326294,"byte_end":9326320,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326321,"byte_end":9326324,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326325,"byte_end":9326343,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326344,"byte_end":9326383,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326384,"byte_end":9326459,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326460,"byte_end":9326506,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326507,"byte_end":9326510,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326511,"byte_end":9326535,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326536,"byte_end":9326615,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326616,"byte_end":9326647,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let tx = tx.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326648,"byte_end":9326680,"line_start":153,"line_end":153,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326681,"byte_end":9326684,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326685,"byte_end":9326722,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326723,"byte_end":9326785,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326786,"byte_end":9326801,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326802,"byte_end":9326811,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326812,"byte_end":9326815,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326816,"byte_end":9326895,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326896,"byte_end":9326971,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9326972,"byte_end":9327050,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327051,"byte_end":9327098,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327099,"byte_end":9327116,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327117,"byte_end":9327120,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327121,"byte_end":9327168,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327169,"byte_end":9327210,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327211,"byte_end":9327220,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327221,"byte_end":9327224,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327225,"byte_end":9327239,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327240,"byte_end":9327245,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327246,"byte_end":9327253,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327254,"byte_end":9327257,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327258,"byte_end":9327333,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327334,"byte_end":9327409,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327410,"byte_end":9327489,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327490,"byte_end":9327555,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327556,"byte_end":9327633,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327634,"byte_end":9327637,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327638,"byte_end":9327716,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327717,"byte_end":9327797,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327798,"byte_end":9327843,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327844,"byte_end":9327847,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327848,"byte_end":9327855,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327856,"byte_end":9327893,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327894,"byte_end":9327921,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327922,"byte_end":9327925,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327926,"byte_end":9327944,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327945,"byte_end":9327963,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9327964,"byte_end":9328007,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328008,"byte_end":9328013,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328014,"byte_end":9328017,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328018,"byte_end":9328036,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328037,"byte_end":9328058,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328059,"byte_end":9328148,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328149,"byte_end":9328152,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328153,"byte_end":9328198,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328199,"byte_end":9328232,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328233,"byte_end":9328270,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328271,"byte_end":9328274,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328275,"byte_end":9328342,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328343,"byte_end":9328370,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328371,"byte_end":9328405,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328406,"byte_end":9328449,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328450,"byte_end":9328487,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328488,"byte_end":9328541,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328542,"byte_end":9328563,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328564,"byte_end":9328581,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328582,"byte_end":9328595,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328596,"byte_end":9328607,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328608,"byte_end":9328611,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328612,"byte_end":9328650,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328651,"byte_end":9328654,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328655,"byte_end":9328715,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328716,"byte_end":9328740,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let cmd_tx = cmd_tx.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328741,"byte_end":9328781,"line_start":216,"line_end":216,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328782,"byte_end":9328785,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328786,"byte_end":9328841,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328842,"byte_end":9328902,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328903,"byte_end":9328906,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328907,"byte_end":9328977,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9328978,"byte_end":9329027,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329028,"byte_end":9329031,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329032,"byte_end":9329085,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329086,"byte_end":9329102,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329103,"byte_end":9329112,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329113,"byte_end":9329116,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329117,"byte_end":9329158,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329159,"byte_end":9329210,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329211,"byte_end":9329250,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329251,"byte_end":9329260,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329261,"byte_end":9329266,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329267,"byte_end":9329274,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329275,"byte_end":9329278,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329279,"byte_end":9329295,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329296,"byte_end":9329299,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329300,"byte_end":9329326,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329327,"byte_end":9329330,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329331,"byte_end":9329398,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329399,"byte_end":9329471,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329472,"byte_end":9329545,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329546,"byte_end":9329599,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329600,"byte_end":9329603,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329604,"byte_end":9329684,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329685,"byte_end":9329707,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329708,"byte_end":9329711,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329712,"byte_end":9329727,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329728,"byte_end":9329731,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329732,"byte_end":9329739,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329740,"byte_end":9329771,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329772,"byte_end":9329775,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329776,"byte_end":9329794,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329795,"byte_end":9329816,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329817,"byte_end":9329868,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329869,"byte_end":9329906,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329907,"byte_end":9329910,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329911,"byte_end":9329944,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9329945,"byte_end":9329999,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330000,"byte_end":9330054,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330055,"byte_end":9330066,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330067,"byte_end":9330070,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330071,"byte_end":9330104,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330105,"byte_end":9330159,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330160,"byte_end":9330214,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330215,"byte_end":9330226,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330227,"byte_end":9330230,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330231,"byte_end":9330260,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330261,"byte_end":9330290,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330291,"byte_end":9330296,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330297,"byte_end":9330304,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330305,"byte_end":9330308,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330309,"byte_end":9330358,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330359,"byte_end":9330362,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330363,"byte_end":9330385,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330386,"byte_end":9330389,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330390,"byte_end":9330466,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330467,"byte_end":9330545,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330546,"byte_end":9330625,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330626,"byte_end":9330691,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330692,"byte_end":9330695,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330696,"byte_end":9330776,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330777,"byte_end":9330780,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330781,"byte_end":9330855,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330856,"byte_end":9330929,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330930,"byte_end":9330943,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330944,"byte_end":9330947,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9330948,"byte_end":9331021,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331022,"byte_end":9331102,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331103,"byte_end":9331178,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331179,"byte_end":9331182,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331183,"byte_end":9331190,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331191,"byte_end":9331218,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331219,"byte_end":9331266,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331267,"byte_end":9331270,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331271,"byte_end":9331287,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331288,"byte_end":9331291,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331292,"byte_end":9331334,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331335,"byte_end":9331354,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331355,"byte_end":9331381,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331382,"byte_end":9331387,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331388,"byte_end":9331391,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331392,"byte_end":9331409,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331410,"byte_end":9331467,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331468,"byte_end":9331526,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331527,"byte_end":9331579,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331580,"byte_end":9331589,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331590,"byte_end":9331595,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331596,"byte_end":9331599,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331600,"byte_end":9331635,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331636,"byte_end":9331664,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331665,"byte_end":9331670,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331671,"byte_end":9331674,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331675,"byte_end":9331693,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331694,"byte_end":9331715,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331716,"byte_end":9331759,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331760,"byte_end":9331825,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331826,"byte_end":9331829,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331830,"byte_end":9331908,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331909,"byte_end":9331963,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331964,"byte_end":9331967,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9331968,"byte_end":9332012,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332013,"byte_end":9332046,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332047,"byte_end":9332065,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332066,"byte_end":9332115,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::sleep(Duration::from_secs(10)).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332116,"byte_end":9332175,"line_start":325,"line_end":325,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332176,"byte_end":9332179,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332180,"byte_end":9332226,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332227,"byte_end":9332300,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332301,"byte_end":9332304,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332305,"byte_end":9332379,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332380,"byte_end":9332420,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332421,"byte_end":9332462,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.send(new_config.clone()).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332463,"byte_end":9332520,"line_start":333,"line_end":333,"column_start":1,"column_end":58}},{"value":"/                 config = new_config;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332521,"byte_end":9332561,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332562,"byte_end":9332579,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332580,"byte_end":9332593,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332594,"byte_end":9332605,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332606,"byte_end":9332609,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332610,"byte_end":9332643,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332644,"byte_end":9332647,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332648,"byte_end":9332726,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332727,"byte_end":9332781,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332782,"byte_end":9332792,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332793,"byte_end":9332870,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332871,"byte_end":9332949,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332950,"byte_end":9332985,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9332986,"byte_end":9333009,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333010,"byte_end":9333073,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333074,"byte_end":9333110,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333111,"byte_end":9333114,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333115,"byte_end":9333165,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333166,"byte_end":9333245,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333246,"byte_end":9333321,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333322,"byte_end":9333375,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333376,"byte_end":9333422,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333423,"byte_end":9333455,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333456,"byte_end":9333459,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Get the initial config value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333460,"byte_end":9333507,"line_start":358,"line_end":358,"column_start":1,"column_end":48}},{"value":"/             let mut conf = rx.borrow().clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333508,"byte_end":9333559,"line_start":359,"line_end":359,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333560,"byte_end":9333563,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333564,"byte_end":9333614,"line_start":361,"line_end":361,"column_start":1,"column_end":51}},{"value":"/             let sleep = time::sleep_until(op_start + conf.timeout);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333615,"byte_end":9333686,"line_start":362,"line_end":362,"column_start":1,"column_end":72}},{"value":"/             tokio::pin!(sleep);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333687,"byte_end":9333722,"line_start":363,"line_end":363,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333723,"byte_end":9333726,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333727,"byte_end":9333749,"line_start":365,"line_end":365,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333750,"byte_end":9333786,"line_start":366,"line_end":366,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut sleep => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333787,"byte_end":9333830,"line_start":367,"line_end":367,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333831,"byte_end":9333895,"line_start":368,"line_end":368,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333896,"byte_end":9333953,"line_start":369,"line_end":369,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333954,"byte_end":9333957,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9333958,"byte_end":9334013,"line_start":371,"line_end":371,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334014,"byte_end":9334068,"line_start":372,"line_end":372,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334069,"byte_end":9334072,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334073,"byte_end":9334123,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/                         sleep.set(time::sleep_until(op_start + conf.timeout));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334124,"byte_end":9334206,"line_start":375,"line_end":375,"column_start":1,"column_end":83}},{"value":"/                     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334207,"byte_end":9334232,"line_start":376,"line_end":376,"column_start":1,"column_end":26}},{"value":"/                     _ = rx.changed() => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334233,"byte_end":9334278,"line_start":377,"line_end":377,"column_start":1,"column_end":46}},{"value":"/                         conf = rx.borrow().clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334279,"byte_end":9334334,"line_start":378,"line_end":378,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334335,"byte_end":9334338,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334339,"byte_end":9334416,"line_start":380,"line_end":380,"column_start":1,"column_end":78}},{"value":"/                         // `sleep` using the new `timeout` value.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334417,"byte_end":9334486,"line_start":381,"line_end":381,"column_start":1,"column_end":70}},{"value":"/                         sleep.as_mut().reset(op_start + conf.timeout);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334487,"byte_end":9334561,"line_start":382,"line_end":382,"column_start":1,"column_end":75}},{"value":"/                     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334562,"byte_end":9334587,"line_start":383,"line_end":383,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334588,"byte_end":9334628,"line_start":384,"line_end":384,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334629,"byte_end":9334684,"line_start":385,"line_end":385,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334685,"byte_end":9334719,"line_start":386,"line_end":386,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334720,"byte_end":9334745,"line_start":387,"line_end":387,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334746,"byte_end":9334767,"line_start":388,"line_end":388,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334768,"byte_end":9334785,"line_start":389,"line_end":389,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334786,"byte_end":9334801,"line_start":390,"line_end":390,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334802,"byte_end":9334805,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334806,"byte_end":9334839,"line_start":392,"line_end":392,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334840,"byte_end":9334849,"line_start":393,"line_end":393,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334850,"byte_end":9334853,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334854,"byte_end":9334895,"line_start":395,"line_end":395,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334896,"byte_end":9334930,"line_start":396,"line_end":396,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334931,"byte_end":9334940,"line_start":397,"line_end":397,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334941,"byte_end":9334946,"line_start":398,"line_end":398,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334947,"byte_end":9334954,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334955,"byte_end":9334958,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: mod@crate::sync::watch","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9334959,"byte_end":9335004,"line_start":401,"line_end":401,"column_start":1,"column_end":46}},{"value":"/ [`broadcast` channel]: mod@crate::sync::broadcast","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335005,"byte_end":9335058,"line_start":402,"line_end":402,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335059,"byte_end":9335062,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335063,"byte_end":9335090,"line_start":404,"line_end":404,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335091,"byte_end":9335094,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335095,"byte_end":9335169,"line_start":406,"line_end":406,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335170,"byte_end":9335244,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts but will wait","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335245,"byte_end":9335315,"line_start":408,"line_end":408,"column_start":1,"column_end":71}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335316,"byte_end":9335366,"line_start":409,"line_end":409,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335367,"byte_end":9335370,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335371,"byte_end":9335448,"line_start":411,"line_end":411,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335449,"byte_end":9335526,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335527,"byte_end":9335530,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335531,"byte_end":9335608,"line_start":414,"line_end":414,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335609,"byte_end":9335664,"line_start":415,"line_end":415,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335665,"byte_end":9335668,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335669,"byte_end":9335748,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335749,"byte_end":9335827,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335828,"byte_end":9335853,"line_start":419,"line_end":419,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335854,"byte_end":9335857,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335858,"byte_end":9335933,"line_start":421,"line_end":421,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9335934,"byte_end":9336010,"line_start":422,"line_end":422,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336011,"byte_end":9336078,"line_start":423,"line_end":423,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336079,"byte_end":9336082,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336083,"byte_end":9336159,"line_start":425,"line_end":425,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336160,"byte_end":9336236,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336237,"byte_end":9336311,"line_start":427,"line_end":427,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336312,"byte_end":9336339,"line_start":428,"line_end":428,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6482},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338648,"byte_end":9338655,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":6483},{"krate":0,"index":6484},{"krate":0,"index":6485}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9337695,"byte_end":9337783,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9337784,"byte_end":9337787,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9337788,"byte_end":9337795,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9337796,"byte_end":9337816,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9337817,"byte_end":9337840,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9337841,"byte_end":9337870,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9337871,"byte_end":9337874,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9337875,"byte_end":9337909,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9337910,"byte_end":9337933,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9337934,"byte_end":9337937,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9337938,"byte_end":9337983,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9337984,"byte_end":9338029,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338030,"byte_end":9338050,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338051,"byte_end":9338083,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338084,"byte_end":9338138,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338139,"byte_end":9338184,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     handles.push(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338185,"byte_end":9338218,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338219,"byte_end":9338255,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/         let wr = c.wait().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338256,"byte_end":9338292,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338293,"byte_end":9338328,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/         wr","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338329,"byte_end":9338343,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338344,"byte_end":9338355,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338356,"byte_end":9338361,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // Will not resolve until all \"before wait\" messages have been printed","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338362,"byte_end":9338436,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ let wrs = join_all(handles).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338437,"byte_end":9338475,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338476,"byte_end":9338531,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(wrs.into_iter().filter(|wr| wr.is_leader()).count(), 1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338532,"byte_end":9338603,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338604,"byte_end":9338611,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338612,"byte_end":9338619,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5292},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9339118,"byte_end":9339121,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338878,"byte_end":9338945,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338950,"byte_end":9338953,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338958,"byte_end":9339046,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9339051,"byte_end":9339106,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5293},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9340194,"byte_end":9340198,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9339720,"byte_end":9339780,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9339785,"byte_end":9339788,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9339793,"byte_end":9339869,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9339874,"byte_end":9339899,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9339904,"byte_end":9339907,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9339912,"byte_end":9340005,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9340010,"byte_end":9340103,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9340108,"byte_end":9340176,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":6494},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9342119,"byte_end":9342136,"line_start":128,"line_end":128,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9341983,"byte_end":9342083,"line_start":126,"line_end":126,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":5297},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9342384,"byte_end":9342393,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from wait is the \"leader thread\".","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9342174,"byte_end":9342241,"line_start":131,"line_end":131,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9342246,"byte_end":9342249,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9342254,"byte_end":9342346,"line_start":133,"line_end":133,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9342351,"byte_end":9342372,"line_start":134,"line_end":134,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":5301},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":5302},{"krate":0,"index":5303},{"krate":0,"index":5304},{"krate":0,"index":5305},{"krate":0,"index":5306},{"krate":0,"index":5307},{"krate":0,"index":5308},{"krate":0,"index":5309},{"krate":0,"index":5310},{"krate":0,"index":5311},{"krate":0,"index":5312},{"krate":0,"index":5313},{"krate":0,"index":5314},{"krate":0,"index":13108},{"krate":0,"index":5315},{"krate":0,"index":5316},{"krate":0,"index":5317},{"krate":0,"index":13114},{"krate":0,"index":5318},{"krate":0,"index":5319},{"krate":0,"index":5320},{"krate":0,"index":5321},{"krate":0,"index":5322},{"krate":0,"index":5323},{"krate":0,"index":5326},{"krate":0,"index":5330},{"krate":0,"index":5343},{"krate":0,"index":5344},{"krate":0,"index":5350},{"krate":0,"index":5355},{"krate":0,"index":5361},{"krate":0,"index":5366},{"krate":0,"index":5370},{"krate":0,"index":5375},{"krate":0,"index":5378},{"krate":0,"index":5381},{"krate":0,"index":5382},{"krate":0,"index":5384},{"krate":0,"index":5386},{"krate":0,"index":5388},{"krate":0,"index":5390},{"krate":0,"index":5392},{"krate":0,"index":5401},{"krate":0,"index":5403},{"krate":0,"index":5405},{"krate":0,"index":5408},{"krate":0,"index":5411},{"krate":0,"index":5415},{"krate":0,"index":5421},{"krate":0,"index":5424},{"krate":0,"index":5429},{"krate":0,"index":5434},{"krate":0,"index":5440},{"krate":0,"index":5446},{"krate":0,"index":5449},{"krate":0,"index":5452},{"krate":0,"index":5457},{"krate":0,"index":5462}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9342435,"byte_end":9342515,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9342516,"byte_end":9342534,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9342535,"byte_end":9342538,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9342539,"byte_end":9342617,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9342618,"byte_end":9342693,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9342694,"byte_end":9342772,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9342773,"byte_end":9342827,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9342828,"byte_end":9342831,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9342832,"byte_end":9342908,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9342909,"byte_end":9342989,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9342990,"byte_end":9343067,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9343068,"byte_end":9343118,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9343119,"byte_end":9343122,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9343123,"byte_end":9343201,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9343202,"byte_end":9343259,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9343260,"byte_end":9343263,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9343264,"byte_end":9343342,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9343343,"byte_end":9343415,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9343416,"byte_end":9343432,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9343433,"byte_end":9343436,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9343437,"byte_end":9343451,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9343452,"byte_end":9343455,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9343456,"byte_end":9343536,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are susceptible to the \"slow receiver\" problem.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9343537,"byte_end":9343616,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9343617,"byte_end":9343694,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9343695,"byte_end":9343773,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9343774,"byte_end":9343781,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9343782,"byte_end":9343785,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9343786,"byte_end":9343863,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9343864,"byte_end":9343939,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9343940,"byte_end":9344020,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9344021,"byte_end":9344024,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9344025,"byte_end":9344097,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9344098,"byte_end":9344176,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9344177,"byte_end":9344253,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9344254,"byte_end":9344313,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9344314,"byte_end":9344317,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9344318,"byte_end":9344396,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9344397,"byte_end":9344471,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9344472,"byte_end":9344508,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9344509,"byte_end":9344512,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9344513,"byte_end":9344592,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9344593,"byte_end":9344670,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9344671,"byte_end":9344746,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9344747,"byte_end":9344778,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9344779,"byte_end":9344782,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9344783,"byte_end":9344797,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9344798,"byte_end":9344801,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9344802,"byte_end":9344877,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9344878,"byte_end":9344956,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9344957,"byte_end":9345034,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345035,"byte_end":9345066,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345067,"byte_end":9345070,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345071,"byte_end":9345117,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345118,"byte_end":9345186,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345187,"byte_end":9345237,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345238,"byte_end":9345286,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::error::RecvError::Lagged","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345287,"byte_end":9345362,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::error::RecvError::Closed","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345363,"byte_end":9345438,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345439,"byte_end":9345491,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345492,"byte_end":9345495,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345496,"byte_end":9345510,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345511,"byte_end":9345514,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345515,"byte_end":9345530,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345531,"byte_end":9345534,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345535,"byte_end":9345542,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345543,"byte_end":9345574,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345575,"byte_end":9345578,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345579,"byte_end":9345597,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345598,"byte_end":9345619,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345620,"byte_end":9345671,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345672,"byte_end":9345709,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345710,"byte_end":9345713,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345714,"byte_end":9345747,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345748,"byte_end":9345802,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345803,"byte_end":9345857,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345858,"byte_end":9345869,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345870,"byte_end":9345873,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345874,"byte_end":9345907,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345908,"byte_end":9345962,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9345963,"byte_end":9346017,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346018,"byte_end":9346029,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346030,"byte_end":9346033,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346034,"byte_end":9346063,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346064,"byte_end":9346093,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346094,"byte_end":9346099,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346100,"byte_end":9346107,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346108,"byte_end":9346111,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346112,"byte_end":9346128,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346129,"byte_end":9346132,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346133,"byte_end":9346140,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346141,"byte_end":9346172,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346173,"byte_end":9346176,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346177,"byte_end":9346195,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346196,"byte_end":9346217,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346218,"byte_end":9346267,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346268,"byte_end":9346271,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346272,"byte_end":9346301,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346302,"byte_end":9346331,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346332,"byte_end":9346361,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346362,"byte_end":9346365,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346366,"byte_end":9346403,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346404,"byte_end":9346446,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346447,"byte_end":9346450,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346451,"byte_end":9346520,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346521,"byte_end":9346524,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346525,"byte_end":9346574,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346575,"byte_end":9346624,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346625,"byte_end":9346630,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9346631,"byte_end":9346638,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5323},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347835,"byte_end":9347841,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5325}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347042,"byte_end":9347088,"line_start":126,"line_end":126,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347089,"byte_end":9347092,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347093,"byte_end":9347153,"line_start":128,"line_end":128,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347154,"byte_end":9347181,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347182,"byte_end":9347185,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347186,"byte_end":9347200,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347201,"byte_end":9347204,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347205,"byte_end":9347212,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347213,"byte_end":9347244,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347245,"byte_end":9347248,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347249,"byte_end":9347267,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347268,"byte_end":9347289,"line_start":137,"line_end":137,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347290,"byte_end":9347341,"line_start":138,"line_end":138,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347342,"byte_end":9347379,"line_start":139,"line_end":139,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347380,"byte_end":9347383,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347384,"byte_end":9347417,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347418,"byte_end":9347472,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347473,"byte_end":9347527,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347528,"byte_end":9347539,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347540,"byte_end":9347543,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347544,"byte_end":9347577,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347578,"byte_end":9347632,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347633,"byte_end":9347687,"line_start":148,"line_end":148,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347688,"byte_end":9347699,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347700,"byte_end":9347703,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347704,"byte_end":9347733,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347734,"byte_end":9347763,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347764,"byte_end":9347769,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347770,"byte_end":9347777,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347778,"byte_end":9347781,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347782,"byte_end":9347823,"line_start":156,"line_end":156,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5326},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348889,"byte_end":9348897,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5328},{"krate":0,"index":5329}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347878,"byte_end":9347926,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347927,"byte_end":9347930,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347931,"byte_end":9347997,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9347998,"byte_end":9348027,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348028,"byte_end":9348031,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`BroadcastStream`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348032,"byte_end":9348110,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ wrapper.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348111,"byte_end":9348123,"line_start":167,"line_end":167,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348124,"byte_end":9348127,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`BroadcastStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.BroadcastStream.html","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348128,"byte_end":9348235,"line_start":169,"line_end":169,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348236,"byte_end":9348239,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348240,"byte_end":9348254,"line_start":171,"line_end":171,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348255,"byte_end":9348258,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348259,"byte_end":9348266,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348267,"byte_end":9348298,"line_start":174,"line_end":174,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348299,"byte_end":9348302,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348303,"byte_end":9348321,"line_start":176,"line_end":176,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348322,"byte_end":9348343,"line_start":177,"line_end":177,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348344,"byte_end":9348395,"line_start":178,"line_end":178,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348396,"byte_end":9348433,"line_start":179,"line_end":179,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348434,"byte_end":9348437,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348438,"byte_end":9348471,"line_start":181,"line_end":181,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348472,"byte_end":9348526,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348527,"byte_end":9348581,"line_start":183,"line_end":183,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348582,"byte_end":9348593,"line_start":184,"line_end":184,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348594,"byte_end":9348597,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348598,"byte_end":9348631,"line_start":186,"line_end":186,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348632,"byte_end":9348686,"line_start":187,"line_end":187,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348687,"byte_end":9348741,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348742,"byte_end":9348753,"line_start":189,"line_end":189,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348754,"byte_end":9348757,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348758,"byte_end":9348787,"line_start":191,"line_end":191,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348788,"byte_end":9348817,"line_start":192,"line_end":192,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348818,"byte_end":9348823,"line_start":193,"line_end":193,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348824,"byte_end":9348831,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348832,"byte_end":9348835,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9348836,"byte_end":9348877,"line_start":196,"line_end":196,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":5330},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9349046,"byte_end":9349051,"line_start":205,"line_end":205,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::broadcast::error","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":5331},{"krate":0,"index":6501},{"krate":0,"index":6505},{"krate":0,"index":5332},{"krate":0,"index":5335},{"krate":0,"index":6508},{"krate":0,"index":6518},{"krate":0,"index":6514},{"krate":0,"index":6515},{"krate":0,"index":5337},{"krate":0,"index":5339},{"krate":0,"index":6520},{"krate":0,"index":6532},{"krate":0,"index":6528},{"krate":0,"index":6529},{"krate":0,"index":5340},{"krate":0,"index":5342}],"decl_id":null,"docs":" Broadcast error types\n","sig":null,"attributes":[{"value":"/ Broadcast error types","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9349058,"byte_end":9349083,"line_start":206,"line_end":206,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":6501},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9349555,"byte_end":9349564,"line_start":219,"line_end":219,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::broadcast::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by from the [`send`] function on a [`Sender`].","sig":null,"attributes":[{"value":"/ Error returned by from the [`send`] function on a [`Sender`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9349108,"byte_end":9349173,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9349178,"byte_end":9349181,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9349186,"byte_end":9349258,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9349263,"byte_end":9349340,"line_start":213,"line_end":213,"column_start":5,"column_end":82}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9349345,"byte_end":9349404,"line_start":214,"line_end":214,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9349409,"byte_end":9349412,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ [`send`]: crate::sync::broadcast::Sender::send","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9349417,"byte_end":9349467,"line_start":216,"line_end":216,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9349472,"byte_end":9349518,"line_start":217,"line_end":217,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":6504},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9349568,"byte_end":9349573,"line_start":219,"line_end":219,"column_start":29,"column_end":34},"name":"0","qualname":"::sync::broadcast::error::SendError::0","value":"T","parent":{"krate":0,"index":6501},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6509},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9350170,"byte_end":9350176,"line_start":237,"line_end":237,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":6508},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9350065,"byte_end":9350140,"line_start":235,"line_end":235,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9350149,"byte_end":9350161,"line_start":236,"line_end":236,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6511},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9350402,"byte_end":9350408,"line_start":243,"line_end":243,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":6508},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9350187,"byte_end":9350259,"line_start":239,"line_end":239,"column_start":9,"column_end":81}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9350268,"byte_end":9350328,"line_start":240,"line_end":240,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9350337,"byte_end":9350340,"line_start":241,"line_end":241,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9350349,"byte_end":9350393,"line_start":242,"line_end":242,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":6508},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9350045,"byte_end":9350054,"line_start":234,"line_end":234,"column_start":14,"column_end":23},"name":"RecvError","qualname":"::sync::broadcast::error::RecvError","value":"pub enum RecvError {\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind. Attempting to receive again will\n    /// return the oldest message still retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":6509},{"krate":0,"index":6511}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9349812,"byte_end":9349879,"line_start":229,"line_end":229,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9349884,"byte_end":9349887,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9349892,"byte_end":9349944,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9349949,"byte_end":9349999,"line_start":232,"line_end":232,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6521},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9351248,"byte_end":9351253,"line_start":267,"line_end":267,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::broadcast::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6520},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`] handles, so data may yet become available.","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9351048,"byte_end":9351106,"line_start":263,"line_end":263,"column_start":9,"column_end":67}},{"value":"/ [`Sender`] handles, so data may yet become available.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9351115,"byte_end":9351172,"line_start":264,"line_end":264,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9351181,"byte_end":9351184,"line_start":265,"line_end":265,"column_start":9,"column_end":12}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9351193,"byte_end":9351239,"line_start":266,"line_end":266,"column_start":9,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6523},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9351369,"byte_end":9351375,"line_start":271,"line_end":271,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":6520},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9351264,"byte_end":9351339,"line_start":269,"line_end":269,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9351348,"byte_end":9351360,"line_start":270,"line_end":270,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6525},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9351648,"byte_end":9351654,"line_start":278,"line_end":278,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":6520},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9351386,"byte_end":9351460,"line_start":273,"line_end":273,"column_start":9,"column_end":83}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9351469,"byte_end":9351537,"line_start":274,"line_end":274,"column_start":9,"column_end":77}},{"value":"/ retained by the channel.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9351546,"byte_end":9351574,"line_start":275,"line_end":275,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9351583,"byte_end":9351586,"line_start":276,"line_end":276,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9351595,"byte_end":9351639,"line_start":277,"line_end":277,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":6520},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9351025,"byte_end":9351037,"line_start":262,"line_end":262,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::broadcast::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The channel is currently empty. There are still active\n    /// [`Sender`] handles, so data may yet become available.\n    ///\n    /// [`Sender`]: crate::sync::broadcast::Sender\n    Empty,\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind and has been forcibly disconnected.\n    /// Attempting to receive again will return the oldest message still\n    /// retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":6521},{"krate":0,"index":6523},{"krate":0,"index":6525}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9350780,"byte_end":9350851,"line_start":257,"line_end":257,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9350856,"byte_end":9350859,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9350864,"byte_end":9350924,"line_start":259,"line_end":259,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9350929,"byte_end":9350979,"line_start":260,"line_end":260,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":5382},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355849,"byte_end":9355856,"line_start":428,"line_end":428,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T: Clone>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9354223,"byte_end":9354299,"line_start":383,"line_end":383,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9354300,"byte_end":9354349,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9354350,"byte_end":9354353,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9354354,"byte_end":9354423,"line_start":386,"line_end":386,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9354424,"byte_end":9354474,"line_start":387,"line_end":387,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9354475,"byte_end":9354478,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9354479,"byte_end":9354553,"line_start":389,"line_end":389,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9354554,"byte_end":9354629,"line_start":390,"line_end":390,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9354630,"byte_end":9354698,"line_start":391,"line_end":391,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9354699,"byte_end":9354702,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9354703,"byte_end":9354779,"line_start":393,"line_end":393,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9354780,"byte_end":9354861,"line_start":394,"line_end":394,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9354862,"byte_end":9354901,"line_start":395,"line_end":395,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9354902,"byte_end":9354905,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9354906,"byte_end":9354952,"line_start":397,"line_end":397,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9354953,"byte_end":9355021,"line_start":398,"line_end":398,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355022,"byte_end":9355072,"line_start":399,"line_end":399,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355073,"byte_end":9355125,"line_start":400,"line_end":400,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::error::SendError","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355126,"byte_end":9355185,"line_start":401,"line_end":401,"column_start":1,"column_end":60}},{"value":"/ [`RecvError`]: crate::sync::broadcast::error::RecvError","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355186,"byte_end":9355245,"line_start":402,"line_end":402,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355246,"byte_end":9355249,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355250,"byte_end":9355264,"line_start":404,"line_end":404,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355265,"byte_end":9355268,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355269,"byte_end":9355276,"line_start":406,"line_end":406,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355277,"byte_end":9355308,"line_start":407,"line_end":407,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355309,"byte_end":9355312,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355313,"byte_end":9355331,"line_start":409,"line_end":409,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355332,"byte_end":9355353,"line_start":410,"line_end":410,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355354,"byte_end":9355405,"line_start":411,"line_end":411,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355406,"byte_end":9355443,"line_start":412,"line_end":412,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355444,"byte_end":9355447,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355448,"byte_end":9355481,"line_start":414,"line_end":414,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355482,"byte_end":9355536,"line_start":415,"line_end":415,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355537,"byte_end":9355591,"line_start":416,"line_end":416,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355592,"byte_end":9355603,"line_start":417,"line_end":417,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355604,"byte_end":9355607,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355608,"byte_end":9355641,"line_start":419,"line_end":419,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355642,"byte_end":9355696,"line_start":420,"line_end":420,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355697,"byte_end":9355751,"line_start":421,"line_end":421,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355752,"byte_end":9355763,"line_start":422,"line_end":422,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355764,"byte_end":9355767,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355768,"byte_end":9355797,"line_start":424,"line_end":424,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355798,"byte_end":9355827,"line_start":425,"line_end":425,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355828,"byte_end":9355833,"line_start":426,"line_end":426,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9355834,"byte_end":9355841,"line_start":427,"line_end":427,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5394},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358908,"byte_end":9358912,"line_start":525,"line_end":525,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357058,"byte_end":9357132,"line_start":475,"line_end":475,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357137,"byte_end":9357173,"line_start":476,"line_end":476,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357178,"byte_end":9357181,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357186,"byte_end":9357261,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357266,"byte_end":9357332,"line_start":479,"line_end":479,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357337,"byte_end":9357388,"line_start":480,"line_end":480,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357393,"byte_end":9357396,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357401,"byte_end":9357413,"line_start":482,"line_end":482,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357418,"byte_end":9357421,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357426,"byte_end":9357500,"line_start":484,"line_end":484,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357505,"byte_end":9357581,"line_start":485,"line_end":485,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357586,"byte_end":9357639,"line_start":486,"line_end":486,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357644,"byte_end":9357647,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357652,"byte_end":9357662,"line_start":488,"line_end":488,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357667,"byte_end":9357670,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357675,"byte_end":9357747,"line_start":490,"line_end":490,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357752,"byte_end":9357827,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357832,"byte_end":9357893,"line_start":492,"line_end":492,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357898,"byte_end":9357901,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357906,"byte_end":9357979,"line_start":494,"line_end":494,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357984,"byte_end":9358049,"line_start":495,"line_end":495,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358054,"byte_end":9358072,"line_start":496,"line_end":496,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358077,"byte_end":9358080,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358085,"byte_end":9358135,"line_start":498,"line_end":498,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358140,"byte_end":9358200,"line_start":499,"line_end":499,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358205,"byte_end":9358208,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358213,"byte_end":9358227,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358232,"byte_end":9358235,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358240,"byte_end":9358247,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358252,"byte_end":9358283,"line_start":504,"line_end":504,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358288,"byte_end":9358291,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358296,"byte_end":9358314,"line_start":506,"line_end":506,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358319,"byte_end":9358340,"line_start":507,"line_end":507,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358345,"byte_end":9358396,"line_start":508,"line_end":508,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358401,"byte_end":9358438,"line_start":509,"line_end":509,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358443,"byte_end":9358446,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358451,"byte_end":9358484,"line_start":511,"line_end":511,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358489,"byte_end":9358543,"line_start":512,"line_end":512,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358548,"byte_end":9358602,"line_start":513,"line_end":513,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358607,"byte_end":9358618,"line_start":514,"line_end":514,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358623,"byte_end":9358626,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358631,"byte_end":9358664,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358669,"byte_end":9358723,"line_start":517,"line_end":517,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358728,"byte_end":9358782,"line_start":518,"line_end":518,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358787,"byte_end":9358798,"line_start":519,"line_end":519,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358803,"byte_end":9358806,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358811,"byte_end":9358840,"line_start":521,"line_end":521,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358845,"byte_end":9358874,"line_start":522,"line_end":522,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358879,"byte_end":9358884,"line_start":523,"line_end":523,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9358889,"byte_end":9358896,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5396},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359672,"byte_end":9359681,"line_start":553,"line_end":553,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359077,"byte_end":9359154,"line_start":530,"line_end":530,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359159,"byte_end":9359188,"line_start":531,"line_end":531,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359193,"byte_end":9359196,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359201,"byte_end":9359215,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359220,"byte_end":9359223,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359228,"byte_end":9359235,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359240,"byte_end":9359271,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359276,"byte_end":9359279,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359284,"byte_end":9359302,"line_start":538,"line_end":538,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359307,"byte_end":9359328,"line_start":539,"line_end":539,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359333,"byte_end":9359380,"line_start":540,"line_end":540,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359385,"byte_end":9359388,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359393,"byte_end":9359420,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359425,"byte_end":9359454,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359459,"byte_end":9359462,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359467,"byte_end":9359503,"line_start":545,"line_end":545,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359508,"byte_end":9359511,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359516,"byte_end":9359545,"line_start":547,"line_end":547,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359550,"byte_end":9359553,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359558,"byte_end":9359603,"line_start":549,"line_end":549,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359608,"byte_end":9359638,"line_start":550,"line_end":550,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359643,"byte_end":9359648,"line_start":551,"line_end":551,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359653,"byte_end":9359660,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5397},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360940,"byte_end":9360954,"line_start":594,"line_end":594,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359788,"byte_end":9359830,"line_start":558,"line_end":558,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359835,"byte_end":9359838,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359843,"byte_end":9359919,"line_start":560,"line_end":560,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9359924,"byte_end":9359997,"line_start":561,"line_end":561,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360002,"byte_end":9360022,"line_start":562,"line_end":562,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360027,"byte_end":9360030,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360035,"byte_end":9360045,"line_start":564,"line_end":564,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360050,"byte_end":9360053,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360058,"byte_end":9360128,"line_start":566,"line_end":566,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360133,"byte_end":9360201,"line_start":567,"line_end":567,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360206,"byte_end":9360219,"line_start":568,"line_end":568,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360224,"byte_end":9360227,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360232,"byte_end":9360284,"line_start":570,"line_end":570,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360289,"byte_end":9360339,"line_start":571,"line_end":571,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360344,"byte_end":9360390,"line_start":572,"line_end":572,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360395,"byte_end":9360455,"line_start":573,"line_end":573,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360460,"byte_end":9360508,"line_start":574,"line_end":574,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360513,"byte_end":9360516,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360521,"byte_end":9360535,"line_start":576,"line_end":576,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360540,"byte_end":9360543,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360548,"byte_end":9360555,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360560,"byte_end":9360591,"line_start":579,"line_end":579,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360596,"byte_end":9360599,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360604,"byte_end":9360622,"line_start":581,"line_end":581,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360627,"byte_end":9360648,"line_start":582,"line_end":582,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360653,"byte_end":9360701,"line_start":583,"line_end":583,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360706,"byte_end":9360709,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360714,"byte_end":9360757,"line_start":585,"line_end":585,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360762,"byte_end":9360765,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360770,"byte_end":9360808,"line_start":587,"line_end":587,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360813,"byte_end":9360816,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360821,"byte_end":9360864,"line_start":589,"line_end":589,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360869,"byte_end":9360872,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360877,"byte_end":9360906,"line_start":591,"line_end":591,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360911,"byte_end":9360916,"line_start":592,"line_end":592,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9360921,"byte_end":9360928,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5417},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370517,"byte_end":9370521,"line_start":877,"line_end":877,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9368289,"byte_end":9368335,"line_start":812,"line_end":812,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9368340,"byte_end":9368343,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9368348,"byte_end":9368416,"line_start":814,"line_end":814,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9368421,"byte_end":9368453,"line_start":815,"line_end":815,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9368458,"byte_end":9368461,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9368466,"byte_end":9368536,"line_start":817,"line_end":817,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9368541,"byte_end":9368615,"line_start":818,"line_end":818,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9368620,"byte_end":9368623,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9368628,"byte_end":9368704,"line_start":820,"line_end":820,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9368709,"byte_end":9368785,"line_start":821,"line_end":821,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9368790,"byte_end":9368858,"line_start":822,"line_end":822,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9368863,"byte_end":9368936,"line_start":823,"line_end":823,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9368941,"byte_end":9369010,"line_start":824,"line_end":824,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369015,"byte_end":9369060,"line_start":825,"line_end":825,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369065,"byte_end":9369068,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369073,"byte_end":9369123,"line_start":827,"line_end":827,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369128,"byte_end":9369180,"line_start":828,"line_end":828,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369185,"byte_end":9369188,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369193,"byte_end":9369207,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369212,"byte_end":9369215,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369220,"byte_end":9369227,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369232,"byte_end":9369263,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369268,"byte_end":9369271,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369276,"byte_end":9369294,"line_start":835,"line_end":835,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369299,"byte_end":9369320,"line_start":836,"line_end":836,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369325,"byte_end":9369376,"line_start":837,"line_end":837,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369381,"byte_end":9369418,"line_start":838,"line_end":838,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369423,"byte_end":9369426,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369431,"byte_end":9369464,"line_start":840,"line_end":840,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369469,"byte_end":9369523,"line_start":841,"line_end":841,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369528,"byte_end":9369582,"line_start":842,"line_end":842,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369587,"byte_end":9369598,"line_start":843,"line_end":843,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369603,"byte_end":9369606,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369611,"byte_end":9369644,"line_start":845,"line_end":845,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369649,"byte_end":9369703,"line_start":846,"line_end":846,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369708,"byte_end":9369762,"line_start":847,"line_end":847,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369767,"byte_end":9369778,"line_start":848,"line_end":848,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369783,"byte_end":9369786,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369791,"byte_end":9369820,"line_start":850,"line_end":850,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369825,"byte_end":9369854,"line_start":851,"line_end":851,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369859,"byte_end":9369864,"line_start":852,"line_end":852,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369869,"byte_end":9369876,"line_start":853,"line_end":853,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369881,"byte_end":9369884,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369889,"byte_end":9369905,"line_start":855,"line_end":855,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369910,"byte_end":9369913,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369918,"byte_end":9369925,"line_start":857,"line_end":857,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369930,"byte_end":9369961,"line_start":858,"line_end":858,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369966,"byte_end":9369969,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369974,"byte_end":9369992,"line_start":860,"line_end":860,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9369997,"byte_end":9370018,"line_start":861,"line_end":861,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370023,"byte_end":9370072,"line_start":862,"line_end":862,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370077,"byte_end":9370080,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370085,"byte_end":9370114,"line_start":864,"line_end":864,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370119,"byte_end":9370148,"line_start":865,"line_end":865,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370153,"byte_end":9370182,"line_start":866,"line_end":866,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370187,"byte_end":9370190,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370195,"byte_end":9370232,"line_start":868,"line_end":868,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370237,"byte_end":9370279,"line_start":869,"line_end":869,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370284,"byte_end":9370287,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370292,"byte_end":9370361,"line_start":871,"line_end":871,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370366,"byte_end":9370369,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370374,"byte_end":9370423,"line_start":873,"line_end":873,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370428,"byte_end":9370477,"line_start":874,"line_end":874,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370482,"byte_end":9370487,"line_start":875,"line_end":875,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370492,"byte_end":9370499,"line_start":876,"line_end":876,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5420},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9372282,"byte_end":9372290,"line_start":922,"line_end":922,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370623,"byte_end":9370696,"line_start":882,"line_end":882,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370701,"byte_end":9370704,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370709,"byte_end":9370781,"line_start":884,"line_end":884,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370786,"byte_end":9370810,"line_start":885,"line_end":885,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370815,"byte_end":9370818,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of two","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370823,"byte_end":9370903,"line_start":887,"line_end":887,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370908,"byte_end":9370982,"line_start":888,"line_end":888,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370987,"byte_end":9370990,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9370995,"byte_end":9371068,"line_start":890,"line_end":890,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371073,"byte_end":9371147,"line_start":891,"line_end":891,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371152,"byte_end":9371155,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371160,"byte_end":9371236,"line_start":893,"line_end":893,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371241,"byte_end":9371317,"line_start":894,"line_end":894,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371322,"byte_end":9371393,"line_start":895,"line_end":895,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371398,"byte_end":9371471,"line_start":896,"line_end":896,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371476,"byte_end":9371549,"line_start":897,"line_end":897,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371554,"byte_end":9371625,"line_start":898,"line_end":898,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371630,"byte_end":9371682,"line_start":899,"line_end":899,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371687,"byte_end":9371690,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371695,"byte_end":9371747,"line_start":901,"line_end":901,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371752,"byte_end":9371812,"line_start":902,"line_end":902,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371817,"byte_end":9371867,"line_start":903,"line_end":903,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371872,"byte_end":9371875,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371880,"byte_end":9371894,"line_start":905,"line_end":905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371899,"byte_end":9371902,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371907,"byte_end":9371914,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371919,"byte_end":9371950,"line_start":908,"line_end":908,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371955,"byte_end":9371958,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371963,"byte_end":9371981,"line_start":910,"line_end":910,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9371986,"byte_end":9372007,"line_start":911,"line_end":911,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9372012,"byte_end":9372062,"line_start":912,"line_end":912,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9372067,"byte_end":9372070,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9372075,"byte_end":9372115,"line_start":914,"line_end":914,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9372120,"byte_end":9372123,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9372128,"byte_end":9372157,"line_start":916,"line_end":916,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9372162,"byte_end":9372165,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9372170,"byte_end":9372213,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9372218,"byte_end":9372248,"line_start":919,"line_end":919,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9372253,"byte_end":9372258,"line_start":920,"line_end":920,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9372263,"byte_end":9372270,"line_start":921,"line_end":921,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5464},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":5465},{"krate":0,"index":5539},{"krate":0,"index":5616},{"krate":0,"index":5617},{"krate":0,"index":5618},{"krate":0,"index":5619},{"krate":0,"index":5620},{"krate":0,"index":5621},{"krate":0,"index":5751},{"krate":0,"index":5796},{"krate":0,"index":5846},{"krate":0,"index":5847},{"krate":0,"index":5848},{"krate":0,"index":5849},{"krate":0,"index":5850},{"krate":0,"index":5869}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values between\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values between","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9376563,"byte_end":9376633,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ asynchronous tasks.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9376634,"byte_end":9376657,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9376658,"byte_end":9376661,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9376662,"byte_end":9376742,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9376743,"byte_end":9376821,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9376822,"byte_end":9376898,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9376899,"byte_end":9376978,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method will always complete immediately.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9376979,"byte_end":9377059,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9377060,"byte_end":9377131,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9377132,"byte_end":9377154,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9377155,"byte_end":9377158,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Similar to the `mpsc` channels provided by `std`, the channel constructor","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9377159,"byte_end":9377236,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ functions provide separate send and receive handles, [`Sender`] and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9377237,"byte_end":9377308,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [`Receiver`] for the bounded channel, [`UnboundedSender`] and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9377309,"byte_end":9377374,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedReceiver`] for the unbounded channel. If there is no message to read,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9377375,"byte_end":9377459,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ the current task will be notified when a new value is sent. [`Sender`] and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9377460,"byte_end":9377538,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ [`UnboundedSender`] allow sending values into the channel. If the bounded","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9377539,"byte_end":9377616,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ channel is at capacity, the send is rejected and the task will be notified","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9377617,"byte_end":9377695,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ when additional capacity is available. In other words, the channel provides","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9377696,"byte_end":9377775,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ backpressure.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9377776,"byte_end":9377793,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9377794,"byte_end":9377797,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9377798,"byte_end":9377801,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9377802,"byte_end":9377821,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9377822,"byte_end":9377825,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9377826,"byte_end":9377892,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9377893,"byte_end":9377973,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9377974,"byte_end":9378051,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378052,"byte_end":9378055,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378056,"byte_end":9378126,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378127,"byte_end":9378206,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378207,"byte_end":9378230,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378231,"byte_end":9378234,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378235,"byte_end":9378255,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378256,"byte_end":9378259,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378260,"byte_end":9378340,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378341,"byte_end":9378421,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378422,"byte_end":9378500,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378501,"byte_end":9378573,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378574,"byte_end":9378648,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378649,"byte_end":9378661,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378662,"byte_end":9378665,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378666,"byte_end":9378713,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378714,"byte_end":9378717,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378718,"byte_end":9378799,"line_start":46,"line_end":46,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378800,"byte_end":9378835,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378836,"byte_end":9378839,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378840,"byte_end":9378920,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. Instead of calling","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9378921,"byte_end":9379002,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ the async [`send`][bounded-send] or [`recv`][bounded-recv] methods, in","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9379003,"byte_end":9379077,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ synchronous code you will need to use the [`blocking_send`][blocking-send] or","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9379078,"byte_end":9379159,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"/ [`blocking_recv`][blocking-recv] methods.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9379160,"byte_end":9379205,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9379206,"byte_end":9379209,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9379210,"byte_end":9379290,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9379291,"byte_end":9379369,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9379370,"byte_end":9379436,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9379437,"byte_end":9379519,"line_start":58,"line_end":58,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9379520,"byte_end":9379584,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9379585,"byte_end":9379588,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9379589,"byte_end":9379630,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9379631,"byte_end":9379676,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9379677,"byte_end":9379730,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9379731,"byte_end":9379786,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"/ [blocking-send]: crate::sync::mpsc::Sender::blocking_send()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9379787,"byte_end":9379850,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/ [blocking-recv]: crate::sync::mpsc::Receiver::blocking_recv()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9379851,"byte_end":9379916,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9379917,"byte_end":9379976,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9379977,"byte_end":9380040,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9380041,"byte_end":9380101,"line_start":69,"line_end":69,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9380102,"byte_end":9380147,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9380148,"byte_end":9380238,"line_start":71,"line_end":71,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":5551},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9394358,"byte_end":9394364,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5553}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9394233,"byte_end":9394278,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9394279,"byte_end":9394282,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9394283,"byte_end":9394346,"line_start":18,"line_end":18,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5554},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9394739,"byte_end":9394745,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"Permit","qualname":"::sync::mpsc::bounded::Permit","value":"Permit {  }","parent":null,"children":[{"krate":0,"index":5557}],"decl_id":null,"docs":" Permit to send one value into the channel.","sig":null,"attributes":[{"value":"/ Permit to send one value into the channel.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9394407,"byte_end":9394453,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9394454,"byte_end":9394457,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ `Permit` values are returned by [`Sender::reserve()`] and [`Sender::try_reserve()`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9394458,"byte_end":9394545,"line_start":25,"line_end":25,"column_start":1,"column_end":88}},{"value":"/ and are used to guarantee channel capacity before generating a message to send.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9394546,"byte_end":9394629,"line_start":26,"line_end":26,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9394630,"byte_end":9394633,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`Sender::reserve()`]: Sender::reserve","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9394634,"byte_end":9394676,"line_start":28,"line_end":28,"column_start":1,"column_end":43}},{"value":"/ [`Sender::try_reserve()`]: Sender::try_reserve","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9394677,"byte_end":9394727,"line_start":29,"line_end":29,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":5558},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9395112,"byte_end":9395120,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5560}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9394796,"byte_end":9394844,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9394845,"byte_end":9394848,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9394849,"byte_end":9394912,"line_start":36,"line_end":36,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9394913,"byte_end":9394916,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`ReceiverStream`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9394917,"byte_end":9394990,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9394991,"byte_end":9394994,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`ReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.ReceiverStream.html","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9394995,"byte_end":9395100,"line_start":40,"line_end":40,"column_start":1,"column_end":106}}]},{"kind":"Function","id":{"krate":0,"index":5561},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396578,"byte_end":9396585,"line_start":90,"line_end":90,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks\n with backpressure.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9395192,"byte_end":9395271,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ with backpressure.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9395272,"byte_end":9395294,"line_start":47,"line_end":47,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9395295,"byte_end":9395298,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The channel will buffer up to the provided number of messages.  Once the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9395299,"byte_end":9395375,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ buffer is full, attempts to `send` new messages will wait until a message is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9395376,"byte_end":9395456,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ received from the channel. The provided buffer capacity must be at least 1.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9395457,"byte_end":9395536,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9395537,"byte_end":9395540,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9395541,"byte_end":9395618,"line_start":53,"line_end":53,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9395619,"byte_end":9395644,"line_start":54,"line_end":54,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9395645,"byte_end":9395648,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9395649,"byte_end":9395728,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9395729,"byte_end":9395777,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9395778,"byte_end":9395781,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9395782,"byte_end":9395861,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9395862,"byte_end":9395937,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9395938,"byte_end":9396004,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396005,"byte_end":9396008,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396009,"byte_end":9396021,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396022,"byte_end":9396025,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Panics if the buffer capacity is 0.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396026,"byte_end":9396065,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396066,"byte_end":9396069,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396070,"byte_end":9396084,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396085,"byte_end":9396088,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396089,"byte_end":9396100,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396101,"byte_end":9396127,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396128,"byte_end":9396131,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396132,"byte_end":9396150,"line_start":72,"line_end":72,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396151,"byte_end":9396172,"line_start":73,"line_end":73,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396173,"byte_end":9396219,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396220,"byte_end":9396223,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396224,"byte_end":9396257,"line_start":76,"line_end":76,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396258,"byte_end":9396286,"line_start":77,"line_end":77,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396287,"byte_end":9396337,"line_start":78,"line_end":78,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396338,"byte_end":9396387,"line_start":79,"line_end":79,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396388,"byte_end":9396415,"line_start":80,"line_end":80,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396416,"byte_end":9396433,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396434,"byte_end":9396447,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396448,"byte_end":9396459,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396460,"byte_end":9396463,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396464,"byte_end":9396509,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396510,"byte_end":9396546,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396547,"byte_end":9396556,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396557,"byte_end":9396562,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9396563,"byte_end":9396570,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5567},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398947,"byte_end":9398951,"line_start":162,"line_end":162,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9397185,"byte_end":9397231,"line_start":110,"line_end":110,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9397236,"byte_end":9397239,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9397244,"byte_end":9397319,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9397324,"byte_end":9397397,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9397402,"byte_end":9397478,"line_start":114,"line_end":114,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9397483,"byte_end":9397558,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9397563,"byte_end":9397566,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9397571,"byte_end":9397644,"line_start":117,"line_end":117,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will sleep until a message is sent or","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9397649,"byte_end":9397723,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9397728,"byte_end":9397754,"line_start":119,"line_end":119,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9397759,"byte_end":9397762,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9397767,"byte_end":9397836,"line_start":121,"line_end":121,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9397841,"byte_end":9397913,"line_start":122,"line_end":122,"column_start":5,"column_end":77}},{"value":"/ closed by `recv` until the permits are released.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9397918,"byte_end":9397970,"line_start":123,"line_end":123,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9397975,"byte_end":9397978,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9397983,"byte_end":9398009,"line_start":125,"line_end":125,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398014,"byte_end":9398063,"line_start":126,"line_end":126,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398068,"byte_end":9398071,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398076,"byte_end":9398090,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398095,"byte_end":9398098,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398103,"byte_end":9398110,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398115,"byte_end":9398141,"line_start":131,"line_end":131,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398146,"byte_end":9398149,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398154,"byte_end":9398172,"line_start":133,"line_end":133,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398177,"byte_end":9398198,"line_start":134,"line_end":134,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398203,"byte_end":9398249,"line_start":135,"line_end":135,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398254,"byte_end":9398257,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398262,"byte_end":9398295,"line_start":137,"line_end":137,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398300,"byte_end":9398344,"line_start":138,"line_end":138,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398349,"byte_end":9398360,"line_start":139,"line_end":139,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398365,"byte_end":9398368,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398373,"byte_end":9398424,"line_start":141,"line_end":141,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398429,"byte_end":9398471,"line_start":142,"line_end":142,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398476,"byte_end":9398481,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398486,"byte_end":9398493,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398498,"byte_end":9398501,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398506,"byte_end":9398530,"line_start":146,"line_end":146,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398535,"byte_end":9398538,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398543,"byte_end":9398550,"line_start":148,"line_end":148,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398555,"byte_end":9398581,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398586,"byte_end":9398589,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398594,"byte_end":9398612,"line_start":151,"line_end":151,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398617,"byte_end":9398638,"line_start":152,"line_end":152,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398643,"byte_end":9398689,"line_start":153,"line_end":153,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398694,"byte_end":9398697,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398702,"byte_end":9398742,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398747,"byte_end":9398787,"line_start":156,"line_end":156,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398792,"byte_end":9398795,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398800,"byte_end":9398851,"line_start":158,"line_end":158,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398856,"byte_end":9398907,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398912,"byte_end":9398917,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9398922,"byte_end":9398929,"line_start":161,"line_end":161,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5572},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9401015,"byte_end":9401028,"line_start":218,"line_end":218,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<Receiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9399072,"byte_end":9399134,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9399139,"byte_end":9399142,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9399147,"byte_end":9399222,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9399227,"byte_end":9399300,"line_start":170,"line_end":170,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9399305,"byte_end":9399381,"line_start":171,"line_end":171,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9399386,"byte_end":9399461,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9399466,"byte_end":9399469,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9399474,"byte_end":9399547,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will block until a message is sent or","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9399552,"byte_end":9399626,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9399631,"byte_end":9399657,"line_start":176,"line_end":176,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9399662,"byte_end":9399665,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9399670,"byte_end":9399738,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ asynchronous code to synchronous code, and will work even if the sender","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9399743,"byte_end":9399818,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ is not using [`blocking_send`] to send the message.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9399823,"byte_end":9399878,"line_start":180,"line_end":180,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9399883,"byte_end":9399886,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9399891,"byte_end":9399960,"line_start":182,"line_end":182,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9399965,"byte_end":9400037,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/ closed by `blocking_recv` until the permits are released.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400042,"byte_end":9400103,"line_start":184,"line_end":184,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400108,"byte_end":9400111,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400116,"byte_end":9400142,"line_start":186,"line_end":186,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400147,"byte_end":9400196,"line_start":187,"line_end":187,"column_start":5,"column_end":54}},{"value":"/ [`blocking_send`]: fn@crate::sync::mpsc::Sender::blocking_send","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400201,"byte_end":9400267,"line_start":188,"line_end":188,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400272,"byte_end":9400275,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400280,"byte_end":9400292,"line_start":190,"line_end":190,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400297,"byte_end":9400300,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400305,"byte_end":9400372,"line_start":192,"line_end":192,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400377,"byte_end":9400389,"line_start":193,"line_end":193,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400394,"byte_end":9400397,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400402,"byte_end":9400416,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400421,"byte_end":9400424,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400429,"byte_end":9400436,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400441,"byte_end":9400461,"line_start":198,"line_end":198,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400466,"byte_end":9400498,"line_start":199,"line_end":199,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400503,"byte_end":9400529,"line_start":200,"line_end":200,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400534,"byte_end":9400537,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400542,"byte_end":9400557,"line_start":202,"line_end":202,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(10);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400562,"byte_end":9400613,"line_start":203,"line_end":203,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400618,"byte_end":9400621,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400626,"byte_end":9400673,"line_start":205,"line_end":205,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400678,"byte_end":9400731,"line_start":206,"line_end":206,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400736,"byte_end":9400747,"line_start":207,"line_end":207,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400752,"byte_end":9400755,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/     Runtime::new()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400760,"byte_end":9400782,"line_start":209,"line_end":209,"column_start":5,"column_end":27}},{"value":"/         .unwrap()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400787,"byte_end":9400808,"line_start":210,"line_end":210,"column_start":5,"column_end":26}},{"value":"/         .block_on(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400813,"byte_end":9400847,"line_start":211,"line_end":211,"column_start":5,"column_end":39}},{"value":"/             let _ = tx.send(10).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400852,"byte_end":9400894,"line_start":212,"line_end":212,"column_start":5,"column_end":47}},{"value":"/         });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400899,"byte_end":9400914,"line_start":213,"line_end":213,"column_start":5,"column_end":20}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400919,"byte_end":9400952,"line_start":214,"line_end":214,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400957,"byte_end":9400962,"line_start":215,"line_end":215,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400967,"byte_end":9400974,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9400979,"byte_end":9401003,"line_start":217,"line_end":217,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5573},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403116,"byte_end":9403121,"line_start":278,"line_end":278,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel without dropping it.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9401844,"byte_end":9401907,"line_start":239,"line_end":239,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9401912,"byte_end":9401915,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9401920,"byte_end":9401995,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered. Any","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402000,"byte_end":9402072,"line_start":242,"line_end":242,"column_start":5,"column_end":77}},{"value":"/ outstanding [`Permit`] values will still be able to send messages.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402077,"byte_end":9402147,"line_start":243,"line_end":243,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402152,"byte_end":9402155,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ To guarantee that no messages are dropped, after calling `close()`,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402160,"byte_end":9402231,"line_start":245,"line_end":245,"column_start":5,"column_end":76}},{"value":"/ `recv()` must be called until `None` is returned. If there are","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402236,"byte_end":9402302,"line_start":246,"line_end":246,"column_start":5,"column_end":71}},{"value":"/ outstanding [`Permit`] values, the `recv` method will not return `None`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402307,"byte_end":9402382,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ until those are released.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402387,"byte_end":9402416,"line_start":248,"line_end":248,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402421,"byte_end":9402424,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402429,"byte_end":9402451,"line_start":250,"line_end":250,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402456,"byte_end":9402459,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402464,"byte_end":9402478,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402483,"byte_end":9402486,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402491,"byte_end":9402498,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402503,"byte_end":9402529,"line_start":255,"line_end":255,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402534,"byte_end":9402537,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402542,"byte_end":9402560,"line_start":257,"line_end":257,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402565,"byte_end":9402586,"line_start":258,"line_end":258,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(20);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402591,"byte_end":9402636,"line_start":259,"line_end":259,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402641,"byte_end":9402644,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402649,"byte_end":9402682,"line_start":261,"line_end":261,"column_start":5,"column_end":38}},{"value":"/         let mut i = 0;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402687,"byte_end":9402713,"line_start":262,"line_end":262,"column_start":5,"column_end":31}},{"value":"/         while let Ok(permit) = tx.reserve().await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402718,"byte_end":9402773,"line_start":263,"line_end":263,"column_start":5,"column_end":60}},{"value":"/             permit.send(i);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402778,"byte_end":9402809,"line_start":264,"line_end":264,"column_start":5,"column_end":36}},{"value":"/             i += 1;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402814,"byte_end":9402837,"line_start":265,"line_end":265,"column_start":5,"column_end":28}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402842,"byte_end":9402855,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402860,"byte_end":9402871,"line_start":267,"line_end":267,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402876,"byte_end":9402879,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402884,"byte_end":9402903,"line_start":269,"line_end":269,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402908,"byte_end":9402911,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/     while let Some(msg) = rx.recv().await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402916,"byte_end":9402963,"line_start":271,"line_end":271,"column_start":5,"column_end":52}},{"value":"/         println!(\"got {}\", msg);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9402968,"byte_end":9403004,"line_start":272,"line_end":272,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403009,"byte_end":9403018,"line_start":273,"line_end":273,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403023,"byte_end":9403026,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/     // Channel closed and no messages are lost.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403031,"byte_end":9403082,"line_start":275,"line_end":275,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403087,"byte_end":9403092,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403097,"byte_end":9403104,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5574},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403962,"byte_end":9403971,"line_start":297,"line_end":297,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403173,"byte_end":9403227,"line_start":282,"line_end":282,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403232,"byte_end":9403235,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403240,"byte_end":9403264,"line_start":284,"line_end":284,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403269,"byte_end":9403272,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403277,"byte_end":9403351,"line_start":286,"line_end":286,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403356,"byte_end":9403370,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403375,"byte_end":9403437,"line_start":288,"line_end":288,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403442,"byte_end":9403516,"line_start":289,"line_end":289,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403521,"byte_end":9403573,"line_start":290,"line_end":290,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403578,"byte_end":9403581,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403586,"byte_end":9403658,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403663,"byte_end":9403739,"line_start":293,"line_end":293,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403744,"byte_end":9403820,"line_start":294,"line_end":294,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403825,"byte_end":9403896,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9403901,"byte_end":9403950,"line_start":296,"line_end":296,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5583},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406067,"byte_end":9406071,"line_start":362,"line_end":362,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9404427,"byte_end":9404478,"line_start":317,"line_end":317,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9404483,"byte_end":9404486,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9404491,"byte_end":9404567,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9404572,"byte_end":9404648,"line_start":320,"line_end":320,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9404653,"byte_end":9404727,"line_start":321,"line_end":321,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9404732,"byte_end":9404807,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9404812,"byte_end":9404881,"line_start":323,"line_end":323,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9404886,"byte_end":9404958,"line_start":324,"line_end":324,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9404963,"byte_end":9404994,"line_start":325,"line_end":325,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9404999,"byte_end":9405002,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405007,"byte_end":9405019,"line_start":327,"line_end":327,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405024,"byte_end":9405027,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405032,"byte_end":9405105,"line_start":329,"line_end":329,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405110,"byte_end":9405184,"line_start":330,"line_end":330,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405189,"byte_end":9405249,"line_start":331,"line_end":331,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405254,"byte_end":9405257,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405262,"byte_end":9405292,"line_start":333,"line_end":333,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405297,"byte_end":9405323,"line_start":334,"line_end":334,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405328,"byte_end":9405331,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405336,"byte_end":9405350,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405355,"byte_end":9405358,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405363,"byte_end":9405433,"line_start":338,"line_end":338,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405438,"byte_end":9405477,"line_start":339,"line_end":339,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405482,"byte_end":9405485,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405490,"byte_end":9405501,"line_start":341,"line_end":341,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405506,"byte_end":9405532,"line_start":342,"line_end":342,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405537,"byte_end":9405540,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405545,"byte_end":9405563,"line_start":344,"line_end":344,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405568,"byte_end":9405589,"line_start":345,"line_end":345,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405594,"byte_end":9405638,"line_start":346,"line_end":346,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405643,"byte_end":9405646,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405651,"byte_end":9405684,"line_start":348,"line_end":348,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405689,"byte_end":9405717,"line_start":349,"line_end":349,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405722,"byte_end":9405772,"line_start":350,"line_end":350,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405777,"byte_end":9405826,"line_start":351,"line_end":351,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405831,"byte_end":9405858,"line_start":352,"line_end":352,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405863,"byte_end":9405880,"line_start":353,"line_end":353,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405885,"byte_end":9405898,"line_start":354,"line_end":354,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405903,"byte_end":9405914,"line_start":355,"line_end":355,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405919,"byte_end":9405922,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405927,"byte_end":9405972,"line_start":357,"line_end":357,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9405977,"byte_end":9406013,"line_start":358,"line_end":358,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406018,"byte_end":9406027,"line_start":359,"line_end":359,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406032,"byte_end":9406037,"line_start":360,"line_end":360,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406042,"byte_end":9406049,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5586},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407204,"byte_end":9407210,"line_start":403,"line_end":403,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406323,"byte_end":9406367,"line_start":372,"line_end":372,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406372,"byte_end":9406375,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406380,"byte_end":9406455,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406460,"byte_end":9406515,"line_start":375,"line_end":375,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406520,"byte_end":9406523,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406528,"byte_end":9406542,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406547,"byte_end":9406550,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406555,"byte_end":9406562,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406567,"byte_end":9406593,"line_start":380,"line_end":380,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406598,"byte_end":9406601,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406606,"byte_end":9406624,"line_start":382,"line_end":382,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406629,"byte_end":9406650,"line_start":383,"line_end":383,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::channel::<()>(1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406655,"byte_end":9406702,"line_start":384,"line_end":384,"column_start":5,"column_end":52}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406707,"byte_end":9406737,"line_start":385,"line_end":385,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406742,"byte_end":9406772,"line_start":386,"line_end":386,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406777,"byte_end":9406807,"line_start":387,"line_end":387,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406812,"byte_end":9406842,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406847,"byte_end":9406880,"line_start":389,"line_end":389,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406885,"byte_end":9406906,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406911,"byte_end":9406922,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406927,"byte_end":9406930,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406935,"byte_end":9406958,"line_start":393,"line_end":393,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406963,"byte_end":9406988,"line_start":394,"line_end":394,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9406993,"byte_end":9407018,"line_start":395,"line_end":395,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407023,"byte_end":9407048,"line_start":396,"line_end":396,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407053,"byte_end":9407078,"line_start":397,"line_end":397,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407083,"byte_end":9407107,"line_start":398,"line_end":398,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407112,"byte_end":9407122,"line_start":399,"line_end":399,"column_start":5,"column_end":15}},{"value":"/     println!(\"Receiver dropped\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407127,"byte_end":9407164,"line_start":400,"line_end":400,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407169,"byte_end":9407174,"line_start":401,"line_end":401,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407179,"byte_end":9407186,"line_start":402,"line_end":402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5589},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9409384,"byte_end":9409392,"line_start":465,"line_end":465,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407264,"byte_end":9407323,"line_start":407,"line_end":407,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407328,"byte_end":9407331,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407336,"byte_end":9407415,"line_start":409,"line_end":409,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407420,"byte_end":9407495,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407500,"byte_end":9407578,"line_start":411,"line_end":411,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407583,"byte_end":9407625,"line_start":412,"line_end":412,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407630,"byte_end":9407633,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407638,"byte_end":9407650,"line_start":414,"line_end":414,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407655,"byte_end":9407658,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407663,"byte_end":9407734,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407739,"byte_end":9407815,"line_start":417,"line_end":417,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407820,"byte_end":9407842,"line_start":418,"line_end":418,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407847,"byte_end":9407850,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407855,"byte_end":9407928,"line_start":420,"line_end":420,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9407933,"byte_end":9408007,"line_start":421,"line_end":421,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408012,"byte_end":9408072,"line_start":422,"line_end":422,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408077,"byte_end":9408080,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408085,"byte_end":9408111,"line_start":424,"line_end":424,"column_start":5,"column_end":31}},{"value":"/ [`channel`]: channel","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408116,"byte_end":9408140,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408145,"byte_end":9408175,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408180,"byte_end":9408183,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408188,"byte_end":9408202,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408207,"byte_end":9408210,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408215,"byte_end":9408222,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408227,"byte_end":9408253,"line_start":431,"line_end":431,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408258,"byte_end":9408261,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408266,"byte_end":9408284,"line_start":433,"line_end":433,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408289,"byte_end":9408310,"line_start":434,"line_end":434,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408315,"byte_end":9408361,"line_start":435,"line_end":435,"column_start":5,"column_end":51}},{"value":"/     let (tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408366,"byte_end":9408411,"line_start":436,"line_end":436,"column_start":5,"column_end":50}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408416,"byte_end":9408446,"line_start":437,"line_end":437,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408451,"byte_end":9408454,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408459,"byte_end":9408492,"line_start":439,"line_end":439,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408497,"byte_end":9408536,"line_start":440,"line_end":440,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408541,"byte_end":9408580,"line_start":441,"line_end":441,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408585,"byte_end":9408647,"line_start":442,"line_end":442,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408652,"byte_end":9408663,"line_start":443,"line_end":443,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408668,"byte_end":9408671,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408676,"byte_end":9408709,"line_start":445,"line_end":445,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408714,"byte_end":9408763,"line_start":446,"line_end":446,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408768,"byte_end":9408815,"line_start":447,"line_end":447,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408820,"byte_end":9408856,"line_start":448,"line_end":448,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408861,"byte_end":9408872,"line_start":449,"line_end":449,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408877,"byte_end":9408880,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408885,"byte_end":9408905,"line_start":451,"line_end":451,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408910,"byte_end":9408949,"line_start":452,"line_end":452,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9408954,"byte_end":9408999,"line_start":453,"line_end":453,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9409004,"byte_end":9409007,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9409012,"byte_end":9409051,"line_start":455,"line_end":455,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9409056,"byte_end":9409101,"line_start":456,"line_end":456,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9409106,"byte_end":9409109,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9409114,"byte_end":9409163,"line_start":458,"line_end":458,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9409168,"byte_end":9409199,"line_start":459,"line_end":459,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9409204,"byte_end":9409266,"line_start":460,"line_end":460,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9409271,"byte_end":9409336,"line_start":461,"line_end":461,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9409341,"byte_end":9409350,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9409355,"byte_end":9409360,"line_start":463,"line_end":463,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9409365,"byte_end":9409372,"line_start":464,"line_end":464,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5590},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9411481,"byte_end":9411493,"line_start":524,"line_end":524,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"pub async fn send_timeout<'_>(&'_ Self, T, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9409797,"byte_end":9409877,"line_start":477,"line_end":477,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9409882,"byte_end":9409885,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9409890,"byte_end":9409967,"line_start":479,"line_end":479,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9409972,"byte_end":9410050,"line_start":480,"line_end":480,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410055,"byte_end":9410103,"line_start":481,"line_end":481,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410108,"byte_end":9410111,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410116,"byte_end":9410142,"line_start":483,"line_end":483,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410147,"byte_end":9410150,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410155,"byte_end":9410167,"line_start":485,"line_end":485,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410172,"byte_end":9410175,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410180,"byte_end":9410253,"line_start":487,"line_end":487,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410258,"byte_end":9410315,"line_start":488,"line_end":488,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410320,"byte_end":9410401,"line_start":489,"line_end":489,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410406,"byte_end":9410409,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410414,"byte_end":9410444,"line_start":491,"line_end":491,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410449,"byte_end":9410475,"line_start":492,"line_end":492,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410480,"byte_end":9410483,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410488,"byte_end":9410502,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410507,"byte_end":9410510,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410515,"byte_end":9410593,"line_start":496,"line_end":496,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410598,"byte_end":9410669,"line_start":497,"line_end":497,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410674,"byte_end":9410677,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410682,"byte_end":9410693,"line_start":499,"line_end":499,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410698,"byte_end":9410724,"line_start":500,"line_end":500,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410729,"byte_end":9410768,"line_start":501,"line_end":501,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410773,"byte_end":9410776,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410781,"byte_end":9410799,"line_start":503,"line_end":503,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410804,"byte_end":9410825,"line_start":504,"line_end":504,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410830,"byte_end":9410874,"line_start":505,"line_end":505,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410879,"byte_end":9410882,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410887,"byte_end":9410920,"line_start":507,"line_end":507,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410925,"byte_end":9410953,"line_start":508,"line_end":508,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9410958,"byte_end":9411044,"line_start":509,"line_end":509,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9411049,"byte_end":9411102,"line_start":510,"line_end":510,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9411107,"byte_end":9411134,"line_start":511,"line_end":511,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9411139,"byte_end":9411156,"line_start":512,"line_end":512,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9411161,"byte_end":9411174,"line_start":513,"line_end":513,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9411179,"byte_end":9411190,"line_start":514,"line_end":514,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9411195,"byte_end":9411198,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9411203,"byte_end":9411248,"line_start":516,"line_end":516,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9411253,"byte_end":9411289,"line_start":517,"line_end":517,"column_start":5,"column_end":41}},{"value":"/         sleep(Duration::from_millis(200)).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9411294,"byte_end":9411346,"line_start":518,"line_end":518,"column_start":5,"column_end":57}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9411351,"byte_end":9411360,"line_start":519,"line_end":519,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9411365,"byte_end":9411370,"line_start":520,"line_end":520,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9411375,"byte_end":9411382,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9411387,"byte_end":9411411,"line_start":522,"line_end":522,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5593},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413058,"byte_end":9413071,"line_start":577,"line_end":577,"column_start":12,"column_end":25},"name":"blocking_send","qualname":"<Sender<T>>::blocking_send","value":"pub fn blocking_send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Blocking send to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking send to call outside of asynchronous contexts.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9411986,"byte_end":9412045,"line_start":543,"line_end":543,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412050,"byte_end":9412053,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412058,"byte_end":9412126,"line_start":545,"line_end":545,"column_start":5,"column_end":73}},{"value":"/ synchronous code to asynchronous code, and will work even if the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412131,"byte_end":9412199,"line_start":546,"line_end":546,"column_start":5,"column_end":73}},{"value":"/ receiver is not using [`blocking_recv`] to receive the message.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412204,"byte_end":9412271,"line_start":547,"line_end":547,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412276,"byte_end":9412279,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ [`blocking_recv`]: fn@crate::sync::mpsc::Receiver::blocking_recv","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412284,"byte_end":9412352,"line_start":549,"line_end":549,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412357,"byte_end":9412360,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412365,"byte_end":9412377,"line_start":551,"line_end":551,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412382,"byte_end":9412385,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412390,"byte_end":9412457,"line_start":553,"line_end":553,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412462,"byte_end":9412474,"line_start":554,"line_end":554,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412479,"byte_end":9412482,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412487,"byte_end":9412501,"line_start":556,"line_end":556,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412506,"byte_end":9412509,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412514,"byte_end":9412521,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412526,"byte_end":9412546,"line_start":559,"line_end":559,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412551,"byte_end":9412583,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412588,"byte_end":9412614,"line_start":561,"line_end":561,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412619,"byte_end":9412622,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412627,"byte_end":9412642,"line_start":563,"line_end":563,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412647,"byte_end":9412697,"line_start":564,"line_end":564,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412702,"byte_end":9412705,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412710,"byte_end":9412757,"line_start":566,"line_end":566,"column_start":5,"column_end":52}},{"value":"/         tx.blocking_send(10).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412762,"byte_end":9412804,"line_start":567,"line_end":567,"column_start":5,"column_end":47}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412809,"byte_end":9412820,"line_start":568,"line_end":568,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412825,"byte_end":9412828,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/     Runtime::new().unwrap().block_on(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412833,"byte_end":9412886,"line_start":570,"line_end":570,"column_start":5,"column_end":58}},{"value":"/         assert_eq!(Some(10), rx.recv().await);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412891,"byte_end":9412941,"line_start":571,"line_end":571,"column_start":5,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412946,"byte_end":9412957,"line_start":572,"line_end":572,"column_start":5,"column_end":16}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9412962,"byte_end":9412995,"line_start":573,"line_end":573,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413000,"byte_end":9413005,"line_start":574,"line_end":574,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413010,"byte_end":9413017,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413022,"byte_end":9413046,"line_start":576,"line_end":576,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5594},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413762,"byte_end":9413771,"line_start":599,"line_end":599,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`Receiver`] is dropped, or when the [`Receiver::close`] method is\n called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413180,"byte_end":9413244,"line_start":581,"line_end":581,"column_start":5,"column_end":69}},{"value":"/ [`Receiver`] is dropped, or when the [`Receiver::close`] method is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413249,"byte_end":9413319,"line_start":582,"line_end":582,"column_start":5,"column_end":75}},{"value":"/ called.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413324,"byte_end":9413335,"line_start":583,"line_end":583,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413340,"byte_end":9413343,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413348,"byte_end":9413393,"line_start":585,"line_end":585,"column_start":5,"column_end":50}},{"value":"/ [`Receiver::close`]: crate::sync::mpsc::Receiver::close","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413398,"byte_end":9413457,"line_start":586,"line_end":586,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413462,"byte_end":9413465,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413470,"byte_end":9413477,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(42);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413482,"byte_end":9413538,"line_start":589,"line_end":589,"column_start":5,"column_end":61}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413543,"byte_end":9413572,"line_start":590,"line_end":590,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413577,"byte_end":9413580,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413585,"byte_end":9413610,"line_start":592,"line_end":592,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413615,"byte_end":9413645,"line_start":593,"line_end":593,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413650,"byte_end":9413653,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413658,"byte_end":9413671,"line_start":595,"line_end":595,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413676,"byte_end":9413704,"line_start":596,"line_end":596,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413709,"byte_end":9413738,"line_start":597,"line_end":597,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413743,"byte_end":9413750,"line_start":598,"line_end":598,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5595},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9415162,"byte_end":9415169,"line_start":641,"line_end":641,"column_start":18,"column_end":25},"name":"reserve","qualname":"<Sender<T>>::reserve","value":"pub async fn reserve<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for channel capacity. Once capacity to send one message is\n available, it is reserved for the caller.","sig":null,"attributes":[{"value":"/ Wait for channel capacity. Once capacity to send one message is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413830,"byte_end":9413897,"line_start":603,"line_end":603,"column_start":5,"column_end":72}},{"value":"/ available, it is reserved for the caller.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413902,"byte_end":9413947,"line_start":604,"line_end":604,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413952,"byte_end":9413955,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9413960,"byte_end":9414035,"line_start":606,"line_end":606,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414040,"byte_end":9414115,"line_start":607,"line_end":607,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. A [`Permit`] is returned to track","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414120,"byte_end":9414193,"line_start":608,"line_end":608,"column_start":5,"column_end":78}},{"value":"/ the reserved capacity. The [`send`] function on [`Permit`] consumes the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414198,"byte_end":9414273,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/ reserved capacity.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414278,"byte_end":9414300,"line_start":610,"line_end":610,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414305,"byte_end":9414308,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414313,"byte_end":9414389,"line_start":612,"line_end":612,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414394,"byte_end":9414413,"line_start":613,"line_end":613,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414418,"byte_end":9414421,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414426,"byte_end":9414448,"line_start":615,"line_end":615,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414453,"byte_end":9414479,"line_start":616,"line_end":616,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414484,"byte_end":9414487,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414492,"byte_end":9414506,"line_start":618,"line_end":618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414511,"byte_end":9414514,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414519,"byte_end":9414526,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414531,"byte_end":9414557,"line_start":621,"line_end":621,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414562,"byte_end":9414565,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414570,"byte_end":9414588,"line_start":623,"line_end":623,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414593,"byte_end":9414614,"line_start":624,"line_end":624,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414619,"byte_end":9414663,"line_start":625,"line_end":625,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414668,"byte_end":9414671,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414676,"byte_end":9414703,"line_start":627,"line_end":627,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414708,"byte_end":9414757,"line_start":628,"line_end":628,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414762,"byte_end":9414765,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414770,"byte_end":9414836,"line_start":630,"line_end":630,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414841,"byte_end":9414871,"line_start":631,"line_end":631,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414876,"byte_end":9414919,"line_start":632,"line_end":632,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414924,"byte_end":9414927,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414932,"byte_end":9414973,"line_start":634,"line_end":634,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9414978,"byte_end":9415003,"line_start":635,"line_end":635,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9415008,"byte_end":9415011,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9415016,"byte_end":9415067,"line_start":637,"line_end":637,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9415072,"byte_end":9415122,"line_start":638,"line_end":638,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9415127,"byte_end":9415132,"line_start":639,"line_end":639,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9415137,"byte_end":9415144,"line_start":640,"line_end":640,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5598},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416932,"byte_end":9416943,"line_start":693,"line_end":693,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<Sender<T>>::try_reserve","value":"pub fn try_reserve(&Self) -> Result<Permit<, T>, TrySendError<()>>","parent":null,"children":[],"decl_id":null,"docs":" Try to acquire a slot in the channel without waiting for the slot to become\n available.","sig":null,"attributes":[{"value":"/ Try to acquire a slot in the channel without waiting for the slot to become","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9415411,"byte_end":9415490,"line_start":650,"line_end":650,"column_start":5,"column_end":84}},{"value":"/ available.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9415495,"byte_end":9415509,"line_start":651,"line_end":651,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9415514,"byte_end":9415517,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ If the channel is full this function will return [`TrySendError`], otherwise","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9415522,"byte_end":9415602,"line_start":653,"line_end":653,"column_start":5,"column_end":85}},{"value":"/ if there is a slot available it will return a [`Permit`] that will then allow you","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9415607,"byte_end":9415692,"line_start":654,"line_end":654,"column_start":5,"column_end":90}},{"value":"/ to [`send`] on the channel with a guaranteed slot. This function is similar to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9415697,"byte_end":9415779,"line_start":655,"line_end":655,"column_start":5,"column_end":87}},{"value":"/ [`reserve`] except it does not await for the slot to become available.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9415784,"byte_end":9415858,"line_start":656,"line_end":656,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9415863,"byte_end":9415866,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9415871,"byte_end":9415947,"line_start":658,"line_end":658,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9415952,"byte_end":9415971,"line_start":659,"line_end":659,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9415976,"byte_end":9415979,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9415984,"byte_end":9416006,"line_start":661,"line_end":661,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416011,"byte_end":9416037,"line_start":662,"line_end":662,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416042,"byte_end":9416074,"line_start":663,"line_end":663,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416079,"byte_end":9416082,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416087,"byte_end":9416101,"line_start":665,"line_end":665,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416106,"byte_end":9416109,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416114,"byte_end":9416121,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416126,"byte_end":9416152,"line_start":668,"line_end":668,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416157,"byte_end":9416160,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416165,"byte_end":9416183,"line_start":670,"line_end":670,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416188,"byte_end":9416209,"line_start":671,"line_end":671,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416214,"byte_end":9416258,"line_start":672,"line_end":672,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416263,"byte_end":9416266,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416271,"byte_end":9416298,"line_start":674,"line_end":674,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.try_reserve().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416303,"byte_end":9416350,"line_start":675,"line_end":675,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416355,"byte_end":9416358,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416363,"byte_end":9416429,"line_start":677,"line_end":677,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416434,"byte_end":9416464,"line_start":678,"line_end":678,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416469,"byte_end":9416512,"line_start":679,"line_end":679,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416517,"byte_end":9416520,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/     // Trying to reserve an additional slot on the `tx` will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416525,"byte_end":9416589,"line_start":681,"line_end":681,"column_start":5,"column_end":69}},{"value":"/     // fail because there is no capacity.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416594,"byte_end":9416639,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"/     assert!(tx.try_reserve().is_err());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416644,"byte_end":9416687,"line_start":683,"line_end":683,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416692,"byte_end":9416695,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416700,"byte_end":9416741,"line_start":685,"line_end":685,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416746,"byte_end":9416771,"line_start":686,"line_end":686,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416776,"byte_end":9416779,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416784,"byte_end":9416835,"line_start":688,"line_end":688,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416840,"byte_end":9416890,"line_start":689,"line_end":689,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416895,"byte_end":9416898,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416903,"byte_end":9416908,"line_start":691,"line_end":691,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9416913,"byte_end":9416920,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5607},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418660,"byte_end":9418664,"line_start":754,"line_end":754,"column_start":12,"column_end":16},"name":"send","qualname":"<Permit>::send","value":"pub fn send(Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9417587,"byte_end":9417633,"line_start":722,"line_end":722,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9417638,"byte_end":9417641,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9417646,"byte_end":9417721,"line_start":724,"line_end":724,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9417726,"byte_end":9417800,"line_start":725,"line_end":725,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9417805,"byte_end":9417879,"line_start":726,"line_end":726,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9417884,"byte_end":9417932,"line_start":727,"line_end":727,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9417937,"byte_end":9417940,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9417945,"byte_end":9417985,"line_start":729,"line_end":729,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9417990,"byte_end":9417993,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9417998,"byte_end":9418012,"line_start":731,"line_end":731,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418017,"byte_end":9418020,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418025,"byte_end":9418032,"line_start":733,"line_end":733,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418037,"byte_end":9418063,"line_start":734,"line_end":734,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418068,"byte_end":9418071,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418076,"byte_end":9418094,"line_start":736,"line_end":736,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418099,"byte_end":9418120,"line_start":737,"line_end":737,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418125,"byte_end":9418169,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418174,"byte_end":9418177,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418182,"byte_end":9418209,"line_start":740,"line_end":740,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418214,"byte_end":9418263,"line_start":741,"line_end":741,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418268,"byte_end":9418271,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418276,"byte_end":9418342,"line_start":743,"line_end":743,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418347,"byte_end":9418377,"line_start":744,"line_end":744,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418382,"byte_end":9418425,"line_start":745,"line_end":745,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418430,"byte_end":9418433,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418438,"byte_end":9418477,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/     permit.send(456);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418482,"byte_end":9418507,"line_start":748,"line_end":748,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418512,"byte_end":9418515,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418520,"byte_end":9418571,"line_start":750,"line_end":750,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418576,"byte_end":9418626,"line_start":751,"line_end":751,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418631,"byte_end":9418636,"line_start":752,"line_end":752,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418641,"byte_end":9418648,"line_start":753,"line_end":753,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5804},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9440916,"byte_end":9440931,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":5806}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9440758,"byte_end":9440812,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9440813,"byte_end":9440816,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9440817,"byte_end":9440849,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9440850,"byte_end":9440904,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":5813},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9441724,"byte_end":9441741,"line_start":40,"line_end":40,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":5815}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9441348,"byte_end":9441405,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9441406,"byte_end":9441409,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9441410,"byte_end":9441442,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9441443,"byte_end":9441497,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9441498,"byte_end":9441501,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`UnboundedReceiverStream`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9441502,"byte_end":9441584,"line_start":37,"line_end":37,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9441585,"byte_end":9441588,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`UnboundedReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.UnboundedReceiverStream.html","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9441589,"byte_end":9441712,"line_start":39,"line_end":39,"column_start":1,"column_end":124}}]},{"kind":"Function","id":{"krate":0,"index":5819},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9442573,"byte_end":9442590,"line_start":63,"line_end":63,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks without backpressure.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9442040,"byte_end":9442116,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ tasks without backpressure.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9442117,"byte_end":9442148,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9442149,"byte_end":9442152,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9442153,"byte_end":9442233,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9442234,"byte_end":9442313,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9442314,"byte_end":9442327,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9442328,"byte_end":9442331,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9442332,"byte_end":9442411,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9442412,"byte_end":9442488,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9442489,"byte_end":9442565,"line_start":62,"line_end":62,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":5825},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444069,"byte_end":9444073,"line_start":119,"line_end":119,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9442999,"byte_end":9443045,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443050,"byte_end":9443053,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443058,"byte_end":9443130,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443135,"byte_end":9443189,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443194,"byte_end":9443197,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443202,"byte_end":9443216,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443221,"byte_end":9443224,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443229,"byte_end":9443236,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443241,"byte_end":9443267,"line_start":88,"line_end":88,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443272,"byte_end":9443275,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443280,"byte_end":9443298,"line_start":90,"line_end":90,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443303,"byte_end":9443324,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443329,"byte_end":9443382,"line_start":92,"line_end":92,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443387,"byte_end":9443390,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443395,"byte_end":9443428,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443433,"byte_end":9443471,"line_start":95,"line_end":95,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443476,"byte_end":9443487,"line_start":96,"line_end":96,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443492,"byte_end":9443495,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443500,"byte_end":9443551,"line_start":98,"line_end":98,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443556,"byte_end":9443598,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443603,"byte_end":9443608,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443613,"byte_end":9443620,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443625,"byte_end":9443628,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443633,"byte_end":9443657,"line_start":103,"line_end":103,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443662,"byte_end":9443665,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443670,"byte_end":9443677,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443682,"byte_end":9443708,"line_start":106,"line_end":106,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443713,"byte_end":9443716,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443721,"byte_end":9443739,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443744,"byte_end":9443765,"line_start":109,"line_end":109,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443770,"byte_end":9443823,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443828,"byte_end":9443831,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443836,"byte_end":9443870,"line_start":112,"line_end":112,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443875,"byte_end":9443909,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443914,"byte_end":9443917,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443922,"byte_end":9443973,"line_start":115,"line_end":115,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9443978,"byte_end":9444029,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444034,"byte_end":9444039,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444044,"byte_end":9444051,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5830},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444880,"byte_end":9444893,"line_start":151,"line_end":151,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<UnboundedReceiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444195,"byte_end":9444257,"line_start":125,"line_end":125,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444262,"byte_end":9444265,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444270,"byte_end":9444282,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444287,"byte_end":9444290,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444295,"byte_end":9444362,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444367,"byte_end":9444379,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444384,"byte_end":9444387,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444392,"byte_end":9444406,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444411,"byte_end":9444414,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444419,"byte_end":9444426,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444431,"byte_end":9444451,"line_start":135,"line_end":135,"column_start":5,"column_end":25}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444456,"byte_end":9444482,"line_start":136,"line_end":136,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444487,"byte_end":9444490,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444495,"byte_end":9444513,"line_start":138,"line_end":138,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444518,"byte_end":9444539,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel::<u8>();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444544,"byte_end":9444603,"line_start":140,"line_end":140,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444608,"byte_end":9444611,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444616,"byte_end":9444663,"line_start":142,"line_end":142,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444668,"byte_end":9444721,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444726,"byte_end":9444737,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444742,"byte_end":9444745,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     let _ = tx.send(10);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444750,"byte_end":9444778,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/     sync_code.join().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444783,"byte_end":9444817,"line_start":147,"line_end":147,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444822,"byte_end":9444827,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444832,"byte_end":9444839,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444844,"byte_end":9444868,"line_start":150,"line_end":150,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5831},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9445213,"byte_end":9445218,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9444976,"byte_end":9445040,"line_start":155,"line_end":155,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9445045,"byte_end":9445048,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9445053,"byte_end":9445128,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9445133,"byte_end":9445201,"line_start":158,"line_end":158,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5832},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9446059,"byte_end":9446068,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9445270,"byte_end":9445324,"line_start":163,"line_end":163,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9445329,"byte_end":9445332,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9445337,"byte_end":9445361,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9445366,"byte_end":9445369,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9445374,"byte_end":9445448,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9445453,"byte_end":9445467,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9445472,"byte_end":9445534,"line_start":169,"line_end":169,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9445539,"byte_end":9445613,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9445618,"byte_end":9445670,"line_start":171,"line_end":171,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9445675,"byte_end":9445678,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9445683,"byte_end":9445755,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9445760,"byte_end":9445836,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9445841,"byte_end":9445917,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9445922,"byte_end":9445993,"line_start":176,"line_end":176,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9445998,"byte_end":9446047,"line_start":177,"line_end":177,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5836},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9446996,"byte_end":9447000,"line_start":200,"line_end":200,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9446308,"byte_end":9446382,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9446387,"byte_end":9446390,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9446395,"byte_end":9446480,"line_start":190,"line_end":190,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9446485,"byte_end":9446566,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9446571,"byte_end":9446639,"line_start":192,"line_end":192,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9446644,"byte_end":9446647,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9446652,"byte_end":9446725,"line_start":194,"line_end":194,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9446730,"byte_end":9446801,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9446806,"byte_end":9446883,"line_start":196,"line_end":196,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9446888,"byte_end":9446891,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9446896,"byte_end":9446935,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9446940,"byte_end":9446984,"line_start":199,"line_end":199,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5842},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448929,"byte_end":9448935,"line_start":270,"line_end":270,"column_start":18,"column_end":24},"name":"closed","qualname":"<UnboundedSender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448038,"byte_end":9448082,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448087,"byte_end":9448090,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448095,"byte_end":9448170,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448175,"byte_end":9448230,"line_start":242,"line_end":242,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448235,"byte_end":9448238,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448243,"byte_end":9448257,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448262,"byte_end":9448265,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448270,"byte_end":9448277,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448282,"byte_end":9448308,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448313,"byte_end":9448316,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448321,"byte_end":9448339,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448344,"byte_end":9448365,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::unbounded_channel::<()>();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448370,"byte_end":9448426,"line_start":251,"line_end":251,"column_start":5,"column_end":61}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448431,"byte_end":9448461,"line_start":252,"line_end":252,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448466,"byte_end":9448496,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448501,"byte_end":9448531,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448536,"byte_end":9448566,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448571,"byte_end":9448604,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448609,"byte_end":9448630,"line_start":257,"line_end":257,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448635,"byte_end":9448646,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448651,"byte_end":9448654,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448659,"byte_end":9448682,"line_start":260,"line_end":260,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448687,"byte_end":9448712,"line_start":261,"line_end":261,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448717,"byte_end":9448742,"line_start":262,"line_end":262,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448747,"byte_end":9448772,"line_start":263,"line_end":263,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448777,"byte_end":9448802,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448807,"byte_end":9448831,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448836,"byte_end":9448846,"line_start":266,"line_end":266,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448894,"byte_end":9448899,"line_start":268,"line_end":268,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448904,"byte_end":9448911,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5845},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9449632,"byte_end":9449641,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`UnboundedReceiver`] is dropped, or when the\n [`UnboundedReceiver::close`] method is called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9448988,"byte_end":9449052,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/ [`UnboundedReceiver`] is dropped, or when the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9449057,"byte_end":9449106,"line_start":274,"line_end":274,"column_start":5,"column_end":54}},{"value":"/ [`UnboundedReceiver::close`] method is called.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9449111,"byte_end":9449161,"line_start":275,"line_end":275,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9449166,"byte_end":9449169,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9449174,"byte_end":9449237,"line_start":277,"line_end":277,"column_start":5,"column_end":68}},{"value":"/ [`UnboundedReceiver::close`]: crate::sync::mpsc::UnboundedReceiver::close","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9449242,"byte_end":9449319,"line_start":278,"line_end":278,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9449324,"byte_end":9449327,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9449332,"byte_end":9449339,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9449344,"byte_end":9449408,"line_start":281,"line_end":281,"column_start":5,"column_end":69}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9449413,"byte_end":9449442,"line_start":282,"line_end":282,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9449447,"byte_end":9449450,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9449455,"byte_end":9449480,"line_start":284,"line_end":284,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9449485,"byte_end":9449515,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9449520,"byte_end":9449523,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9449528,"byte_end":9449541,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9449546,"byte_end":9449574,"line_start":288,"line_end":288,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9449579,"byte_end":9449608,"line_start":289,"line_end":289,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9449613,"byte_end":9449620,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5850},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","parent":null,"children":[{"krate":0,"index":5851},{"krate":0,"index":5852},{"krate":0,"index":6538},{"krate":0,"index":6542},{"krate":0,"index":5853},{"krate":0,"index":5856},{"krate":0,"index":6545},{"krate":0,"index":6553},{"krate":0,"index":5858},{"krate":0,"index":5860},{"krate":0,"index":5863},{"krate":0,"index":6556},{"krate":0,"index":6559},{"krate":0,"index":5866},{"krate":0,"index":5868},{"krate":0,"index":6566},{"krate":0,"index":6574},{"krate":0,"index":6561},{"krate":0,"index":6563}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"/ Channel error types","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9449698,"byte_end":9449721,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6538},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9449825,"byte_end":9449834,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9449761,"byte_end":9449796,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":6541},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9449838,"byte_end":9449843,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":6538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6547},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9450387,"byte_end":9450391,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":6545},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9450255,"byte_end":9450323,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9450328,"byte_end":9450382,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6550},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9450492,"byte_end":9450498,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":6545},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9450401,"byte_end":9450470,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9450475,"byte_end":9450487,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":6545},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9450233,"byte_end":9450245,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> {\n\n    /// The data could not be sent on the channel because the channel is\n    /// currently full and sending would require blocking.\n    Full(T),\n\n    /// The receive half of the channel was explicitly closed or has been\n    /// dropped.\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":6547},{"krate":0,"index":6550}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9450087,"byte_end":9450158,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9450159,"byte_end":9450206,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6556},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9451136,"byte_end":9451145,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9451074,"byte_end":9451107,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6568},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9452651,"byte_end":9452658,"line_start":109,"line_end":109,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":6566},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6571},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9452771,"byte_end":9452777,"line_start":113,"line_end":113,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":6566},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6566},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9452489,"byte_end":9452505,"line_start":106,"line_end":106,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"pub enum SendTimeoutError<T> {\n\n    #[doc =\n      r\" The data could not be sent on the channel because the channel is\"]\n    #[doc = r\" full, and the timeout to send has elapsed.\"]\n    Timeout(T),\n\n    #[doc =\n      r\" The receive half of the channel was explicitly closed or has been\"]\n    #[doc = r\" dropped.\"]\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":6568},{"krate":0,"index":6571}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":24384,"byte_end":24408,"line_start":311,"line_end":311,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5879},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9457763,"byte_end":9457768,"line_start":120,"line_end":120,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":5881},{"krate":0,"index":5882}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9453510,"byte_end":9453548,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9453549,"byte_end":9453552,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to an asynchronous [`std::sync::Mutex`], with one","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9453553,"byte_end":9453631,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ major difference: [`lock`] does not block and the lock guard can be held","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9453632,"byte_end":9453708,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ across await points.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9453709,"byte_end":9453733,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9453734,"byte_end":9453737,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9453738,"byte_end":9453779,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9453780,"byte_end":9453783,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9453784,"byte_end":9453864,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code. This section","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9453865,"byte_end":9453944,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will help you decide on which kind of mutex you should use.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9453945,"byte_end":9454008,"line_start":21,"line_end":21,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9454009,"byte_end":9454012,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The primary use case of the async mutex is to provide shared mutable access","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9454013,"byte_end":9454092,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ to IO resources such as a database connection. If the data stored behind the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9454093,"byte_end":9454173,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ mutex is just data, it is often better to use a blocking mutex such as the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9454174,"byte_end":9454252,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ one in the standard library or [`parking_lot`]. This is because the feature","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9454253,"byte_end":9454332,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ that the async mutex offers over the blocking mutex is that it is possible","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9454333,"byte_end":9454411,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ to keep the mutex locked across an `.await` point, which is rarely necessary","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9454412,"byte_end":9454492,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ for data.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9454493,"byte_end":9454506,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9454507,"byte_end":9454510,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9454511,"byte_end":9454590,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9454591,"byte_end":9454667,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9454668,"byte_end":9454745,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9454746,"byte_end":9454779,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9454780,"byte_end":9454783,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9454784,"byte_end":9454859,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9454860,"byte_end":9454938,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9454939,"byte_end":9454981,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9454982,"byte_end":9454985,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9454986,"byte_end":9455013,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455014,"byte_end":9455062,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455063,"byte_end":9455141,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455142,"byte_end":9455145,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455146,"byte_end":9455161,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455162,"byte_end":9455165,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455166,"byte_end":9455184,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455185,"byte_end":9455212,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455213,"byte_end":9455236,"line_start":48,"line_end":48,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455237,"byte_end":9455240,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455241,"byte_end":9455259,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455260,"byte_end":9455281,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455282,"byte_end":9455326,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455327,"byte_end":9455366,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455367,"byte_end":9455370,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455371,"byte_end":9455404,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455405,"byte_end":9455451,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455452,"byte_end":9455475,"line_start":57,"line_end":57,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455476,"byte_end":9455487,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455488,"byte_end":9455491,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455492,"byte_end":9455534,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455535,"byte_end":9455554,"line_start":61,"line_end":61,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455555,"byte_end":9455560,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455561,"byte_end":9455568,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455569,"byte_end":9455572,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455573,"byte_end":9455576,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455577,"byte_end":9455595,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455596,"byte_end":9455623,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455624,"byte_end":9455647,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455648,"byte_end":9455651,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455652,"byte_end":9455670,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455671,"byte_end":9455692,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455693,"byte_end":9455737,"line_start":72,"line_end":72,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455738,"byte_end":9455741,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455742,"byte_end":9455765,"line_start":74,"line_end":74,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455766,"byte_end":9455812,"line_start":75,"line_end":75,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455813,"byte_end":9455850,"line_start":76,"line_end":76,"column_start":1,"column_end":38}},{"value":"/             for _ in 0..10 {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455851,"byte_end":9455883,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455884,"byte_end":9455941,"line_start":78,"line_end":78,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455942,"byte_end":9455973,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{}\", lock);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9455974,"byte_end":9456015,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456016,"byte_end":9456033,"line_start":81,"line_end":81,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456034,"byte_end":9456049,"line_start":82,"line_end":82,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456050,"byte_end":9456059,"line_start":83,"line_end":83,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456060,"byte_end":9456063,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456064,"byte_end":9456078,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456079,"byte_end":9456121,"line_start":86,"line_end":86,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456122,"byte_end":9456144,"line_start":87,"line_end":87,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456145,"byte_end":9456158,"line_start":88,"line_end":88,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456159,"byte_end":9456168,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456169,"byte_end":9456203,"line_start":90,"line_end":90,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456204,"byte_end":9456209,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456210,"byte_end":9456217,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456218,"byte_end":9456294,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456295,"byte_end":9456368,"line_start":94,"line_end":94,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456369,"byte_end":9456384,"line_start":95,"line_end":95,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456385,"byte_end":9456460,"line_start":96,"line_end":96,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456461,"byte_end":9456537,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456538,"byte_end":9456590,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456591,"byte_end":9456594,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456595,"byte_end":9456673,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456674,"byte_end":9456754,"line_start":101,"line_end":101,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456755,"byte_end":9456831,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/ data. This is why the output of the program above is an in-order count to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456832,"byte_end":9456909,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ 50. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456910,"byte_end":9456988,"line_start":104,"line_end":104,"column_start":1,"column_end":79}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9456989,"byte_end":9457069,"line_start":105,"line_end":105,"column_start":1,"column_end":81}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9457070,"byte_end":9457150,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9457151,"byte_end":9457220,"line_start":107,"line_end":107,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9457221,"byte_end":9457224,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9457225,"byte_end":9457304,"line_start":109,"line_end":109,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9457305,"byte_end":9457384,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9457385,"byte_end":9457463,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9457464,"byte_end":9457525,"line_start":112,"line_end":112,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9457526,"byte_end":9457529,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9457530,"byte_end":9457557,"line_start":114,"line_end":114,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9457558,"byte_end":9457595,"line_start":115,"line_end":115,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9457596,"byte_end":9457630,"line_start":116,"line_end":116,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9457631,"byte_end":9457680,"line_start":117,"line_end":117,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9457681,"byte_end":9457718,"line_start":118,"line_end":118,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9457719,"byte_end":9457751,"line_start":119,"line_end":119,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":5883},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458197,"byte_end":9458207,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":5886}],"decl_id":null,"docs":" A handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9457836,"byte_end":9457867,"line_start":125,"line_end":125,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9457868,"byte_end":9457871,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9457872,"byte_end":9457951,"line_start":127,"line_end":127,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9457952,"byte_end":9458027,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458028,"byte_end":9458061,"line_start":129,"line_end":129,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458062,"byte_end":9458065,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458066,"byte_end":9458144,"line_start":131,"line_end":131,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458145,"byte_end":9458185,"line_start":132,"line_end":132,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5887},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458995,"byte_end":9459010,"line_start":152,"line_end":152,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":5889}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458252,"byte_end":9458290,"line_start":137,"line_end":137,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458291,"byte_end":9458294,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458295,"byte_end":9458376,"line_start":139,"line_end":139,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458377,"byte_end":9458457,"line_start":140,"line_end":140,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458458,"byte_end":9458532,"line_start":141,"line_end":141,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458533,"byte_end":9458594,"line_start":142,"line_end":142,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458595,"byte_end":9458598,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458599,"byte_end":9458678,"line_start":144,"line_end":144,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-counted pointer to the original","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458679,"byte_end":9458758,"line_start":145,"line_end":145,"column_start":1,"column_end":80}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458759,"byte_end":9458827,"line_start":146,"line_end":146,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458828,"byte_end":9458831,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458832,"byte_end":9458910,"line_start":148,"line_end":148,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458911,"byte_end":9458951,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458952,"byte_end":9458955,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9458956,"byte_end":9458983,"line_start":151,"line_end":151,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6577},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9460099,"byte_end":9460111,"line_start":179,"line_end":179,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and\n [`RwLock::try_write`] functions.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459510,"byte_end":9459583,"line_start":164,"line_end":164,"column_start":1,"column_end":74}},{"value":"/ [`RwLock::try_write`] functions.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459584,"byte_end":9459620,"line_start":165,"line_end":165,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459621,"byte_end":9459624,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ `Mutex::try_lock` operation will only fail if the mutex is already locked.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459625,"byte_end":9459703,"line_start":167,"line_end":167,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459704,"byte_end":9459707,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_read` operation will only fail if the lock is currently held","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459708,"byte_end":9459785,"line_start":169,"line_end":169,"column_start":1,"column_end":78}},{"value":"/ by an exclusive writer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459786,"byte_end":9459813,"line_start":170,"line_end":170,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459814,"byte_end":9459817,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_write` operation will if lock is held by any reader or by an","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459818,"byte_end":9459895,"line_start":172,"line_end":172,"column_start":1,"column_end":78}},{"value":"/ exclusive writer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459896,"byte_end":9459917,"line_start":173,"line_end":173,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459918,"byte_end":9459921,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459922,"byte_end":9459962,"line_start":175,"line_end":175,"column_start":1,"column_end":41}},{"value":"/ [`RwLock::try_read`]: fn@super::RwLock::try_read","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459963,"byte_end":9460015,"line_start":176,"line_end":176,"column_start":1,"column_end":53}},{"value":"/ [`RwLock::try_write`]: fn@super::RwLock::try_write","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9460016,"byte_end":9460070,"line_start":177,"line_end":177,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5903},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461338,"byte_end":9461341,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461135,"byte_end":9461193,"line_start":214,"line_end":214,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461198,"byte_end":9461201,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461206,"byte_end":9461220,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461225,"byte_end":9461228,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461233,"byte_end":9461240,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461245,"byte_end":9461272,"line_start":219,"line_end":219,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461277,"byte_end":9461280,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461285,"byte_end":9461314,"line_start":221,"line_end":221,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461319,"byte_end":9461326,"line_start":222,"line_end":222,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5904},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461859,"byte_end":9461868,"line_start":244,"line_end":244,"column_start":18,"column_end":27},"name":"const_new","qualname":"<Mutex<T>>::const_new","value":"pub const fn const_new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461506,"byte_end":9461564,"line_start":233,"line_end":233,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461569,"byte_end":9461572,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461577,"byte_end":9461591,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461596,"byte_end":9461599,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461604,"byte_end":9461611,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461616,"byte_end":9461643,"line_start":238,"line_end":238,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461648,"byte_end":9461651,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ static LOCK: Mutex<i32> = Mutex::const_new(5);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461656,"byte_end":9461706,"line_start":240,"line_end":240,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461711,"byte_end":9461718,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"parking_lot\", not(all(loom, test)),))","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461723,"byte_end":9461782,"line_start":242,"line_end":242,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":5905},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462499,"byte_end":9462503,"line_start":271,"line_end":271,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462039,"byte_end":9462085,"line_start":254,"line_end":254,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462090,"byte_end":9462136,"line_start":255,"line_end":255,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462141,"byte_end":9462212,"line_start":256,"line_end":256,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462217,"byte_end":9462220,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462225,"byte_end":9462239,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462244,"byte_end":9462247,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462252,"byte_end":9462259,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462264,"byte_end":9462291,"line_start":261,"line_end":261,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462296,"byte_end":9462299,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462304,"byte_end":9462322,"line_start":263,"line_end":263,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462327,"byte_end":9462348,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462353,"byte_end":9462387,"line_start":265,"line_end":265,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462392,"byte_end":9462395,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462400,"byte_end":9462439,"line_start":267,"line_end":267,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462444,"byte_end":9462459,"line_start":268,"line_end":268,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462464,"byte_end":9462469,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462474,"byte_end":9462481,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5908},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463530,"byte_end":9463540,"line_start":302,"line_end":302,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462609,"byte_end":9462683,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462688,"byte_end":9462755,"line_start":277,"line_end":277,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462760,"byte_end":9462784,"line_start":278,"line_end":278,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462789,"byte_end":9462792,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462797,"byte_end":9462870,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462875,"byte_end":9462948,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9462953,"byte_end":9463024,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463029,"byte_end":9463104,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463109,"byte_end":9463151,"line_start":284,"line_end":284,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463156,"byte_end":9463159,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463164,"byte_end":9463178,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463183,"byte_end":9463186,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463191,"byte_end":9463198,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463203,"byte_end":9463230,"line_start":289,"line_end":289,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463235,"byte_end":9463258,"line_start":290,"line_end":290,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463263,"byte_end":9463266,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463271,"byte_end":9463289,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463294,"byte_end":9463315,"line_start":293,"line_end":293,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463320,"byte_end":9463364,"line_start":294,"line_end":294,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463369,"byte_end":9463372,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463377,"byte_end":9463430,"line_start":296,"line_end":296,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463435,"byte_end":9463450,"line_start":297,"line_end":297,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463455,"byte_end":9463460,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463465,"byte_end":9463472,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463477,"byte_end":9463480,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463485,"byte_end":9463512,"line_start":301,"line_end":301,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5915},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464417,"byte_end":9464425,"line_start":332,"line_end":332,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9463949,"byte_end":9464018,"line_start":315,"line_end":315,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464023,"byte_end":9464065,"line_start":316,"line_end":316,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464070,"byte_end":9464073,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464078,"byte_end":9464112,"line_start":318,"line_end":318,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464117,"byte_end":9464131,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464136,"byte_end":9464139,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464144,"byte_end":9464151,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464156,"byte_end":9464183,"line_start":322,"line_end":322,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464188,"byte_end":9464251,"line_start":323,"line_end":323,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464256,"byte_end":9464259,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464264,"byte_end":9464294,"line_start":325,"line_end":325,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464299,"byte_end":9464302,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464307,"byte_end":9464337,"line_start":327,"line_end":327,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464342,"byte_end":9464364,"line_start":328,"line_end":328,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464369,"byte_end":9464381,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464386,"byte_end":9464393,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464398,"byte_end":9464405,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5916},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465105,"byte_end":9465112,"line_start":356,"line_end":356,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464634,"byte_end":9464689,"line_start":339,"line_end":339,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464694,"byte_end":9464697,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464702,"byte_end":9464777,"line_start":341,"line_end":341,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464782,"byte_end":9464856,"line_start":342,"line_end":342,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464861,"byte_end":9464864,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464869,"byte_end":9464883,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464888,"byte_end":9464891,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464896,"byte_end":9464903,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464908,"byte_end":9464935,"line_start":347,"line_end":347,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464940,"byte_end":9464943,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464948,"byte_end":9464963,"line_start":349,"line_end":349,"column_start":5,"column_end":20}},{"value":"/     let mut mutex = Mutex::new(1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9464968,"byte_end":9465006,"line_start":350,"line_end":350,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465011,"byte_end":9465014,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.get_mut();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465019,"byte_end":9465051,"line_start":352,"line_end":352,"column_start":5,"column_end":37}},{"value":"/     *n = 2;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465056,"byte_end":9465071,"line_start":353,"line_end":353,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465076,"byte_end":9465081,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465086,"byte_end":9465093,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5917},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466193,"byte_end":9466207,"line_start":387,"line_end":387,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465281,"byte_end":9465355,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465360,"byte_end":9465397,"line_start":364,"line_end":364,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465402,"byte_end":9465405,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465410,"byte_end":9465478,"line_start":366,"line_end":366,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465483,"byte_end":9465556,"line_start":367,"line_end":367,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465561,"byte_end":9465637,"line_start":368,"line_end":368,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465642,"byte_end":9465716,"line_start":369,"line_end":369,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465721,"byte_end":9465769,"line_start":370,"line_end":370,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465774,"byte_end":9465777,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465782,"byte_end":9465816,"line_start":372,"line_end":372,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465821,"byte_end":9465848,"line_start":373,"line_end":373,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465853,"byte_end":9465867,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465872,"byte_end":9465875,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465880,"byte_end":9465887,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465892,"byte_end":9465919,"line_start":377,"line_end":377,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465924,"byte_end":9465947,"line_start":378,"line_end":378,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9465952,"byte_end":9466015,"line_start":379,"line_end":379,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466020,"byte_end":9466023,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466028,"byte_end":9466068,"line_start":381,"line_end":381,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466073,"byte_end":9466076,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466081,"byte_end":9466125,"line_start":383,"line_end":383,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466130,"byte_end":9466152,"line_start":384,"line_end":384,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466157,"byte_end":9466169,"line_start":385,"line_end":385,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466174,"byte_end":9466181,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5918},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466765,"byte_end":9466775,"line_start":408,"line_end":408,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466432,"byte_end":9466486,"line_start":394,"line_end":394,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466491,"byte_end":9466505,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466510,"byte_end":9466513,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466518,"byte_end":9466525,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466530,"byte_end":9466557,"line_start":398,"line_end":398,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466562,"byte_end":9466565,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466570,"byte_end":9466588,"line_start":400,"line_end":400,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466593,"byte_end":9466614,"line_start":401,"line_end":401,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466619,"byte_end":9466653,"line_start":402,"line_end":402,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466658,"byte_end":9466661,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466666,"byte_end":9466701,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466706,"byte_end":9466731,"line_start":405,"line_end":405,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466736,"byte_end":9466741,"line_start":406,"line_end":406,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466746,"byte_end":9466753,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6582},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472679,"byte_end":9472685,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":6583},{"krate":0,"index":6584}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9469836,"byte_end":9469872,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9469873,"byte_end":9469876,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9469877,"byte_end":9469953,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9469954,"byte_end":9470034,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9470035,"byte_end":9470076,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9470077,"byte_end":9470080,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9470081,"byte_end":9470155,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify_one()`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9470156,"byte_end":9470241,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9470242,"byte_end":9470308,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9470309,"byte_end":9470312,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9470313,"byte_end":9470371,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9470372,"byte_end":9470452,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9470453,"byte_end":9470533,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify_one()`] sets the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9470534,"byte_end":9470617,"line_start":35,"line_end":35,"column_start":1,"column_end":84}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9470618,"byte_end":9470668,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9470669,"byte_end":9470672,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **before** `notified().await`, then the next call to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9470673,"byte_end":9470757,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9470758,"byte_end":9470833,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9470834,"byte_end":9470904,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9470905,"byte_end":9470908,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9470909,"byte_end":9470993,"line_start":42,"line_end":42,"column_start":1,"column_end":85}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9470994,"byte_end":9471067,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471068,"byte_end":9471139,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471140,"byte_end":9471143,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471144,"byte_end":9471158,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471159,"byte_end":9471162,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471163,"byte_end":9471179,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471180,"byte_end":9471183,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471184,"byte_end":9471191,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471192,"byte_end":9471220,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471221,"byte_end":9471244,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471245,"byte_end":9471248,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471249,"byte_end":9471267,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471268,"byte_end":9471289,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471290,"byte_end":9471335,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471336,"byte_end":9471373,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471374,"byte_end":9471377,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471378,"byte_end":9471411,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471412,"byte_end":9471449,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471450,"byte_end":9471496,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471497,"byte_end":9471508,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471509,"byte_end":9471512,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471513,"byte_end":9471554,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"/     notify.notify_one();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471555,"byte_end":9471583,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471584,"byte_end":9471589,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471590,"byte_end":9471597,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471598,"byte_end":9471601,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471602,"byte_end":9471627,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471628,"byte_end":9471631,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471632,"byte_end":9471639,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471640,"byte_end":9471668,"line_start":72,"line_end":72,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471669,"byte_end":9471672,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471673,"byte_end":9471708,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471709,"byte_end":9471734,"line_start":75,"line_end":75,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471735,"byte_end":9471738,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471739,"byte_end":9471762,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471763,"byte_end":9471798,"line_start":78,"line_end":78,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471799,"byte_end":9471822,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471823,"byte_end":9471828,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471829,"byte_end":9471832,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471833,"byte_end":9471857,"line_start":82,"line_end":82,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471858,"byte_end":9471896,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471897,"byte_end":9471936,"line_start":84,"line_end":84,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471937,"byte_end":9471971,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471972,"byte_end":9471975,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9471976,"byte_end":9472031,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify_one();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472032,"byte_end":9472069,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472070,"byte_end":9472079,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472080,"byte_end":9472083,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472084,"byte_end":9472123,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472124,"byte_end":9472142,"line_start":92,"line_end":92,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472143,"byte_end":9472174,"line_start":93,"line_end":93,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472175,"byte_end":9472253,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472254,"byte_end":9472287,"line_start":95,"line_end":95,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472288,"byte_end":9472305,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472306,"byte_end":9472309,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472310,"byte_end":9472360,"line_start":98,"line_end":98,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472361,"byte_end":9472406,"line_start":99,"line_end":99,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472407,"byte_end":9472420,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472421,"byte_end":9472430,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472431,"byte_end":9472436,"line_start":102,"line_end":102,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472437,"byte_end":9472444,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472445,"byte_end":9472448,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472449,"byte_end":9472478,"line_start":105,"line_end":105,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472479,"byte_end":9472520,"line_start":106,"line_end":106,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472521,"byte_end":9472565,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/ [`notify_one()`]: Notify::notify_one()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472566,"byte_end":9472608,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9472609,"byte_end":9472650,"line_start":109,"line_end":109,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6604},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9473535,"byte_end":9473543,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"Notified","qualname":"::sync::notify::Notified","value":"Notified {  }","parent":null,"children":[{"krate":0,"index":6606},{"krate":0,"index":6607},{"krate":0,"index":6608}],"decl_id":null,"docs":" Future returned from `notified()`\n","sig":null,"attributes":[{"value":"/ Future returned from `notified()`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9473469,"byte_end":9473506,"line_start":143,"line_end":143,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5997},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9474884,"byte_end":9474887,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9474680,"byte_end":9474736,"line_start":196,"line_end":196,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9474741,"byte_end":9474744,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9474749,"byte_end":9474763,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9474768,"byte_end":9474771,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9474776,"byte_end":9474783,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9474788,"byte_end":9474816,"line_start":201,"line_end":201,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9474821,"byte_end":9474824,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9474829,"byte_end":9474860,"line_start":203,"line_end":203,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9474865,"byte_end":9474872,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5998},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475381,"byte_end":9475390,"line_start":223,"line_end":223,"column_start":18,"column_end":27},"name":"const_new","qualname":"<Notify>::const_new","value":"pub const fn const_new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475032,"byte_end":9475088,"line_start":212,"line_end":212,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475093,"byte_end":9475096,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475101,"byte_end":9475115,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475120,"byte_end":9475123,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475128,"byte_end":9475135,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475140,"byte_end":9475168,"line_start":217,"line_end":217,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475173,"byte_end":9475176,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ static NOTIFY: Notify = Notify::const_new();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475181,"byte_end":9475229,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475234,"byte_end":9475241,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"parking_lot\", not(all(loom, test))))","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475246,"byte_end":9475304,"line_start":221,"line_end":221,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5999},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476588,"byte_end":9476596,"line_start":265,"line_end":265,"column_start":12,"column_end":20},"name":"notified","qualname":"<Notify>::notified","value":"pub fn notified(&Self) -> Notified","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475541,"byte_end":9475569,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475574,"byte_end":9475577,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475582,"byte_end":9475600,"line_start":232,"line_end":232,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475605,"byte_end":9475608,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475613,"byte_end":9475626,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/ async fn notified(&self);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475631,"byte_end":9475660,"line_start":235,"line_end":235,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475665,"byte_end":9475672,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475677,"byte_end":9475680,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475685,"byte_end":9475761,"line_start":238,"line_end":238,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify_one()`], then `notified().await` will complete","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475766,"byte_end":9475844,"line_start":239,"line_end":239,"column_start":5,"column_end":83}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475849,"byte_end":9475924,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify_one()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9475929,"byte_end":9476002,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476007,"byte_end":9476010,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ [`notify_one()`]: Notify::notify_one","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476015,"byte_end":9476055,"line_start":243,"line_end":243,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476060,"byte_end":9476063,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476068,"byte_end":9476082,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476087,"byte_end":9476090,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476095,"byte_end":9476102,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476107,"byte_end":9476135,"line_start":248,"line_end":248,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476140,"byte_end":9476163,"line_start":249,"line_end":249,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476168,"byte_end":9476171,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476176,"byte_end":9476194,"line_start":251,"line_end":251,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476199,"byte_end":9476220,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476225,"byte_end":9476270,"line_start":253,"line_end":253,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476275,"byte_end":9476312,"line_start":254,"line_end":254,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476317,"byte_end":9476320,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476325,"byte_end":9476358,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476363,"byte_end":9476400,"line_start":257,"line_end":257,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476405,"byte_end":9476451,"line_start":258,"line_end":258,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476456,"byte_end":9476467,"line_start":259,"line_end":259,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476472,"byte_end":9476475,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476480,"byte_end":9476521,"line_start":261,"line_end":261,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476526,"byte_end":9476554,"line_start":262,"line_end":262,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476559,"byte_end":9476564,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9476569,"byte_end":9476576,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6000},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9478292,"byte_end":9478302,"line_start":315,"line_end":315,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Notify>::notify_one","value":"pub fn notify_one(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477121,"byte_end":9477148,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477153,"byte_end":9477156,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477161,"byte_end":9477232,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477237,"byte_end":9477305,"line_start":284,"line_end":284,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477310,"byte_end":9477386,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify_one()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477391,"byte_end":9477436,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477441,"byte_end":9477444,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477449,"byte_end":9477523,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ `notify_one` will result in a single permit being stored. The next call to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477528,"byte_end":9477606,"line_start":289,"line_end":289,"column_start":5,"column_end":83}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477611,"byte_end":9477683,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477688,"byte_end":9477702,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477707,"byte_end":9477710,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477715,"byte_end":9477759,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477764,"byte_end":9477767,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477772,"byte_end":9477786,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477791,"byte_end":9477794,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477799,"byte_end":9477806,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477811,"byte_end":9477839,"line_start":298,"line_end":298,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477844,"byte_end":9477867,"line_start":299,"line_end":299,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477872,"byte_end":9477875,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477880,"byte_end":9477898,"line_start":301,"line_end":301,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477903,"byte_end":9477924,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477929,"byte_end":9477974,"line_start":303,"line_end":303,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9477979,"byte_end":9478016,"line_start":304,"line_end":304,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9478021,"byte_end":9478024,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9478029,"byte_end":9478062,"line_start":306,"line_end":306,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9478067,"byte_end":9478104,"line_start":307,"line_end":307,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9478109,"byte_end":9478155,"line_start":308,"line_end":308,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9478160,"byte_end":9478171,"line_start":309,"line_end":309,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9478176,"byte_end":9478179,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9478184,"byte_end":9478225,"line_start":311,"line_end":311,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9478230,"byte_end":9478258,"line_start":312,"line_end":312,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9478263,"byte_end":9478268,"line_start":313,"line_end":313,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9478273,"byte_end":9478280,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6001},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480635,"byte_end":9480649,"line_start":381,"line_end":381,"column_start":12,"column_end":26},"name":"notify_waiters","qualname":"<Notify>::notify_waiters","value":"pub fn notify_waiters(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies all waiting tasks","sig":null,"attributes":[{"value":"/ Notifies all waiting tasks","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9479545,"byte_end":9479575,"line_start":349,"line_end":349,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9479580,"byte_end":9479583,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Unlike with","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9479588,"byte_end":9479658,"line_start":351,"line_end":351,"column_start":5,"column_end":75}},{"value":"/ `notify()`, no permit is stored to be used by the next call to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9479663,"byte_end":9479729,"line_start":352,"line_end":352,"column_start":5,"column_end":71}},{"value":"/ [`notified().await`]. The purpose of this method is to notify all","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9479734,"byte_end":9479803,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ already registered waiters. Registering for notification is done by","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9479808,"byte_end":9479879,"line_start":354,"line_end":354,"column_start":5,"column_end":76}},{"value":"/ acquiring an instance of the `Notified` future via calling `notified()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9479884,"byte_end":9479960,"line_start":355,"line_end":355,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9479965,"byte_end":9479968,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9479973,"byte_end":9479987,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9479992,"byte_end":9479995,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480000,"byte_end":9480007,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480012,"byte_end":9480040,"line_start":360,"line_end":360,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480045,"byte_end":9480068,"line_start":361,"line_end":361,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480073,"byte_end":9480076,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480081,"byte_end":9480099,"line_start":363,"line_end":363,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480104,"byte_end":9480125,"line_start":364,"line_end":364,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480130,"byte_end":9480175,"line_start":365,"line_end":365,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480180,"byte_end":9480217,"line_start":366,"line_end":366,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480222,"byte_end":9480225,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/     let notified1 = notify.notified();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480230,"byte_end":9480272,"line_start":368,"line_end":368,"column_start":5,"column_end":47}},{"value":"/     let notified2 = notify.notified();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480277,"byte_end":9480319,"line_start":369,"line_end":369,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480324,"byte_end":9480327,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/     let handle = tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480332,"byte_end":9480378,"line_start":371,"line_end":371,"column_start":5,"column_end":51}},{"value":"/         println!(\"sending notifications\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480383,"byte_end":9480429,"line_start":372,"line_end":372,"column_start":5,"column_end":51}},{"value":"/         notify2.notify_waiters();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480434,"byte_end":9480471,"line_start":373,"line_end":373,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480476,"byte_end":9480487,"line_start":374,"line_end":374,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480492,"byte_end":9480495,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/     notified1.await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480500,"byte_end":9480524,"line_start":376,"line_end":376,"column_start":5,"column_end":29}},{"value":"/     notified2.await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480529,"byte_end":9480553,"line_start":377,"line_end":377,"column_start":5,"column_end":29}},{"value":"/     println!(\"received notifications\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480558,"byte_end":9480601,"line_start":378,"line_end":378,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480606,"byte_end":9480611,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9480616,"byte_end":9480623,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":6025},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":6026},{"krate":0,"index":6027},{"krate":0,"index":6028},{"krate":0,"index":6029},{"krate":0,"index":6030},{"krate":0,"index":6031},{"krate":0,"index":6032},{"krate":0,"index":6033},{"krate":0,"index":6034},{"krate":0,"index":6035},{"krate":0,"index":13342},{"krate":0,"index":6036},{"krate":0,"index":13344},{"krate":0,"index":6037},{"krate":0,"index":6038},{"krate":0,"index":13346},{"krate":0,"index":6039},{"krate":0,"index":13348},{"krate":0,"index":6040},{"krate":0,"index":6041},{"krate":0,"index":6042},{"krate":0,"index":6043},{"krate":0,"index":6622},{"krate":0,"index":6625},{"krate":0,"index":6628},{"krate":0,"index":6631},{"krate":0,"index":6044},{"krate":0,"index":6052},{"krate":0,"index":6053},{"krate":0,"index":6059},{"krate":0,"index":6062},{"krate":0,"index":6659},{"krate":0,"index":6663},{"krate":0,"index":6662},{"krate":0,"index":6073},{"krate":0,"index":6075},{"krate":0,"index":6086},{"krate":0,"index":6089},{"krate":0,"index":6093},{"krate":0,"index":6096},{"krate":0,"index":6100},{"krate":0,"index":6107},{"krate":0,"index":6109},{"krate":0,"index":6111},{"krate":0,"index":6113},{"krate":0,"index":6116},{"krate":0,"index":6120},{"krate":0,"index":6121},{"krate":0,"index":6122},{"krate":0,"index":6123},{"krate":0,"index":6124},{"krate":0,"index":6138}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9494951,"byte_end":9495021,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":6622},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9495500,"byte_end":9495506,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6624}],"decl_id":null,"docs":" Sends a value to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends a value to the associated `Receiver`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9495353,"byte_end":9495400,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9495401,"byte_end":9495404,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9495405,"byte_end":9495471,"line_start":19,"line_end":19,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6628},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9495698,"byte_end":9495706,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6630}],"decl_id":null,"docs":" Receive a value from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive a value from the associated `Sender`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9495549,"byte_end":9495598,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9495599,"byte_end":9495602,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9495603,"byte_end":9495669,"line_start":27,"line_end":27,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":6044},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9495757,"byte_end":9495762,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":6045},{"krate":0,"index":6634},{"krate":0,"index":6644},{"krate":0,"index":6641},{"krate":0,"index":6642},{"krate":0,"index":6637},{"krate":0,"index":6638},{"krate":0,"index":6646},{"krate":0,"index":6657},{"krate":0,"index":6654},{"krate":0,"index":6655},{"krate":0,"index":6651},{"krate":0,"index":6652},{"krate":0,"index":6046},{"krate":0,"index":6048},{"krate":0,"index":6049},{"krate":0,"index":6051}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"/ Oneshot error types","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9495769,"byte_end":9495792,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6634},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9495934,"byte_end":9495943,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9495817,"byte_end":9495882,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6647},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9496165,"byte_end":9496170,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6646},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9496098,"byte_end":9496156,"line_start":45,"line_end":45,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6649},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9496259,"byte_end":9496265,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":6646},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9496181,"byte_end":9496250,"line_start":48,"line_end":48,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":6646},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9496075,"byte_end":9496087,"line_start":44,"line_end":44,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The send half of the channel has not yet sent a value.\n    Empty,\n\n    /// The send half of the channel was dropped without sending a value.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":6647},{"krate":0,"index":6649}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9495965,"byte_end":9496025,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":6073},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498998,"byte_end":9499005,"line_start":158,"line_end":158,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498183,"byte_end":9498262,"line_start":128,"line_end":128,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498263,"byte_end":9498273,"line_start":129,"line_end":129,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498274,"byte_end":9498277,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498278,"byte_end":9498354,"line_start":131,"line_end":131,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498355,"byte_end":9498433,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498434,"byte_end":9498480,"line_start":133,"line_end":133,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498481,"byte_end":9498484,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498485,"byte_end":9498531,"line_start":135,"line_end":135,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498532,"byte_end":9498535,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498536,"byte_end":9498550,"line_start":137,"line_end":137,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498551,"byte_end":9498554,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498555,"byte_end":9498562,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498563,"byte_end":9498592,"line_start":140,"line_end":140,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498593,"byte_end":9498596,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498597,"byte_end":9498615,"line_start":142,"line_end":142,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498616,"byte_end":9498637,"line_start":143,"line_end":143,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498638,"byte_end":9498680,"line_start":144,"line_end":144,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498681,"byte_end":9498684,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498685,"byte_end":9498718,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498719,"byte_end":9498759,"line_start":147,"line_end":147,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498760,"byte_end":9498809,"line_start":148,"line_end":148,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498810,"byte_end":9498823,"line_start":149,"line_end":149,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498824,"byte_end":9498835,"line_start":150,"line_end":150,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498836,"byte_end":9498839,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498840,"byte_end":9498864,"line_start":152,"line_end":152,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498865,"byte_end":9498912,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498913,"byte_end":9498966,"line_start":154,"line_end":154,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498967,"byte_end":9498976,"line_start":155,"line_end":155,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498977,"byte_end":9498982,"line_start":156,"line_end":156,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9498983,"byte_end":9498990,"line_start":157,"line_end":157,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6077},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501028,"byte_end":9501032,"line_start":215,"line_end":215,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9499457,"byte_end":9499532,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9499537,"byte_end":9499553,"line_start":176,"line_end":176,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9499558,"byte_end":9499561,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9499566,"byte_end":9499645,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9499650,"byte_end":9499725,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9499730,"byte_end":9499806,"line_start":180,"line_end":180,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9499811,"byte_end":9499883,"line_start":181,"line_end":181,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9499888,"byte_end":9499901,"line_start":182,"line_end":182,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9499906,"byte_end":9499909,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9499914,"byte_end":9499990,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9499995,"byte_end":9500071,"line_start":185,"line_end":185,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500076,"byte_end":9500148,"line_start":186,"line_end":186,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500153,"byte_end":9500226,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500231,"byte_end":9500305,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500310,"byte_end":9500382,"line_start":189,"line_end":189,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500387,"byte_end":9500424,"line_start":190,"line_end":190,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500429,"byte_end":9500432,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500437,"byte_end":9500451,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500456,"byte_end":9500459,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500464,"byte_end":9500496,"line_start":194,"line_end":194,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500501,"byte_end":9500504,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500509,"byte_end":9500516,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500521,"byte_end":9500550,"line_start":197,"line_end":197,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500555,"byte_end":9500558,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500563,"byte_end":9500581,"line_start":199,"line_end":199,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500586,"byte_end":9500607,"line_start":200,"line_end":200,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500612,"byte_end":9500654,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500659,"byte_end":9500662,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500667,"byte_end":9500700,"line_start":203,"line_end":203,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500705,"byte_end":9500745,"line_start":204,"line_end":204,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500750,"byte_end":9500799,"line_start":205,"line_end":205,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500804,"byte_end":9500817,"line_start":206,"line_end":206,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500822,"byte_end":9500833,"line_start":207,"line_end":207,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500838,"byte_end":9500841,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500846,"byte_end":9500870,"line_start":209,"line_end":209,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500875,"byte_end":9500922,"line_start":210,"line_end":210,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500927,"byte_end":9500980,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500985,"byte_end":9500994,"line_start":212,"line_end":212,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9500999,"byte_end":9501004,"line_start":213,"line_end":213,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501009,"byte_end":9501016,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6079},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503370,"byte_end":9503376,"line_start":298,"line_end":298,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501365,"byte_end":9501423,"line_start":231,"line_end":231,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501428,"byte_end":9501431,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501436,"byte_end":9501510,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501515,"byte_end":9501549,"line_start":234,"line_end":234,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501554,"byte_end":9501557,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501562,"byte_end":9501627,"line_start":236,"line_end":236,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501632,"byte_end":9501704,"line_start":237,"line_end":237,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501709,"byte_end":9501712,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501717,"byte_end":9501729,"line_start":239,"line_end":239,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501734,"byte_end":9501737,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501742,"byte_end":9501790,"line_start":241,"line_end":241,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501795,"byte_end":9501798,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501803,"byte_end":9501829,"line_start":243,"line_end":243,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501834,"byte_end":9501864,"line_start":244,"line_end":244,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501869,"byte_end":9501872,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501877,"byte_end":9501891,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501896,"byte_end":9501899,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501904,"byte_end":9501919,"line_start":248,"line_end":248,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501924,"byte_end":9501927,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501932,"byte_end":9501939,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501944,"byte_end":9501973,"line_start":251,"line_end":251,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501978,"byte_end":9501981,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9501986,"byte_end":9502004,"line_start":253,"line_end":253,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502009,"byte_end":9502030,"line_start":254,"line_end":254,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502035,"byte_end":9502087,"line_start":255,"line_end":255,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502092,"byte_end":9502095,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502100,"byte_end":9502133,"line_start":257,"line_end":257,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502138,"byte_end":9502159,"line_start":258,"line_end":258,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502164,"byte_end":9502175,"line_start":259,"line_end":259,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502180,"byte_end":9502183,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502188,"byte_end":9502214,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502219,"byte_end":9502260,"line_start":262,"line_end":262,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502265,"byte_end":9502270,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502275,"byte_end":9502282,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502287,"byte_end":9502290,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502295,"byte_end":9502317,"line_start":266,"line_end":266,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502322,"byte_end":9502325,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502330,"byte_end":9502337,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502342,"byte_end":9502371,"line_start":269,"line_end":269,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502376,"byte_end":9502414,"line_start":270,"line_end":270,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502419,"byte_end":9502422,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502427,"byte_end":9502461,"line_start":272,"line_end":272,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502466,"byte_end":9502517,"line_start":273,"line_end":273,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502522,"byte_end":9502547,"line_start":274,"line_end":274,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502552,"byte_end":9502557,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502562,"byte_end":9502565,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502570,"byte_end":9502588,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502593,"byte_end":9502614,"line_start":278,"line_end":278,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502619,"byte_end":9502665,"line_start":279,"line_end":279,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502670,"byte_end":9502673,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502678,"byte_end":9502711,"line_start":281,"line_end":281,"column_start":5,"column_end":38}},{"value":"/         tokio::select! {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502716,"byte_end":9502744,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/             _ = tx.closed() => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502749,"byte_end":9502785,"line_start":283,"line_end":283,"column_start":5,"column_end":41}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502790,"byte_end":9502865,"line_start":284,"line_end":284,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502870,"byte_end":9502887,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/             value = compute() => {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502892,"byte_end":9502930,"line_start":286,"line_end":286,"column_start":5,"column_end":43}},{"value":"/                 // The send can fail if the channel was closed at the exact same","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9502935,"byte_end":9503019,"line_start":287,"line_end":287,"column_start":5,"column_end":89}},{"value":"/                 // time as when compute() finished, so just ignore the failure.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503024,"byte_end":9503107,"line_start":288,"line_end":288,"column_start":5,"column_end":88}},{"value":"/                 let _ = tx.send(value);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503112,"byte_end":9503155,"line_start":289,"line_end":289,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503160,"byte_end":9503177,"line_start":290,"line_end":290,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503182,"byte_end":9503195,"line_start":291,"line_end":291,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503200,"byte_end":9503211,"line_start":292,"line_end":292,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503216,"byte_end":9503219,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503224,"byte_end":9503260,"line_start":294,"line_end":294,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503265,"byte_end":9503330,"line_start":295,"line_end":295,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503335,"byte_end":9503340,"line_start":296,"line_end":296,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503345,"byte_end":9503352,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6084},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504246,"byte_end":9504255,"line_start":331,"line_end":331,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503487,"byte_end":9503561,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503566,"byte_end":9503569,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503574,"byte_end":9503648,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503653,"byte_end":9503687,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503692,"byte_end":9503695,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503700,"byte_end":9503775,"line_start":309,"line_end":309,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503780,"byte_end":9503783,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503788,"byte_end":9503814,"line_start":311,"line_end":311,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503819,"byte_end":9503849,"line_start":312,"line_end":312,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503854,"byte_end":9503857,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503862,"byte_end":9503876,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503881,"byte_end":9503884,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503889,"byte_end":9503896,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503901,"byte_end":9503930,"line_start":317,"line_end":317,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503935,"byte_end":9503938,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503943,"byte_end":9503961,"line_start":319,"line_end":319,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503966,"byte_end":9503987,"line_start":320,"line_end":320,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9503992,"byte_end":9504034,"line_start":321,"line_end":321,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504039,"byte_end":9504042,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504047,"byte_end":9504080,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504085,"byte_end":9504088,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504093,"byte_end":9504110,"line_start":325,"line_end":325,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504115,"byte_end":9504118,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504123,"byte_end":9504155,"line_start":327,"line_end":327,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504160,"byte_end":9504212,"line_start":328,"line_end":328,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504217,"byte_end":9504222,"line_start":329,"line_end":329,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504227,"byte_end":9504234,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6085},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505701,"byte_end":9505712,"line_start":378,"line_end":378,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Check whether the oneshot channel has been closed, and if not, schedules the\n `Waker` in the provided `Context` to receive a notification when the channel is\n closed.","sig":null,"attributes":[{"value":"/ Check whether the oneshot channel has been closed, and if not, schedules the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504417,"byte_end":9504497,"line_start":338,"line_end":338,"column_start":5,"column_end":85}},{"value":"/ `Waker` in the provided `Context` to receive a notification when the channel is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504502,"byte_end":9504585,"line_start":339,"line_end":339,"column_start":5,"column_end":88}},{"value":"/ closed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504590,"byte_end":9504601,"line_start":340,"line_end":340,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504606,"byte_end":9504609,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly, or when the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504614,"byte_end":9504694,"line_start":342,"line_end":342,"column_start":5,"column_end":85}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504699,"byte_end":9504733,"line_start":343,"line_end":343,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504738,"byte_end":9504741,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to poll, only the `Waker` from the `Context` passed","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504746,"byte_end":9504829,"line_start":345,"line_end":345,"column_start":5,"column_end":88}},{"value":"/ to the most recent call will be scheduled to receive a wakeup.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504834,"byte_end":9504900,"line_start":346,"line_end":346,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504905,"byte_end":9504908,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: struct@crate::sync::oneshot::Receiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504913,"byte_end":9504968,"line_start":348,"line_end":348,"column_start":5,"column_end":60}},{"value":"/ [`close`]: fn@crate::sync::oneshot::Receiver::close","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9504973,"byte_end":9505028,"line_start":349,"line_end":349,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505033,"byte_end":9505036,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505041,"byte_end":9505059,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505064,"byte_end":9505067,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505072,"byte_end":9505098,"line_start":353,"line_end":353,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505103,"byte_end":9505106,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the channel is still open.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505111,"byte_end":9505163,"line_start":355,"line_end":355,"column_start":5,"column_end":57}},{"value":"/  * `Poll::Ready(())` if the channel is closed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505168,"byte_end":9505218,"line_start":356,"line_end":356,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505223,"byte_end":9505226,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505231,"byte_end":9505245,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505250,"byte_end":9505253,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505258,"byte_end":9505265,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505270,"byte_end":9505299,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505304,"byte_end":9505307,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505312,"byte_end":9505345,"line_start":363,"line_end":363,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505350,"byte_end":9505353,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505358,"byte_end":9505376,"line_start":365,"line_end":365,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505381,"byte_end":9505402,"line_start":366,"line_end":366,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505407,"byte_end":9505463,"line_start":367,"line_end":367,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505468,"byte_end":9505471,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505476,"byte_end":9505509,"line_start":369,"line_end":369,"column_start":5,"column_end":38}},{"value":"/         rx.close();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505514,"byte_end":9505537,"line_start":370,"line_end":370,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505542,"byte_end":9505553,"line_start":371,"line_end":371,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505558,"byte_end":9505561,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| tx.poll_closed(cx)).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505566,"byte_end":9505613,"line_start":373,"line_end":373,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505618,"byte_end":9505621,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505626,"byte_end":9505667,"line_start":375,"line_end":375,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505672,"byte_end":9505677,"line_start":376,"line_end":376,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9505682,"byte_end":9505689,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6091},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508875,"byte_end":9508880,"line_start":492,"line_end":492,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507237,"byte_end":9507304,"line_start":436,"line_end":436,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507309,"byte_end":9507312,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507317,"byte_end":9507391,"line_start":438,"line_end":438,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507396,"byte_end":9507464,"line_start":439,"line_end":439,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507469,"byte_end":9507535,"line_start":440,"line_end":440,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507540,"byte_end":9507554,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507559,"byte_end":9507562,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507567,"byte_end":9507643,"line_start":443,"line_end":443,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507648,"byte_end":9507711,"line_start":444,"line_end":444,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507716,"byte_end":9507719,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507724,"byte_end":9507746,"line_start":446,"line_end":446,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507751,"byte_end":9507787,"line_start":447,"line_end":447,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507792,"byte_end":9507795,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507800,"byte_end":9507814,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507819,"byte_end":9507822,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507827,"byte_end":9507862,"line_start":451,"line_end":451,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507867,"byte_end":9507870,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507875,"byte_end":9507882,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507887,"byte_end":9507916,"line_start":454,"line_end":454,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507921,"byte_end":9507971,"line_start":455,"line_end":455,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507976,"byte_end":9507979,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507984,"byte_end":9508002,"line_start":457,"line_end":457,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508007,"byte_end":9508028,"line_start":458,"line_end":458,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508033,"byte_end":9508079,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508084,"byte_end":9508087,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508092,"byte_end":9508125,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508130,"byte_end":9508133,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508138,"byte_end":9508157,"line_start":463,"line_end":463,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508162,"byte_end":9508165,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508170,"byte_end":9508202,"line_start":465,"line_end":465,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508207,"byte_end":9508259,"line_start":466,"line_end":466,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508264,"byte_end":9508267,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508272,"byte_end":9508301,"line_start":468,"line_end":468,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508306,"byte_end":9508349,"line_start":469,"line_end":469,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508354,"byte_end":9508386,"line_start":470,"line_end":470,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508391,"byte_end":9508400,"line_start":471,"line_end":471,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508405,"byte_end":9508410,"line_start":472,"line_end":472,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508415,"byte_end":9508422,"line_start":473,"line_end":473,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508427,"byte_end":9508430,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508435,"byte_end":9508486,"line_start":475,"line_end":475,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508491,"byte_end":9508494,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508499,"byte_end":9508506,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508511,"byte_end":9508540,"line_start":478,"line_end":478,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508545,"byte_end":9508548,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508553,"byte_end":9508571,"line_start":480,"line_end":480,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508576,"byte_end":9508597,"line_start":481,"line_end":481,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508602,"byte_end":9508648,"line_start":482,"line_end":482,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508653,"byte_end":9508656,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508661,"byte_end":9508710,"line_start":484,"line_end":484,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508715,"byte_end":9508718,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508723,"byte_end":9508742,"line_start":486,"line_end":486,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508747,"byte_end":9508750,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508755,"byte_end":9508796,"line_start":488,"line_end":488,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508801,"byte_end":9508841,"line_start":489,"line_end":489,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508846,"byte_end":9508851,"line_start":490,"line_end":490,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508856,"byte_end":9508863,"line_start":491,"line_end":491,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6092},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510863,"byte_end":9510871,"line_start":560,"line_end":560,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9508978,"byte_end":9509010,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509015,"byte_end":9509018,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509023,"byte_end":9509096,"line_start":499,"line_end":499,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509101,"byte_end":9509167,"line_start":500,"line_end":500,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509172,"byte_end":9509196,"line_start":501,"line_end":501,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509201,"byte_end":9509204,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509209,"byte_end":9509275,"line_start":503,"line_end":503,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509280,"byte_end":9509302,"line_start":504,"line_end":504,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509307,"byte_end":9509310,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509315,"byte_end":9509327,"line_start":506,"line_end":506,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509332,"byte_end":9509335,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509340,"byte_end":9509391,"line_start":508,"line_end":508,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509396,"byte_end":9509459,"line_start":509,"line_end":509,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509464,"byte_end":9509539,"line_start":510,"line_end":510,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509544,"byte_end":9509558,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509563,"byte_end":9509566,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509571,"byte_end":9509585,"line_start":513,"line_end":513,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509590,"byte_end":9509593,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509598,"byte_end":9509648,"line_start":515,"line_end":515,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509653,"byte_end":9509656,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509661,"byte_end":9509668,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509673,"byte_end":9509702,"line_start":518,"line_end":518,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509707,"byte_end":9509757,"line_start":519,"line_end":519,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509762,"byte_end":9509765,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509770,"byte_end":9509788,"line_start":521,"line_end":521,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509793,"byte_end":9509814,"line_start":522,"line_end":522,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509819,"byte_end":9509865,"line_start":523,"line_end":523,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509870,"byte_end":9509873,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509878,"byte_end":9509907,"line_start":525,"line_end":525,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509912,"byte_end":9509957,"line_start":526,"line_end":526,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9509962,"byte_end":9510004,"line_start":527,"line_end":527,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510009,"byte_end":9510041,"line_start":528,"line_end":528,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510046,"byte_end":9510055,"line_start":529,"line_end":529,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510060,"byte_end":9510063,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510068,"byte_end":9510091,"line_start":531,"line_end":531,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510096,"byte_end":9510130,"line_start":532,"line_end":532,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510135,"byte_end":9510138,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510143,"byte_end":9510172,"line_start":534,"line_end":534,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510177,"byte_end":9510229,"line_start":535,"line_end":535,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510234,"byte_end":9510266,"line_start":536,"line_end":536,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510271,"byte_end":9510280,"line_start":537,"line_end":537,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510285,"byte_end":9510290,"line_start":538,"line_end":538,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510295,"byte_end":9510302,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510307,"byte_end":9510310,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510315,"byte_end":9510376,"line_start":541,"line_end":541,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510381,"byte_end":9510384,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510389,"byte_end":9510396,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510401,"byte_end":9510430,"line_start":544,"line_end":544,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510435,"byte_end":9510485,"line_start":545,"line_end":545,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510490,"byte_end":9510493,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510498,"byte_end":9510516,"line_start":547,"line_end":547,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510521,"byte_end":9510542,"line_start":548,"line_end":548,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510547,"byte_end":9510599,"line_start":549,"line_end":549,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510604,"byte_end":9510607,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510612,"byte_end":9510629,"line_start":551,"line_end":551,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510634,"byte_end":9510637,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510642,"byte_end":9510671,"line_start":553,"line_end":553,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510676,"byte_end":9510730,"line_start":554,"line_end":554,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510735,"byte_end":9510778,"line_start":555,"line_end":555,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510783,"byte_end":9510815,"line_start":556,"line_end":556,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510820,"byte_end":9510829,"line_start":557,"line_end":557,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510834,"byte_end":9510839,"line_start":558,"line_end":558,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9510844,"byte_end":9510851,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6666},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9520445,"byte_end":9520451,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::batch_semaphore::TryAcquireError::Closed","value":"TryAcquireError::Closed","parent":{"krate":0,"index":6665},"children":[],"decl_id":null,"docs":" The semaphore has been [closed] and cannot issue new permits.","sig":null,"attributes":[{"value":"/ The semaphore has been [closed] and cannot issue new permits.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9520319,"byte_end":9520384,"line_start":49,"line_end":49,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9520389,"byte_end":9520392,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9520397,"byte_end":9520440,"line_start":51,"line_end":51,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6668},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9520506,"byte_end":9520515,"line_start":55,"line_end":55,"column_start":5,"column_end":14},"name":"NoPermits","qualname":"::sync::batch_semaphore::TryAcquireError::NoPermits","value":"TryAcquireError::NoPermits","parent":{"krate":0,"index":6665},"children":[],"decl_id":null,"docs":" The semaphore has no available permits.\n","sig":null,"attributes":[{"value":"/ The semaphore has no available permits.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9520458,"byte_end":9520501,"line_start":54,"line_end":54,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":6665},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9520297,"byte_end":9520312,"line_start":48,"line_end":48,"column_start":10,"column_end":25},"name":"TryAcquireError","qualname":"::sync::batch_semaphore::TryAcquireError","value":"pub enum TryAcquireError {\n\n    /// The semaphore has been [closed] and cannot issue new permits.\n    ///\n    /// [closed]: crate::sync::Semaphore::close\n    Closed,\n\n    /// The semaphore has no available permits.\n    NoPermits,\n}","parent":null,"children":[{"krate":0,"index":6666},{"krate":0,"index":6668}],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9520123,"byte_end":9520187,"line_start":44,"line_end":44,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9520188,"byte_end":9520191,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: crate::sync::Semaphore::try_acquire","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9520192,"byte_end":9520259,"line_start":46,"line_end":46,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6675},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9520801,"byte_end":9520813,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"AcquireError","qualname":"::sync::batch_semaphore::AcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::acquire`] function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9520519,"byte_end":9520579,"line_start":57,"line_end":57,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9520580,"byte_end":9520583,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ An `acquire` operation can only fail if the semaphore has been","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9520584,"byte_end":9520650,"line_start":59,"line_end":59,"column_start":1,"column_end":67}},{"value":"/ [closed].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9520651,"byte_end":9520664,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9520665,"byte_end":9520668,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9520669,"byte_end":9520712,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/ [`Semaphore::acquire`]: crate::sync::Semaphore::acquire","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9520713,"byte_end":9520772,"line_start":63,"line_end":63,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":6680},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9540060,"byte_end":9540069,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":6681}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit acquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit acquisition.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9539210,"byte_end":9539276,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9539277,"byte_end":9539280,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9539281,"byte_end":9539356,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9539357,"byte_end":9539433,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9539434,"byte_end":9539514,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9539515,"byte_end":9539524,"line_start":10,"line_end":10,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9539525,"byte_end":9539528,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9539529,"byte_end":9539602,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9539603,"byte_end":9539682,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9539683,"byte_end":9539761,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9539762,"byte_end":9539833,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9539834,"byte_end":9539837,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ To use the `Semaphore` in a poll function, you can use the [`PollSemaphore`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9539838,"byte_end":9539918,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ utility.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9539919,"byte_end":9539931,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9539932,"byte_end":9539935,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`PollSemaphore`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSemaphore.html","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9539936,"byte_end":9540031,"line_start":20,"line_end":20,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":6684},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9540318,"byte_end":9540333,"line_start":34,"line_end":34,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":6686},{"krate":0,"index":6687}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9540134,"byte_end":9540166,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9540167,"byte_end":9540170,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9540171,"byte_end":9540222,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9540223,"byte_end":9540226,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9540227,"byte_end":9540277,"line_start":31,"line_end":31,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9540278,"byte_end":9540289,"line_start":32,"line_end":32,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6691},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9540594,"byte_end":9540614,"line_start":46,"line_end":46,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":6692},{"krate":0,"index":6693}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9540385,"byte_end":9540424,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9540425,"byte_end":9540428,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9540429,"byte_end":9540486,"line_start":41,"line_end":41,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9540487,"byte_end":9540490,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9540491,"byte_end":9540553,"line_start":43,"line_end":43,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9540554,"byte_end":9540565,"line_start":44,"line_end":44,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6243},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9541210,"byte_end":9541213,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9541135,"byte_end":9541198,"line_start":67,"line_end":67,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6244},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9541528,"byte_end":9541537,"line_start":77,"line_end":77,"column_start":18,"column_end":27},"name":"const_new","qualname":"<Semaphore>::const_new","value":"pub const fn const_new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9541325,"byte_end":9541388,"line_start":74,"line_end":74,"column_start":5,"column_end":68}},{"value":"cfg(all(feature = \"parking_lot\", not(all(loom, test))))","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9541393,"byte_end":9541451,"line_start":75,"line_end":75,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6245},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9541719,"byte_end":9541736,"line_start":84,"line_end":84,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9541655,"byte_end":9541707,"line_start":83,"line_end":83,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6246},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9541983,"byte_end":9541994,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9541806,"byte_end":9541848,"line_start":88,"line_end":88,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9541853,"byte_end":9541856,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9541861,"byte_end":9541971,"line_start":90,"line_end":90,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":6247},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9542414,"byte_end":9542421,"line_start":103,"line_end":103,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9542057,"byte_end":9542098,"line_start":95,"line_end":95,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9542103,"byte_end":9542106,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9542111,"byte_end":9542182,"line_start":97,"line_end":97,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9542187,"byte_end":9542253,"line_start":98,"line_end":98,"column_start":5,"column_end":71}},{"value":"/ acquired permit.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9542258,"byte_end":9542278,"line_start":99,"line_end":99,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9542283,"byte_end":9542286,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9542291,"byte_end":9542338,"line_start":101,"line_end":101,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9542343,"byte_end":9542396,"line_start":102,"line_end":102,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6250},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9542975,"byte_end":9542987,"line_start":119,"line_end":119,"column_start":18,"column_end":30},"name":"acquire_many","qualname":"<Semaphore>::acquire_many","value":"pub async fn acquire_many<'_, '_>(&'_ Self, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9542614,"byte_end":9542658,"line_start":111,"line_end":111,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9542663,"byte_end":9542666,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9542671,"byte_end":9542742,"line_start":113,"line_end":113,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9542747,"byte_end":9542813,"line_start":114,"line_end":114,"column_start":5,"column_end":71}},{"value":"/ acquired permits.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9542818,"byte_end":9542839,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9542844,"byte_end":9542847,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9542852,"byte_end":9542899,"line_start":117,"line_end":117,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9542904,"byte_end":9542957,"line_start":118,"line_end":118,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6253},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9543726,"byte_end":9543737,"line_start":136,"line_end":136,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9543188,"byte_end":9543237,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9543242,"byte_end":9543245,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9543250,"byte_end":9543330,"line_start":129,"line_end":129,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9543335,"byte_end":9543416,"line_start":130,"line_end":130,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9543421,"byte_end":9543494,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9543499,"byte_end":9543502,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9543507,"byte_end":9543576,"line_start":133,"line_end":133,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9543581,"byte_end":9543656,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9543661,"byte_end":9543714,"line_start":135,"line_end":135,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6254},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9544541,"byte_end":9544557,"line_start":155,"line_end":155,"column_start":12,"column_end":28},"name":"try_acquire_many","qualname":"<Semaphore>::try_acquire_many","value":"pub fn try_acquire_many(&Self, u32)\n-> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire n permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire n permits from the semaphore.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9544002,"byte_end":9544052,"line_start":146,"line_end":146,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9544057,"byte_end":9544060,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9544065,"byte_end":9544145,"line_start":148,"line_end":148,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9544150,"byte_end":9544231,"line_start":149,"line_end":149,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9544236,"byte_end":9544309,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9544314,"byte_end":9544317,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9544322,"byte_end":9544391,"line_start":152,"line_end":152,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9544396,"byte_end":9544471,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9544476,"byte_end":9544529,"line_start":154,"line_end":154,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6255},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9545307,"byte_end":9545320,"line_start":175,"line_end":175,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9544830,"byte_end":9544871,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9544876,"byte_end":9544879,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9544884,"byte_end":9544952,"line_start":167,"line_end":167,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9544957,"byte_end":9545028,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9545033,"byte_end":9545104,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9545109,"byte_end":9545129,"line_start":170,"line_end":170,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9545134,"byte_end":9545137,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9545142,"byte_end":9545169,"line_start":172,"line_end":172,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9545174,"byte_end":9545221,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9545226,"byte_end":9545289,"line_start":174,"line_end":174,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6258},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546193,"byte_end":9546210,"line_start":195,"line_end":195,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9545528,"byte_end":9545577,"line_start":183,"line_end":183,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9545582,"byte_end":9545585,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9545590,"byte_end":9545661,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9545666,"byte_end":9545743,"line_start":186,"line_end":186,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9545748,"byte_end":9545818,"line_start":187,"line_end":187,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9545823,"byte_end":9545894,"line_start":188,"line_end":188,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9545899,"byte_end":9545919,"line_start":189,"line_end":189,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9545924,"byte_end":9545927,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9545932,"byte_end":9545959,"line_start":191,"line_end":191,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9545964,"byte_end":9546033,"line_start":192,"line_end":192,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546038,"byte_end":9546113,"line_start":193,"line_end":193,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546118,"byte_end":9546181,"line_start":194,"line_end":194,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6259},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547404,"byte_end":9547409,"line_start":234,"line_end":234,"column_start":12,"column_end":17},"name":"close","qualname":"<Semaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546491,"byte_end":9546516,"line_start":205,"line_end":205,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546521,"byte_end":9546524,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ This prevents the semaphore from issuing new permits and notifies all pending waiters.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546529,"byte_end":9546619,"line_start":207,"line_end":207,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546624,"byte_end":9546627,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546632,"byte_end":9546646,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546651,"byte_end":9546654,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546659,"byte_end":9546666,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546671,"byte_end":9546702,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546707,"byte_end":9546730,"line_start":213,"line_end":213,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::TryAcquireError;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546735,"byte_end":9546772,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546777,"byte_end":9546780,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546785,"byte_end":9546803,"line_start":216,"line_end":216,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546808,"byte_end":9546829,"line_start":217,"line_end":217,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(1));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546834,"byte_end":9546886,"line_start":218,"line_end":218,"column_start":5,"column_end":57}},{"value":"/     let semaphore2 = semaphore.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546891,"byte_end":9546934,"line_start":219,"line_end":219,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546939,"byte_end":9546942,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546947,"byte_end":9546980,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/         let permit = semaphore.acquire_many(2).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9546985,"byte_end":9547042,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/         assert!(permit.is_err());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547047,"byte_end":9547084,"line_start":223,"line_end":223,"column_start":5,"column_end":42}},{"value":"/         println!(\"waiter received error\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547089,"byte_end":9547135,"line_start":224,"line_end":224,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547140,"byte_end":9547151,"line_start":225,"line_end":225,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547156,"byte_end":9547159,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/     println!(\"closing semaphore\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547164,"byte_end":9547202,"line_start":227,"line_end":227,"column_start":5,"column_end":43}},{"value":"/     semaphore2.close();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547207,"byte_end":9547234,"line_start":228,"line_end":228,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547239,"byte_end":9547242,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/     // Cannot obtain more permits","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547247,"byte_end":9547284,"line_start":230,"line_end":230,"column_start":5,"column_end":42}},{"value":"/     assert_eq!(semaphore2.try_acquire().err(), Some(TryAcquireError::Closed))","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547289,"byte_end":9547370,"line_start":231,"line_end":231,"column_start":5,"column_end":86}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547375,"byte_end":9547380,"line_start":232,"line_end":232,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547385,"byte_end":9547392,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6262},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547667,"byte_end":9547673,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547492,"byte_end":9547562,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547567,"byte_end":9547636,"line_start":241,"line_end":241,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547641,"byte_end":9547655,"line_start":242,"line_end":242,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":6264},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547928,"byte_end":9547934,"line_start":252,"line_end":252,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547753,"byte_end":9547823,"line_start":249,"line_end":249,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547828,"byte_end":9547897,"line_start":250,"line_end":250,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547902,"byte_end":9547916,"line_start":251,"line_end":251,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":6696},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551044,"byte_end":9551050,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":6698},{"krate":0,"index":6699}],"decl_id":null,"docs":" An asynchronous reader-writer lock.","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9548513,"byte_end":9548552,"line_start":15,"line_end":15,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9548553,"byte_end":9548556,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9548557,"byte_end":9548634,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9548635,"byte_end":9548714,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9548715,"byte_end":9548794,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9548795,"byte_end":9548853,"line_start":20,"line_end":20,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9548854,"byte_end":9548857,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9548858,"byte_end":9548936,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9548937,"byte_end":9549015,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9549016,"byte_end":9549094,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9549095,"byte_end":9549160,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9549161,"byte_end":9549164,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9549165,"byte_end":9549229,"line_start":27,"line_end":27,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9549230,"byte_end":9549302,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9549303,"byte_end":9549383,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9549384,"byte_end":9549464,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9549465,"byte_end":9549545,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9549546,"byte_end":9549615,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9549616,"byte_end":9549686,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9549687,"byte_end":9549725,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9549726,"byte_end":9549729,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9549730,"byte_end":9549807,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9549808,"byte_end":9549893,"line_start":37,"line_end":37,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9549894,"byte_end":9549974,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9549975,"byte_end":9550022,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550023,"byte_end":9550095,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550096,"byte_end":9550099,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550100,"byte_end":9550114,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550115,"byte_end":9550118,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550119,"byte_end":9550126,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550127,"byte_end":9550155,"line_start":45,"line_end":45,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550156,"byte_end":9550159,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550160,"byte_end":9550178,"line_start":47,"line_end":47,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550179,"byte_end":9550200,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550201,"byte_end":9550235,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550236,"byte_end":9550239,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550240,"byte_end":9550288,"line_start":51,"line_end":51,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550289,"byte_end":9550298,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550299,"byte_end":9550338,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550339,"byte_end":9550378,"line_start":54,"line_end":54,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550379,"byte_end":9550410,"line_start":55,"line_end":55,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550411,"byte_end":9550442,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550443,"byte_end":9550492,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550493,"byte_end":9550496,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550497,"byte_end":9550548,"line_start":59,"line_end":59,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550549,"byte_end":9550558,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550559,"byte_end":9550602,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550603,"byte_end":9550623,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550624,"byte_end":9550654,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550655,"byte_end":9550694,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550695,"byte_end":9550700,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550701,"byte_end":9550708,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550709,"byte_end":9550712,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550713,"byte_end":9550747,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550748,"byte_end":9550777,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550778,"byte_end":9550825,"line_start":70,"line_end":70,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550826,"byte_end":9550875,"line_start":71,"line_end":71,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550876,"byte_end":9550913,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9550914,"byte_end":9551015,"line_start":73,"line_end":73,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":6285},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551425,"byte_end":9551440,"line_start":91,"line_end":91,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":6288},{"krate":0,"index":6289},{"krate":0,"index":6290}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551184,"byte_end":9551256,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551257,"byte_end":9551269,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551270,"byte_end":9551273,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551274,"byte_end":9551329,"line_start":86,"line_end":86,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551330,"byte_end":9551345,"line_start":87,"line_end":87,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551346,"byte_end":9551349,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@RwLock::read","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551350,"byte_end":9551383,"line_start":89,"line_end":89,"column_start":1,"column_end":34}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551384,"byte_end":9551413,"line_start":90,"line_end":90,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6294},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552758,"byte_end":9552761,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockReadGuard where F: FnOnce(&T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockReadGuard` for a component of the locked data.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551584,"byte_end":9551652,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551657,"byte_end":9551660,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551665,"byte_end":9551738,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551743,"byte_end":9551763,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551768,"byte_end":9551771,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551776,"byte_end":9551827,"line_start":103,"line_end":103,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551832,"byte_end":9551902,"line_start":104,"line_end":104,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551907,"byte_end":9551971,"line_start":105,"line_end":105,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551976,"byte_end":9551979,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::map`] from the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551984,"byte_end":9552056,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552061,"byte_end":9552087,"line_start":108,"line_end":108,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552092,"byte_end":9552095,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.map","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552100,"byte_end":9552209,"line_start":110,"line_end":110,"column_start":5,"column_end":114}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552214,"byte_end":9552277,"line_start":111,"line_end":111,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552282,"byte_end":9552285,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552290,"byte_end":9552304,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552309,"byte_end":9552312,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552317,"byte_end":9552324,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552329,"byte_end":9552376,"line_start":116,"line_end":116,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552381,"byte_end":9552384,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552389,"byte_end":9552437,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552442,"byte_end":9552462,"line_start":119,"line_end":119,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552467,"byte_end":9552470,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552475,"byte_end":9552495,"line_start":121,"line_end":121,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552500,"byte_end":9552523,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552528,"byte_end":9552563,"line_start":123,"line_end":123,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552568,"byte_end":9552571,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552576,"byte_end":9552610,"line_start":125,"line_end":125,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552615,"byte_end":9552669,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552674,"byte_end":9552677,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552682,"byte_end":9552708,"line_start":128,"line_end":128,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552713,"byte_end":9552720,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552725,"byte_end":9552732,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9552737,"byte_end":9552746,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6297},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9554456,"byte_end":9554463,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockReadGuard, Self> where\nF: FnOnce(&T) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockReadGuard`] for a component of the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553139,"byte_end":9553208,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553213,"byte_end":9553283,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553288,"byte_end":9553299,"line_start":149,"line_end":149,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553304,"byte_end":9553307,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553312,"byte_end":9553385,"line_start":151,"line_end":151,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553390,"byte_end":9553410,"line_start":152,"line_end":152,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553415,"byte_end":9553418,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553423,"byte_end":9553482,"line_start":154,"line_end":154,"column_start":5,"column_end":64}},{"value":"/ `RwLockReadGuard::try_map(..)`. A method would interfere with methods of the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553487,"byte_end":9553567,"line_start":155,"line_end":155,"column_start":5,"column_end":85}},{"value":"/ same name on the contents of the locked data.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553572,"byte_end":9553621,"line_start":156,"line_end":156,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553626,"byte_end":9553629,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::try_map`] from the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553634,"byte_end":9553710,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553715,"byte_end":9553741,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553746,"byte_end":9553749,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.try_map","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553754,"byte_end":9553871,"line_start":161,"line_end":161,"column_start":5,"column_end":122}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553876,"byte_end":9553939,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553944,"byte_end":9553947,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553952,"byte_end":9553966,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553971,"byte_end":9553974,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553979,"byte_end":9553986,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9553991,"byte_end":9554038,"line_start":167,"line_end":167,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9554043,"byte_end":9554046,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9554051,"byte_end":9554099,"line_start":169,"line_end":169,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9554104,"byte_end":9554124,"line_start":170,"line_end":170,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9554129,"byte_end":9554132,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9554137,"byte_end":9554157,"line_start":172,"line_end":172,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9554162,"byte_end":9554185,"line_start":173,"line_end":173,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9554190,"byte_end":9554225,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9554230,"byte_end":9554233,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9554238,"byte_end":9554272,"line_start":176,"line_end":176,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9554277,"byte_end":9554367,"line_start":177,"line_end":177,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9554372,"byte_end":9554375,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9554380,"byte_end":9554406,"line_start":179,"line_end":179,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9554411,"byte_end":9554418,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9554423,"byte_end":9554430,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9554435,"byte_end":9554444,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6312},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9555712,"byte_end":9555728,"line_start":234,"line_end":234,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":6315},{"krate":0,"index":6316},{"krate":0,"index":6317}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9555460,"byte_end":9555536,"line_start":226,"line_end":226,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9555537,"byte_end":9555549,"line_start":227,"line_end":227,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9555550,"byte_end":9555553,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] and method","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9555554,"byte_end":9555611,"line_start":229,"line_end":229,"column_start":1,"column_end":58}},{"value":"/ on [`RwLock`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9555612,"byte_end":9555630,"line_start":230,"line_end":230,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9555631,"byte_end":9555634,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@RwLock::write","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9555635,"byte_end":9555670,"line_start":232,"line_end":232,"column_start":1,"column_end":36}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9555671,"byte_end":9555700,"line_start":233,"line_end":233,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6321},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9557048,"byte_end":9557057,"line_start":278,"line_end":278,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockWriteGuard>::downgrade","value":"pub fn downgrade(Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9555883,"byte_end":9555955,"line_start":241,"line_end":241,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9555960,"byte_end":9556029,"line_start":242,"line_end":242,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556034,"byte_end":9556037,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556042,"byte_end":9556120,"line_start":244,"line_end":244,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556125,"byte_end":9556201,"line_start":245,"line_end":245,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556206,"byte_end":9556218,"line_start":246,"line_end":246,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556223,"byte_end":9556226,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556231,"byte_end":9556305,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556310,"byte_end":9556327,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556332,"byte_end":9556335,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556340,"byte_end":9556354,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556359,"byte_end":9556362,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556367,"byte_end":9556374,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556379,"byte_end":9556409,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556414,"byte_end":9556439,"line_start":255,"line_end":255,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556444,"byte_end":9556449,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556454,"byte_end":9556474,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556479,"byte_end":9556502,"line_start":258,"line_end":258,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556507,"byte_end":9556547,"line_start":259,"line_end":259,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556552,"byte_end":9556555,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let n = lock.write().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556560,"byte_end":9556591,"line_start":261,"line_end":261,"column_start":5,"column_end":36}},{"value":"/   ","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556596,"byte_end":9556602,"line_start":262,"line_end":262,"column_start":5,"column_end":11}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556607,"byte_end":9556642,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556647,"byte_end":9556689,"line_start":264,"line_end":264,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write().await = 2;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556694,"byte_end":9556733,"line_start":265,"line_end":265,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556738,"byte_end":9556745,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556750,"byte_end":9556753,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556758,"byte_end":9556784,"line_start":268,"line_end":268,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556789,"byte_end":9556834,"line_start":269,"line_end":269,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556839,"byte_end":9556842,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556847,"byte_end":9556859,"line_start":271,"line_end":271,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556864,"byte_end":9556890,"line_start":272,"line_end":272,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556895,"byte_end":9556970,"line_start":273,"line_end":273,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556975,"byte_end":9556982,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556987,"byte_end":9556994,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9556999,"byte_end":9557002,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9557007,"byte_end":9557036,"line_start":277,"line_end":277,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":6348},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9560053,"byte_end":9560056,"line_start":370,"line_end":370,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9559843,"byte_end":9559906,"line_start":361,"line_end":361,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9559911,"byte_end":9559914,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9559919,"byte_end":9559933,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9559938,"byte_end":9559941,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9559946,"byte_end":9559953,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9559958,"byte_end":9559986,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9559991,"byte_end":9559994,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9559999,"byte_end":9560029,"line_start":368,"line_end":368,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9560034,"byte_end":9560041,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6349},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9560593,"byte_end":9560602,"line_start":391,"line_end":391,"column_start":18,"column_end":27},"name":"const_new","qualname":"<RwLock<T>>::const_new","value":"pub const fn const_new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9560233,"byte_end":9560296,"line_start":380,"line_end":380,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9560301,"byte_end":9560304,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9560309,"byte_end":9560323,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9560328,"byte_end":9560331,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9560336,"byte_end":9560343,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9560348,"byte_end":9560376,"line_start":385,"line_end":385,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9560381,"byte_end":9560384,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ static LOCK: RwLock<i32> = RwLock::const_new(5);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9560389,"byte_end":9560441,"line_start":387,"line_end":387,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9560446,"byte_end":9560453,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"parking_lot\", not(all(loom, test))))","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9560458,"byte_end":9560516,"line_start":389,"line_end":389,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6350},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9562263,"byte_end":9562267,"line_start":441,"line_end":441,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with shared read access, causing the current task","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9560785,"byte_end":9560858,"line_start":401,"line_end":401,"column_start":5,"column_end":78}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9560863,"byte_end":9560909,"line_start":402,"line_end":402,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9560914,"byte_end":9560917,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no writers which hold the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9560922,"byte_end":9560995,"line_start":404,"line_end":404,"column_start":5,"column_end":78}},{"value":"/ lock. There may be other readers inside the lock when the task resumes.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561000,"byte_end":9561075,"line_start":405,"line_end":405,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561080,"byte_end":9561083,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that under the priority policy of [`RwLock`], read locks are not","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561088,"byte_end":9561161,"line_start":407,"line_end":407,"column_start":5,"column_end":78}},{"value":"/ granted until prior write locks, to prevent starvation. Therefore","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561166,"byte_end":9561235,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/ deadlock may occur if a read lock is held by the current task, a write","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561240,"byte_end":9561314,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/ lock attempt is made, and then a subsequent read lock attempt is made","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561319,"byte_end":9561392,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ by the current task.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561397,"byte_end":9561421,"line_start":411,"line_end":411,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561426,"byte_end":9561429,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561434,"byte_end":9561508,"line_start":413,"line_end":413,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561513,"byte_end":9561530,"line_start":414,"line_end":414,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561535,"byte_end":9561538,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561543,"byte_end":9561557,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561562,"byte_end":9561565,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561570,"byte_end":9561577,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561582,"byte_end":9561605,"line_start":419,"line_end":419,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561610,"byte_end":9561638,"line_start":420,"line_end":420,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561643,"byte_end":9561646,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561651,"byte_end":9561669,"line_start":422,"line_end":422,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561674,"byte_end":9561695,"line_start":423,"line_end":423,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561700,"byte_end":9561744,"line_start":424,"line_end":424,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561749,"byte_end":9561783,"line_start":425,"line_end":425,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561788,"byte_end":9561791,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561796,"byte_end":9561830,"line_start":427,"line_end":427,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561835,"byte_end":9561861,"line_start":428,"line_end":428,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561866,"byte_end":9561869,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561874,"byte_end":9561907,"line_start":430,"line_end":430,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561912,"byte_end":9561982,"line_start":431,"line_end":431,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9561987,"byte_end":9562027,"line_start":432,"line_end":432,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9562032,"byte_end":9562062,"line_start":433,"line_end":433,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9562067,"byte_end":9562124,"line_start":434,"line_end":434,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9562129,"byte_end":9562132,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9562137,"byte_end":9562195,"line_start":436,"line_end":436,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9562200,"byte_end":9562216,"line_start":437,"line_end":437,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9562221,"byte_end":9562225,"line_start":438,"line_end":438,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9562230,"byte_end":9562237,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9562242,"byte_end":9562245,"line_start":440,"line_end":440,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6354},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563733,"byte_end":9563741,"line_start":486,"line_end":486,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"pub fn try_read(&Self) -> Result<RwLockReadGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9562714,"byte_end":9562776,"line_start":454,"line_end":454,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9562781,"byte_end":9562784,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9562789,"byte_end":9562866,"line_start":456,"line_end":456,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9562871,"byte_end":9562942,"line_start":457,"line_end":457,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9562947,"byte_end":9562964,"line_start":458,"line_end":458,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9562969,"byte_end":9562972,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9562977,"byte_end":9563011,"line_start":460,"line_end":460,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563016,"byte_end":9563019,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563024,"byte_end":9563038,"line_start":462,"line_end":462,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563043,"byte_end":9563046,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563051,"byte_end":9563058,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563063,"byte_end":9563086,"line_start":465,"line_end":465,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563091,"byte_end":9563119,"line_start":466,"line_end":466,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563124,"byte_end":9563127,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563132,"byte_end":9563150,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563155,"byte_end":9563176,"line_start":469,"line_end":469,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563181,"byte_end":9563225,"line_start":470,"line_end":470,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563230,"byte_end":9563264,"line_start":471,"line_end":471,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563269,"byte_end":9563272,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563277,"byte_end":9563318,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563323,"byte_end":9563349,"line_start":474,"line_end":474,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563354,"byte_end":9563357,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563362,"byte_end":9563395,"line_start":476,"line_end":476,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563400,"byte_end":9563470,"line_start":477,"line_end":477,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563475,"byte_end":9563515,"line_start":478,"line_end":478,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563520,"byte_end":9563550,"line_start":479,"line_end":479,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563555,"byte_end":9563612,"line_start":480,"line_end":480,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563617,"byte_end":9563620,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563625,"byte_end":9563678,"line_start":482,"line_end":482,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563683,"byte_end":9563699,"line_start":483,"line_end":483,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563704,"byte_end":9563709,"line_start":484,"line_end":484,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9563714,"byte_end":9563721,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6355},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564804,"byte_end":9564809,"line_start":522,"line_end":522,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, causing the current\n task to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with exclusive write access, causing the current","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564167,"byte_end":9564239,"line_start":500,"line_end":500,"column_start":5,"column_end":77}},{"value":"/ task to yield until the lock has been acquired.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564244,"byte_end":9564295,"line_start":501,"line_end":501,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564300,"byte_end":9564303,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield while other writers or readers","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564308,"byte_end":9564370,"line_start":503,"line_end":503,"column_start":5,"column_end":67}},{"value":"/ currently have access to the lock.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564375,"byte_end":9564413,"line_start":504,"line_end":504,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564418,"byte_end":9564421,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564426,"byte_end":9564501,"line_start":506,"line_end":506,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564506,"byte_end":9564523,"line_start":507,"line_end":507,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564528,"byte_end":9564531,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564536,"byte_end":9564550,"line_start":509,"line_end":509,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564555,"byte_end":9564558,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564563,"byte_end":9564570,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564575,"byte_end":9564603,"line_start":512,"line_end":512,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564608,"byte_end":9564611,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564616,"byte_end":9564634,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564639,"byte_end":9564660,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564665,"byte_end":9564697,"line_start":516,"line_end":516,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564702,"byte_end":9564705,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564710,"byte_end":9564747,"line_start":518,"line_end":518,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564752,"byte_end":9564765,"line_start":519,"line_end":519,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564770,"byte_end":9564774,"line_start":520,"line_end":520,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9564779,"byte_end":9564786,"line_start":521,"line_end":521,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6359},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565913,"byte_end":9565922,"line_start":558,"line_end":558,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"pub fn try_write(&Self) -> Result<RwLockWriteGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565273,"byte_end":9565339,"line_start":535,"line_end":535,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565344,"byte_end":9565347,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565352,"byte_end":9565429,"line_start":537,"line_end":537,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565434,"byte_end":9565506,"line_start":538,"line_end":538,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565511,"byte_end":9565528,"line_start":539,"line_end":539,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565533,"byte_end":9565536,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565541,"byte_end":9565575,"line_start":541,"line_end":541,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565580,"byte_end":9565583,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565588,"byte_end":9565602,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565607,"byte_end":9565610,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565615,"byte_end":9565622,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565627,"byte_end":9565655,"line_start":546,"line_end":546,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565660,"byte_end":9565663,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565668,"byte_end":9565686,"line_start":548,"line_end":548,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565691,"byte_end":9565712,"line_start":549,"line_end":549,"column_start":5,"column_end":26}},{"value":"/     let rw = RwLock::new(1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565717,"byte_end":9565749,"line_start":550,"line_end":550,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565754,"byte_end":9565757,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/     let v = rw.read().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565762,"byte_end":9565794,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565799,"byte_end":9565825,"line_start":553,"line_end":553,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565830,"byte_end":9565833,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write().is_err());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565838,"byte_end":9565879,"line_start":555,"line_end":555,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565884,"byte_end":9565889,"line_start":556,"line_end":556,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9565894,"byte_end":9565901,"line_start":557,"line_end":557,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6360},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9566837,"byte_end":9566844,"line_start":589,"line_end":589,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9566365,"byte_end":9566420,"line_start":572,"line_end":572,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9566425,"byte_end":9566428,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `RwLock` mutably, no actual locking needs to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9566433,"byte_end":9566509,"line_start":574,"line_end":574,"column_start":5,"column_end":81}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9566514,"byte_end":9566588,"line_start":575,"line_end":575,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9566593,"byte_end":9566596,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9566601,"byte_end":9566615,"line_start":577,"line_end":577,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9566620,"byte_end":9566623,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9566628,"byte_end":9566635,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9566640,"byte_end":9566668,"line_start":580,"line_end":580,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9566673,"byte_end":9566676,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9566681,"byte_end":9566696,"line_start":582,"line_end":582,"column_start":5,"column_end":20}},{"value":"/     let mut lock = RwLock::new(1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9566701,"byte_end":9566739,"line_start":583,"line_end":583,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9566744,"byte_end":9566747,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/     let n = lock.get_mut();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9566752,"byte_end":9566783,"line_start":585,"line_end":585,"column_start":5,"column_end":36}},{"value":"/     *n = 2;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9566788,"byte_end":9566803,"line_start":586,"line_end":586,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9566808,"byte_end":9566813,"line_start":587,"line_end":587,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9566818,"byte_end":9566825,"line_start":588,"line_end":588,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6361},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9567078,"byte_end":9567088,"line_start":597,"line_end":597,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9567013,"byte_end":9567066,"line_start":596,"line_end":596,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":6429},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":6430},{"krate":0,"index":6431},{"krate":0,"index":6432},{"krate":0,"index":6433},{"krate":0,"index":13456},{"krate":0,"index":6434},{"krate":0,"index":13458},{"krate":0,"index":6435},{"krate":0,"index":6436},{"krate":0,"index":6437},{"krate":0,"index":6438},{"krate":0,"index":6439},{"krate":0,"index":6703},{"krate":0,"index":6707},{"krate":0,"index":6710},{"krate":0,"index":6713},{"krate":0,"index":6716},{"krate":0,"index":6720},{"krate":0,"index":6724},{"krate":0,"index":6731},{"krate":0,"index":6440},{"krate":0,"index":6450},{"krate":0,"index":6451},{"krate":0,"index":6453},{"krate":0,"index":6459},{"krate":0,"index":6461},{"krate":0,"index":6464},{"krate":0,"index":6467},{"krate":0,"index":6475},{"krate":0,"index":6478}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":23078,"byte_end":23102,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9580682,"byte_end":9580761,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9580762,"byte_end":9580772,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9580773,"byte_end":9580776,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9580777,"byte_end":9580853,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9580854,"byte_end":9580928,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9580929,"byte_end":9580932,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9580933,"byte_end":9580944,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9580945,"byte_end":9580948,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are the producer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9580949,"byte_end":9581029,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ and sender halves of the channel. The channel is created with an initial","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581030,"byte_end":9581106,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ value. The **latest** value stored in the channel is accessed with","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581107,"byte_end":9581177,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ [`Receiver::borrow()`]. Awaiting [`Receiver::changed()`] waits for a new","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581178,"byte_end":9581254,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ value to sent by the [`Sender`] half.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581255,"byte_end":9581296,"line_start":13,"line_end":13,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581297,"byte_end":9581300,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581301,"byte_end":9581315,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581316,"byte_end":9581319,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581320,"byte_end":9581327,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581328,"byte_end":9581355,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581356,"byte_end":9581359,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581360,"byte_end":9581424,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581425,"byte_end":9581476,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581477,"byte_end":9581480,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581481,"byte_end":9581514,"line_start":23,"line_end":23,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581515,"byte_end":9581561,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581562,"byte_end":9581620,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581621,"byte_end":9581634,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581635,"byte_end":9581646,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581647,"byte_end":9581650,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581651,"byte_end":9581677,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581678,"byte_end":9581690,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581691,"byte_end":9581698,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581699,"byte_end":9581706,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581707,"byte_end":9581710,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581711,"byte_end":9581724,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581725,"byte_end":9581728,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [`Sender::is_closed`] and [`Sender::closed`] allow the producer to detect","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581729,"byte_end":9581806,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ when all [`Receiver`] handles have been dropped. This indicates that there","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581807,"byte_end":9581885,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ is no further interest in the values being produced and work can be stopped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581886,"byte_end":9581966,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581967,"byte_end":9581970,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581971,"byte_end":9581990,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581991,"byte_end":9581994,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9581995,"byte_end":9582075,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9582076,"byte_end":9582155,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9582156,"byte_end":9582228,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9582229,"byte_end":9582232,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9582233,"byte_end":9582275,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9582276,"byte_end":9582322,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::changed()`]: crate::sync::watch::Receiver::changed","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9582323,"byte_end":9582389,"line_start":48,"line_end":48,"column_start":1,"column_end":67}},{"value":"/ [`Receiver::borrow()`]: crate::sync::watch::Receiver::borrow","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9582390,"byte_end":9582454,"line_start":49,"line_end":49,"column_start":1,"column_end":65}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9582455,"byte_end":9582499,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/ [`Sender::is_closed`]: crate::sync::watch::Sender::is_closed","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9582500,"byte_end":9582564,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9582565,"byte_end":9582623,"line_start":52,"line_end":52,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6703},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9583187,"byte_end":9583195,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6705},{"krate":0,"index":6706}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9582825,"byte_end":9582891,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9582892,"byte_end":9582895,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9582896,"byte_end":9582962,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9582963,"byte_end":9582966,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`WatchStream`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9582967,"byte_end":9583041,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ wrapper.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9583042,"byte_end":9583054,"line_start":66,"line_end":66,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9583055,"byte_end":9583058,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`WatchStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.WatchStream.html","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9583059,"byte_end":9583158,"line_start":68,"line_end":68,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":6710},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9583484,"byte_end":9583490,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6712}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9583319,"byte_end":9583384,"line_start":78,"line_end":78,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9583385,"byte_end":9583388,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9583389,"byte_end":9583455,"line_start":80,"line_end":80,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":6716},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9583810,"byte_end":9583813,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":6719}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9583527,"byte_end":9583569,"line_start":86,"line_end":86,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9583570,"byte_end":9583573,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9583574,"byte_end":9583650,"line_start":88,"line_end":88,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9583651,"byte_end":9583730,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9583731,"byte_end":9583781,"line_start":90,"line_end":90,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":6440},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9584390,"byte_end":9584395,"line_start":117,"line_end":117,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":6441},{"krate":0,"index":6734},{"krate":0,"index":6737},{"krate":0,"index":6442},{"krate":0,"index":6445},{"krate":0,"index":6740},{"krate":0,"index":6743},{"krate":0,"index":6447},{"krate":0,"index":6449}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"/ Watch error types","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9584402,"byte_end":9584423,"line_start":118,"line_end":118,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":6734},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9584531,"byte_end":9584540,"line_start":124,"line_end":124,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":6736}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9584448,"byte_end":9584494,"line_start":122,"line_end":122,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6740},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9584961,"byte_end":9584970,"line_start":140,"line_end":140,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::watch::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error produced when receiving a change notification.\n","sig":null,"attributes":[{"value":"/ Error produced when receiving a change notification.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9584868,"byte_end":9584924,"line_start":138,"line_end":138,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":6451},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9586025,"byte_end":9586032,"line_start":182,"line_end":182,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585262,"byte_end":9585338,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585339,"byte_end":9585342,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585343,"byte_end":9585425,"line_start":157,"line_end":157,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585426,"byte_end":9585502,"line_start":158,"line_end":158,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585503,"byte_end":9585539,"line_start":159,"line_end":159,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585540,"byte_end":9585543,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585544,"byte_end":9585558,"line_start":161,"line_end":161,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585559,"byte_end":9585562,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585563,"byte_end":9585570,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585571,"byte_end":9585598,"line_start":164,"line_end":164,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585599,"byte_end":9585602,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585603,"byte_end":9585667,"line_start":166,"line_end":166,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585668,"byte_end":9585719,"line_start":167,"line_end":167,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585720,"byte_end":9585723,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585724,"byte_end":9585757,"line_start":169,"line_end":169,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585758,"byte_end":9585804,"line_start":170,"line_end":170,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585805,"byte_end":9585863,"line_start":171,"line_end":171,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585864,"byte_end":9585877,"line_start":172,"line_end":172,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585878,"byte_end":9585889,"line_start":173,"line_end":173,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585890,"byte_end":9585893,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585894,"byte_end":9585920,"line_start":175,"line_end":175,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585921,"byte_end":9585933,"line_start":176,"line_end":176,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585934,"byte_end":9585941,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585942,"byte_end":9585949,"line_start":178,"line_end":178,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585950,"byte_end":9585953,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585954,"byte_end":9585983,"line_start":180,"line_end":180,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585984,"byte_end":9586017,"line_start":181,"line_end":181,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":6455},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9586915,"byte_end":9586921,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9586453,"byte_end":9586508,"line_start":201,"line_end":201,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9586513,"byte_end":9586516,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9586521,"byte_end":9586597,"line_start":203,"line_end":203,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9586602,"byte_end":9586678,"line_start":204,"line_end":204,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9586683,"byte_end":9586714,"line_start":205,"line_end":205,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9586719,"byte_end":9586722,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9586727,"byte_end":9586741,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9586746,"byte_end":9586749,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9586754,"byte_end":9586761,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9586766,"byte_end":9586793,"line_start":210,"line_end":210,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9586798,"byte_end":9586801,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9586806,"byte_end":9586848,"line_start":212,"line_end":212,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9586853,"byte_end":9586891,"line_start":213,"line_end":213,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9586896,"byte_end":9586903,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6456},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587847,"byte_end":9587854,"line_start":248,"line_end":248,"column_start":18,"column_end":25},"name":"changed","qualname":"<Receiver<T>>::changed","value":"pub async fn changed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for a change notification","sig":null,"attributes":[{"value":"/ Wait for a change notification","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587033,"byte_end":9587067,"line_start":220,"line_end":220,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587072,"byte_end":9587075,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Returns when a new value has been sent by the [`Sender`] since the last","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587080,"byte_end":9587155,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ time `changed()` was called. When the `Sender` half is dropped, `Err` is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587160,"byte_end":9587236,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ returned.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587241,"byte_end":9587254,"line_start":224,"line_end":224,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587259,"byte_end":9587262,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587267,"byte_end":9587296,"line_start":226,"line_end":226,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587301,"byte_end":9587304,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587309,"byte_end":9587323,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587328,"byte_end":9587331,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587336,"byte_end":9587343,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587348,"byte_end":9587375,"line_start":231,"line_end":231,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587380,"byte_end":9587383,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587388,"byte_end":9587406,"line_start":233,"line_end":233,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587411,"byte_end":9587432,"line_start":234,"line_end":234,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587437,"byte_end":9587488,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587493,"byte_end":9587496,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587501,"byte_end":9587534,"line_start":237,"line_end":237,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"goodbye\").unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587539,"byte_end":9587579,"line_start":238,"line_end":238,"column_start":5,"column_end":45}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587584,"byte_end":9587595,"line_start":239,"line_end":239,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587600,"byte_end":9587603,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.changed().await.is_ok());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587608,"byte_end":9587652,"line_start":241,"line_end":241,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*rx.borrow(), \"goodbye\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587657,"byte_end":9587701,"line_start":242,"line_end":242,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587706,"byte_end":9587709,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/     // The `tx` handle has been dropped","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587714,"byte_end":9587757,"line_start":244,"line_end":244,"column_start":5,"column_end":48}},{"value":"/     assert!(rx.changed().await.is_err());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587762,"byte_end":9587807,"line_start":245,"line_end":245,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587812,"byte_end":9587817,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9587822,"byte_end":9587829,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6469},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9589791,"byte_end":9589795,"line_start":313,"line_end":313,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Sends a new value via the channel, notifying all receivers.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9589716,"byte_end":9589779,"line_start":312,"line_end":312,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6470},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9590822,"byte_end":9590828,"line_start":344,"line_end":344,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Sender<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9590360,"byte_end":9590415,"line_start":330,"line_end":330,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9590420,"byte_end":9590423,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9590428,"byte_end":9590504,"line_start":332,"line_end":332,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9590509,"byte_end":9590585,"line_start":333,"line_end":333,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9590590,"byte_end":9590621,"line_start":334,"line_end":334,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9590626,"byte_end":9590629,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9590634,"byte_end":9590648,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9590653,"byte_end":9590656,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9590661,"byte_end":9590668,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9590673,"byte_end":9590700,"line_start":339,"line_end":339,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9590705,"byte_end":9590708,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let (tx, _) = watch::channel(\"hello\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9590713,"byte_end":9590755,"line_start":341,"line_end":341,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*tx.borrow(), \"hello\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9590760,"byte_end":9590798,"line_start":342,"line_end":342,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9590803,"byte_end":9590810,"line_start":343,"line_end":343,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6471},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591256,"byte_end":9591265,"line_start":361,"line_end":361,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when all receivers\n have dropped.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when all receivers","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9590940,"byte_end":9591014,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"/ have dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591019,"byte_end":9591036,"line_start":350,"line_end":350,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591041,"byte_end":9591044,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591049,"byte_end":9591063,"line_start":352,"line_end":352,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591068,"byte_end":9591071,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591076,"byte_end":9591083,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::watch::channel(());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591088,"byte_end":9591139,"line_start":355,"line_end":355,"column_start":5,"column_end":56}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591144,"byte_end":9591173,"line_start":356,"line_end":356,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591178,"byte_end":9591181,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591186,"byte_end":9591199,"line_start":358,"line_end":358,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591204,"byte_end":9591232,"line_start":359,"line_end":359,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591237,"byte_end":9591244,"line_start":360,"line_end":360,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6472},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9592009,"byte_end":9592015,"line_start":389,"line_end":389,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591346,"byte_end":9591392,"line_start":365,"line_end":365,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591397,"byte_end":9591400,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591405,"byte_end":9591479,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591484,"byte_end":9591539,"line_start":368,"line_end":368,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591544,"byte_end":9591547,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591552,"byte_end":9591566,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591571,"byte_end":9591574,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591579,"byte_end":9591586,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591591,"byte_end":9591618,"line_start":373,"line_end":373,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591623,"byte_end":9591626,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591631,"byte_end":9591649,"line_start":375,"line_end":375,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591654,"byte_end":9591675,"line_start":376,"line_end":376,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = watch::channel(\"hello\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591680,"byte_end":9591727,"line_start":377,"line_end":377,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591732,"byte_end":9591735,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591740,"byte_end":9591773,"line_start":379,"line_end":379,"column_start":5,"column_end":38}},{"value":"/         // use `rx`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591778,"byte_end":9591801,"line_start":380,"line_end":380,"column_start":5,"column_end":28}},{"value":"/         drop(rx);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591806,"byte_end":9591827,"line_start":381,"line_end":381,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591832,"byte_end":9591843,"line_start":382,"line_end":382,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591848,"byte_end":9591851,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/     // Waits for `rx` to drop","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591856,"byte_end":9591889,"line_start":384,"line_end":384,"column_start":5,"column_end":38}},{"value":"/     tx.closed().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591894,"byte_end":9591920,"line_start":385,"line_end":385,"column_start":5,"column_end":31}},{"value":"/     println!(\"the `rx` handles dropped\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591925,"byte_end":9591969,"line_start":386,"line_end":386,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591974,"byte_end":9591979,"line_start":387,"line_end":387,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9591984,"byte_end":9591991,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":664},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":6745},{"krate":0,"index":6746},{"krate":0,"index":6747},{"krate":0,"index":6748},{"krate":0,"index":6750},{"krate":0,"index":6751},{"krate":0,"index":6756},{"krate":0,"index":6757},{"krate":0,"index":6763},{"krate":0,"index":6764},{"krate":0,"index":6844},{"krate":0,"index":6845},{"krate":0,"index":6846},{"krate":0,"index":6847},{"krate":0,"index":6908}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"/ Asynchronous green-threads.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":131548,"byte_end":131579,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":131580,"byte_end":131583,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":131584,"byte_end":131606,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":131607,"byte_end":131610,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":131611,"byte_end":131692,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":131693,"byte_end":131773,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":131774,"byte_end":131854,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":131855,"byte_end":131929,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":131930,"byte_end":132005,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":132006,"byte_end":132028,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":132029,"byte_end":132032,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":132033,"byte_end":132068,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":132069,"byte_end":132072,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":132073,"byte_end":132147,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":132148,"byte_end":132227,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":132228,"byte_end":132300,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":132301,"byte_end":132376,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":132377,"byte_end":132430,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":132431,"byte_end":132434,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":132435,"byte_end":132512,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":132513,"byte_end":132586,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":132587,"byte_end":132666,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":132667,"byte_end":132745,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":132746,"byte_end":132818,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":132819,"byte_end":132894,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":132895,"byte_end":132969,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":132970,"byte_end":133045,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":133046,"byte_end":133076,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":133077,"byte_end":133080,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":133081,"byte_end":133159,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":133160,"byte_end":133235,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":133236,"byte_end":133313,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":133314,"byte_end":133393,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":133394,"byte_end":133472,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":133473,"byte_end":133548,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":133549,"byte_end":133624,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":133625,"byte_end":133686,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":133687,"byte_end":133690,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":133691,"byte_end":133715,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":133716,"byte_end":133780,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":133781,"byte_end":133841,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":133842,"byte_end":133931,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":133932,"byte_end":134020,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134021,"byte_end":134024,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134025,"byte_end":134050,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134051,"byte_end":134054,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134055,"byte_end":134122,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134123,"byte_end":134126,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134127,"byte_end":134143,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134144,"byte_end":134147,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134148,"byte_end":134227,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134228,"byte_end":134307,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134308,"byte_end":134387,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134388,"byte_end":134455,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134456,"byte_end":134459,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134460,"byte_end":134467,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134468,"byte_end":134488,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134489,"byte_end":134492,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134493,"byte_end":134515,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134516,"byte_end":134539,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134540,"byte_end":134576,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134577,"byte_end":134584,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134585,"byte_end":134592,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134593,"byte_end":134600,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134601,"byte_end":134604,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134605,"byte_end":134684,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134685,"byte_end":134763,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134764,"byte_end":134798,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134799,"byte_end":134802,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134803,"byte_end":134810,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134811,"byte_end":134831,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134832,"byte_end":134835,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134836,"byte_end":134916,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134917,"byte_end":134951,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134952,"byte_end":134966,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134967,"byte_end":134989,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134990,"byte_end":134997,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":134998,"byte_end":135001,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135002,"byte_end":135012,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135013,"byte_end":135016,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135017,"byte_end":135061,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135062,"byte_end":135091,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135092,"byte_end":135131,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135132,"byte_end":135144,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135145,"byte_end":135152,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135153,"byte_end":135160,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135161,"byte_end":135164,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135165,"byte_end":135245,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135246,"byte_end":135322,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ example:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135323,"byte_end":135335,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135336,"byte_end":135339,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135340,"byte_end":135347,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135348,"byte_end":135368,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135369,"byte_end":135372,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135373,"byte_end":135411,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135412,"byte_end":135446,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135447,"byte_end":135488,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135489,"byte_end":135496,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135497,"byte_end":135500,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135501,"byte_end":135559,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135560,"byte_end":135593,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135594,"byte_end":135601,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135602,"byte_end":135609,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135610,"byte_end":135613,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135614,"byte_end":135682,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ feature flag is enabled.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135683,"byte_end":135711,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135712,"byte_end":135715,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135716,"byte_end":135757,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135758,"byte_end":135791,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135792,"byte_end":135838,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135839,"byte_end":135882,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135883,"byte_end":135925,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135926,"byte_end":135967,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135968,"byte_end":135971,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":135972,"byte_end":136001,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136002,"byte_end":136005,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136006,"byte_end":136086,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136087,"byte_end":136166,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136167,"byte_end":136246,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136247,"byte_end":136287,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136288,"byte_end":136291,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136292,"byte_end":136366,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136367,"byte_end":136447,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136448,"byte_end":136451,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136452,"byte_end":136475,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136476,"byte_end":136479,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136480,"byte_end":136560,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136561,"byte_end":136627,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136628,"byte_end":136695,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136696,"byte_end":136770,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136771,"byte_end":136783,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136784,"byte_end":136787,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136788,"byte_end":136795,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136796,"byte_end":136816,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136817,"byte_end":136820,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136821,"byte_end":136844,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136845,"byte_end":136874,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136875,"byte_end":136937,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136938,"byte_end":136945,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136946,"byte_end":136953,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136954,"byte_end":136961,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136962,"byte_end":136965,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":136966,"byte_end":137040,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137041,"byte_end":137108,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137109,"byte_end":137112,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137113,"byte_end":137124,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137125,"byte_end":137147,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137148,"byte_end":137212,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137213,"byte_end":137253,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137254,"byte_end":137316,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137317,"byte_end":137345,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137346,"byte_end":137353,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137354,"byte_end":137357,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137358,"byte_end":137387,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137388,"byte_end":137433,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137434,"byte_end":137446,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137447,"byte_end":137454,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137455,"byte_end":137462,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137463,"byte_end":137466,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137467,"byte_end":137490,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137491,"byte_end":137494,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ When using the [multi-threaded runtime][rt-multi-thread], the [`task::block_in_place`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137495,"byte_end":137585,"line_start":162,"line_end":162,"column_start":1,"column_end":91}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137586,"byte_end":137660,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137661,"byte_end":137737,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137738,"byte_end":137812,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137813,"byte_end":137892,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137893,"byte_end":137975,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137976,"byte_end":137997,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":137998,"byte_end":138001,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138002,"byte_end":138018,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138019,"byte_end":138022,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138023,"byte_end":138030,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138031,"byte_end":138051,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138052,"byte_end":138055,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138056,"byte_end":138079,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138080,"byte_end":138122,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138123,"byte_end":138185,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138186,"byte_end":138214,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138215,"byte_end":138222,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138223,"byte_end":138226,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138227,"byte_end":138272,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138273,"byte_end":138280,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138281,"byte_end":138288,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138289,"byte_end":138292,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138293,"byte_end":138311,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138312,"byte_end":138315,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138316,"byte_end":138390,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138391,"byte_end":138469,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138470,"byte_end":138546,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138547,"byte_end":138604,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138605,"byte_end":138683,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138684,"byte_end":138712,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138713,"byte_end":138716,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138717,"byte_end":138728,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138729,"byte_end":138749,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138750,"byte_end":138753,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138754,"byte_end":138792,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138793,"byte_end":138804,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138805,"byte_end":138832,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138833,"byte_end":138851,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138852,"byte_end":138894,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138895,"byte_end":138906,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138907,"byte_end":138910,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138911,"byte_end":138978,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":138979,"byte_end":139011,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":139012,"byte_end":139048,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":139049,"byte_end":139054,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":139055,"byte_end":139068,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":139069,"byte_end":139076,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":139077,"byte_end":139084,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":139085,"byte_end":139088,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":139089,"byte_end":139146,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":139147,"byte_end":139204,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"/ [rt-multi-thread]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":139205,"byte_end":139268,"line_start":214,"line_end":214,"column_start":1,"column_end":64}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":139269,"byte_end":139318,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/mod.rs","byte_start":139319,"byte_end":139368,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":6909},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/blocking.rs","byte_start":9599699,"byte_end":9599713,"line_start":109,"line_end":109,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"pub fn spawn_blocking<F, R>(F) -> JoinHandle<R> where F: FnOnce() -> R +\nSend + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/blocking.rs","byte_start":9599673,"byte_end":9599685,"line_start":108,"line_end":108,"column_start":36,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":6912},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/spawn.rs","byte_start":9603600,"byte_end":9603605,"line_start":127,"line_end":127,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/spawn.rs","byte_start":9603574,"byte_end":9603586,"line_start":126,"line_end":126,"column_start":36,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":6914},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/yield_now.rs","byte_start":9604579,"byte_end":9604588,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/yield_now.rs","byte_start":9604498,"byte_end":9604561,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6922},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9612694,"byte_end":9612702,"line_start":213,"line_end":213,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":6923},{"krate":0,"index":6924},{"krate":0,"index":6925}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":6931},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9614796,"byte_end":9614807,"line_start":295,"line_end":295,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":23385,"byte_end":23407,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9614770,"byte_end":9614782,"line_start":294,"line_end":294,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":6799},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9615704,"byte_end":9615707,"line_start":325,"line_end":325,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9615659,"byte_end":9615692,"line_start":324,"line_end":324,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6800},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9617462,"byte_end":9617473,"line_start":379,"line_end":379,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616249,"byte_end":9616299,"line_start":342,"line_end":342,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616304,"byte_end":9616307,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616312,"byte_end":9616372,"line_start":344,"line_end":344,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616377,"byte_end":9616380,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616385,"byte_end":9616457,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616462,"byte_end":9616532,"line_start":347,"line_end":347,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616537,"byte_end":9616548,"line_start":348,"line_end":348,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616553,"byte_end":9616573,"line_start":349,"line_end":349,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616578,"byte_end":9616581,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616586,"byte_end":9616604,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616609,"byte_end":9616630,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616635,"byte_end":9616677,"line_start":353,"line_end":353,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616682,"byte_end":9616685,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616690,"byte_end":9616762,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616767,"byte_end":9616820,"line_start":356,"line_end":356,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616825,"byte_end":9616858,"line_start":357,"line_end":357,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616863,"byte_end":9616880,"line_start":358,"line_end":358,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616885,"byte_end":9616896,"line_start":359,"line_end":359,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616901,"byte_end":9616904,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616909,"byte_end":9616943,"line_start":361,"line_end":361,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616948,"byte_end":9616984,"line_start":362,"line_end":362,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9616989,"byte_end":9617007,"line_start":363,"line_end":363,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9617012,"byte_end":9617029,"line_start":364,"line_end":364,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9617034,"byte_end":9617037,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9617042,"byte_end":9617113,"line_start":366,"line_end":366,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9617118,"byte_end":9617168,"line_start":367,"line_end":367,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9617173,"byte_end":9617206,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9617211,"byte_end":9617228,"line_start":369,"line_end":369,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9617233,"byte_end":9617244,"line_start":370,"line_end":370,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9617249,"byte_end":9617252,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9617257,"byte_end":9617293,"line_start":372,"line_end":372,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9617298,"byte_end":9617316,"line_start":373,"line_end":373,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9617321,"byte_end":9617338,"line_start":374,"line_end":374,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9617343,"byte_end":9617348,"line_start":375,"line_end":375,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9617353,"byte_end":9617360,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9617365,"byte_end":9617400,"line_start":377,"line_end":377,"column_start":5,"column_end":40}},{"value":"track_caller","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9617436,"byte_end":9617448,"line_start":378,"line_end":378,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":6802},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9620313,"byte_end":9620321,"line_start":455,"line_end":455,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9617858,"byte_end":9617932,"line_start":391,"line_end":391,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9617937,"byte_end":9617996,"line_start":392,"line_end":392,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618001,"byte_end":9618004,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618009,"byte_end":9618076,"line_start":394,"line_end":394,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618081,"byte_end":9618154,"line_start":395,"line_end":395,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618159,"byte_end":9618235,"line_start":396,"line_end":396,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618240,"byte_end":9618320,"line_start":397,"line_end":397,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618325,"byte_end":9618344,"line_start":398,"line_end":398,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618349,"byte_end":9618352,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618357,"byte_end":9618423,"line_start":400,"line_end":400,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618428,"byte_end":9618431,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618436,"byte_end":9618448,"line_start":402,"line_end":402,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618453,"byte_end":9618456,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618461,"byte_end":9618533,"line_start":404,"line_end":404,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618538,"byte_end":9618611,"line_start":405,"line_end":405,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618616,"byte_end":9618619,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618624,"byte_end":9618635,"line_start":407,"line_end":407,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618640,"byte_end":9618643,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618648,"byte_end":9618722,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618727,"byte_end":9618802,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618807,"byte_end":9618882,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618887,"byte_end":9618964,"line_start":412,"line_end":412,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618969,"byte_end":9618972,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9618977,"byte_end":9619010,"line_start":414,"line_end":414,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619015,"byte_end":9619034,"line_start":415,"line_end":415,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619039,"byte_end":9619071,"line_start":416,"line_end":416,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619076,"byte_end":9619096,"line_start":417,"line_end":417,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619101,"byte_end":9619104,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619109,"byte_end":9619147,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619152,"byte_end":9619190,"line_start":420,"line_end":420,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619195,"byte_end":9619226,"line_start":421,"line_end":421,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619231,"byte_end":9619275,"line_start":422,"line_end":422,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619280,"byte_end":9619339,"line_start":423,"line_end":423,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619344,"byte_end":9619366,"line_start":424,"line_end":424,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619371,"byte_end":9619386,"line_start":425,"line_end":425,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619391,"byte_end":9619409,"line_start":426,"line_end":426,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619414,"byte_end":9619425,"line_start":427,"line_end":427,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619430,"byte_end":9619458,"line_start":428,"line_end":428,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619463,"byte_end":9619469,"line_start":429,"line_end":429,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619474,"byte_end":9619481,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619486,"byte_end":9619520,"line_start":431,"line_end":431,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619525,"byte_end":9619532,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619537,"byte_end":9619569,"line_start":433,"line_end":433,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619574,"byte_end":9619594,"line_start":434,"line_end":434,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619599,"byte_end":9619602,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619607,"byte_end":9619645,"line_start":436,"line_end":436,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619650,"byte_end":9619688,"line_start":437,"line_end":437,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619693,"byte_end":9619724,"line_start":438,"line_end":438,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619729,"byte_end":9619773,"line_start":439,"line_end":439,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619778,"byte_end":9619837,"line_start":440,"line_end":440,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619842,"byte_end":9619864,"line_start":441,"line_end":441,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619869,"byte_end":9619890,"line_start":442,"line_end":442,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619895,"byte_end":9619913,"line_start":443,"line_end":443,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619918,"byte_end":9619929,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619934,"byte_end":9619962,"line_start":445,"line_end":445,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619967,"byte_end":9619973,"line_start":446,"line_end":446,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619978,"byte_end":9619985,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619990,"byte_end":9619993,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9619998,"byte_end":9620033,"line_start":449,"line_end":449,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9620038,"byte_end":9620105,"line_start":450,"line_end":450,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9620110,"byte_end":9620165,"line_start":451,"line_end":451,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9620170,"byte_end":9620224,"line_start":452,"line_end":452,"column_start":5,"column_end":59}},{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9620229,"byte_end":9620251,"line_start":453,"line_end":453,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":6804},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621568,"byte_end":9621577,"line_start":490,"line_end":490,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<F, '_>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9620476,"byte_end":9620546,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9620551,"byte_end":9620554,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9620559,"byte_end":9620629,"line_start":464,"line_end":464,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9620634,"byte_end":9620710,"line_start":465,"line_end":465,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9620715,"byte_end":9620783,"line_start":466,"line_end":466,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9620788,"byte_end":9620868,"line_start":467,"line_end":467,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9620873,"byte_end":9620945,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9620950,"byte_end":9621025,"line_start":469,"line_end":469,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621030,"byte_end":9621086,"line_start":470,"line_end":470,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621091,"byte_end":9621094,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621099,"byte_end":9621113,"line_start":472,"line_end":472,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621118,"byte_end":9621121,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621126,"byte_end":9621137,"line_start":474,"line_end":474,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621142,"byte_end":9621162,"line_start":475,"line_end":475,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621167,"byte_end":9621170,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621175,"byte_end":9621193,"line_start":477,"line_end":477,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621198,"byte_end":9621219,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621224,"byte_end":9621271,"line_start":479,"line_end":479,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621276,"byte_end":9621318,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621323,"byte_end":9621345,"line_start":481,"line_end":481,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621350,"byte_end":9621380,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621385,"byte_end":9621403,"line_start":483,"line_end":483,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621408,"byte_end":9621425,"line_start":484,"line_end":484,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621430,"byte_end":9621435,"line_start":485,"line_end":485,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621440,"byte_end":9621447,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621452,"byte_end":9621455,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621460,"byte_end":9621495,"line_start":488,"line_end":488,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9621500,"byte_end":9621550,"line_start":489,"line_end":489,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":6861},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630586,"byte_end":9630594,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":6863}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9629707,"byte_end":9629737,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9629738,"byte_end":9629741,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9629742,"byte_end":9629796,"line_start":65,"line_end":65,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9629797,"byte_end":9629800,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9629801,"byte_end":9629867,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9629868,"byte_end":9629935,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9629936,"byte_end":9629993,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9629994,"byte_end":9630063,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630064,"byte_end":9630067,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630068,"byte_end":9630082,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630083,"byte_end":9630086,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630087,"byte_end":9630094,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630095,"byte_end":9630117,"line_start":75,"line_end":75,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630118,"byte_end":9630142,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630143,"byte_end":9630170,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630171,"byte_end":9630176,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630177,"byte_end":9630180,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630181,"byte_end":9630213,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630214,"byte_end":9630250,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630251,"byte_end":9630264,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630265,"byte_end":9630268,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630269,"byte_end":9630301,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630302,"byte_end":9630338,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630339,"byte_end":9630342,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630343,"byte_end":9630379,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630380,"byte_end":9630420,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630421,"byte_end":9630438,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630439,"byte_end":9630452,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630453,"byte_end":9630460,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630461,"byte_end":9630468,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630469,"byte_end":9630528,"line_start":93,"line_end":93,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":6863},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630636,"byte_end":9630641,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":6861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6866},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9631169,"byte_end":9631174,"line_start":118,"line_end":118,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub async fn scope<F>(&'static Self, T, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630719,"byte_end":9630783,"line_start":101,"line_end":101,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630788,"byte_end":9630791,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630796,"byte_end":9630857,"line_start":103,"line_end":103,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630862,"byte_end":9630865,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630870,"byte_end":9630886,"line_start":105,"line_end":105,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630891,"byte_end":9630894,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630899,"byte_end":9630906,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630911,"byte_end":9630933,"line_start":108,"line_end":108,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630938,"byte_end":9630962,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630967,"byte_end":9630994,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630999,"byte_end":9631004,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9631009,"byte_end":9631012,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9631017,"byte_end":9631049,"line_start":113,"line_end":113,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9631054,"byte_end":9631109,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9631114,"byte_end":9631127,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9631132,"byte_end":9631139,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9631144,"byte_end":9631151,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6870},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9631648,"byte_end":9631652,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9631399,"byte_end":9631465,"line_start":130,"line_end":130,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9631470,"byte_end":9631473,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9631478,"byte_end":9631490,"line_start":132,"line_end":132,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9631495,"byte_end":9631498,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9631503,"byte_end":9631564,"line_start":134,"line_end":134,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9631569,"byte_end":9631636,"line_start":135,"line_end":135,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6873},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9632140,"byte_end":9632148,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9631893,"byte_end":9631959,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9631964,"byte_end":9631967,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the accociated key is not present, this","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9631972,"byte_end":9632038,"line_start":148,"line_end":148,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9632043,"byte_end":9632108,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9632113,"byte_end":9632128,"line_start":150,"line_end":150,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6879},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9632608,"byte_end":9632611,"line_start":168,"line_end":168,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9632503,"byte_end":9632545,"line_start":166,"line_end":166,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9632550,"byte_end":9632596,"line_start":167,"line_end":167,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6934},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9634100,"byte_end":9634111,"line_start":226,"line_end":226,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":6935}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9633975,"byte_end":9634050,"line_start":224,"line_end":224,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":6947},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":6948},{"krate":0,"index":6949},{"krate":0,"index":6950},{"krate":0,"index":6951},{"krate":0,"index":6952},{"krate":0,"index":6953},{"krate":0,"index":6954},{"krate":0,"index":7206},{"krate":0,"index":7207},{"krate":0,"index":7208},{"krate":0,"index":7209},{"krate":0,"index":7210},{"krate":0,"index":7234},{"krate":0,"index":7270},{"krate":0,"index":7271},{"krate":0,"index":7291},{"krate":0,"index":7292},{"krate":0,"index":7293},{"krate":0,"index":7294},{"krate":0,"index":7295},{"krate":0,"index":7322},{"krate":0,"index":7323},{"krate":0,"index":7324},{"krate":0,"index":7325},{"krate":0,"index":7326}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":24384,"byte_end":24408,"line_start":311,"line_end":311,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9634484,"byte_end":9634516,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9634517,"byte_end":9634520,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9634521,"byte_end":9634601,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9634602,"byte_end":9634614,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9634615,"byte_end":9634618,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Sleep` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9634619,"byte_end":9634700,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9634701,"byte_end":9634715,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9634716,"byte_end":9634719,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9634720,"byte_end":9634790,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9634791,"byte_end":9634871,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9634872,"byte_end":9634886,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9634887,"byte_end":9634890,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9634891,"byte_end":9634970,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9634971,"byte_end":9635043,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635044,"byte_end":9635113,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635114,"byte_end":9635117,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635118,"byte_end":9635189,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635190,"byte_end":9635209,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635210,"byte_end":9635213,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635214,"byte_end":9635284,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635285,"byte_end":9635288,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635289,"byte_end":9635303,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635304,"byte_end":9635307,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635308,"byte_end":9635354,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635355,"byte_end":9635358,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635359,"byte_end":9635366,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::sleep;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635367,"byte_end":9635394,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635395,"byte_end":9635398,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635399,"byte_end":9635427,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635428,"byte_end":9635431,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635432,"byte_end":9635435,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635436,"byte_end":9635454,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635455,"byte_end":9635476,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635477,"byte_end":9635525,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635526,"byte_end":9635566,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635567,"byte_end":9635572,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635573,"byte_end":9635580,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635581,"byte_end":9635584,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 300ms.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635585,"byte_end":9635640,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635641,"byte_end":9635644,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635645,"byte_end":9635652,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635653,"byte_end":9635694,"line_start":42,"line_end":42,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635695,"byte_end":9635698,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635699,"byte_end":9635727,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635728,"byte_end":9635751,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635752,"byte_end":9635757,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635758,"byte_end":9635761,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635762,"byte_end":9635784,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635785,"byte_end":9635852,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635853,"byte_end":9635856,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635857,"byte_end":9635878,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635879,"byte_end":9635919,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635920,"byte_end":9635925,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635926,"byte_end":9635933,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635934,"byte_end":9635941,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635942,"byte_end":9635945,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9635946,"byte_end":9636022,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636023,"byte_end":9636026,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`sleep`] is that an","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636027,"byte_end":9636091,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/ [`interval`] measures the time since the last tick, which means that","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636092,"byte_end":9636164,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"/ `.tick().await` may wait for a shorter time than the duration specified","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636165,"byte_end":9636240,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ for the interval if some time has passed between calls to `.tick().await`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636241,"byte_end":9636319,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636320,"byte_end":9636323,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636324,"byte_end":9636398,"line_start":64,"line_end":64,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636399,"byte_end":9636469,"line_start":65,"line_end":65,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636470,"byte_end":9636482,"line_start":66,"line_end":66,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636483,"byte_end":9636486,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636487,"byte_end":9636494,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636495,"byte_end":9636515,"line_start":69,"line_end":69,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636516,"byte_end":9636519,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636520,"byte_end":9636561,"line_start":71,"line_end":71,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636562,"byte_end":9636588,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636589,"byte_end":9636644,"line_start":73,"line_end":73,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636645,"byte_end":9636650,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636651,"byte_end":9636654,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636655,"byte_end":9636673,"line_start":76,"line_end":76,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636674,"byte_end":9636695,"line_start":77,"line_end":77,"column_start":1,"column_end":22}},{"value":"/     let interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636696,"byte_end":9636764,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/     tokio::pin!(interval);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636765,"byte_end":9636795,"line_start":79,"line_end":79,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636796,"byte_end":9636799,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636800,"byte_end":9636824,"line_start":81,"line_end":81,"column_start":1,"column_end":25}},{"value":"/         interval.as_mut().tick().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636825,"byte_end":9636868,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636869,"byte_end":9636914,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636915,"byte_end":9636924,"line_start":84,"line_end":84,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636925,"byte_end":9636930,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636931,"byte_end":9636938,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636939,"byte_end":9636942,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636943,"byte_end":9636978,"line_start":88,"line_end":88,"column_start":1,"column_end":36}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9636979,"byte_end":9637020,"line_start":89,"line_end":89,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":7333},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/clock.rs","byte_start":9639963,"byte_end":9639968,"line_start":88,"line_end":88,"column_start":12,"column_end":17},"name":"pause","qualname":"::time::clock::pause","value":"pub fn pause()","parent":null,"children":[],"decl_id":null,"docs":" Pause time","sig":null,"attributes":[{"value":"cfg(feature = \"test-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":24055,"byte_end":24084,"line_start":295,"line_end":295,"column_start":13,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":7334},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/clock.rs","byte_start":9640405,"byte_end":9640411,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"resume","qualname":"::time::clock::resume","value":"pub fn resume()","parent":null,"children":[],"decl_id":null,"docs":" Resume time","sig":null,"attributes":[{"value":"cfg(feature = \"test-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":24055,"byte_end":24084,"line_start":295,"line_end":295,"column_start":13,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":7335},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/clock.rs","byte_start":9641043,"byte_end":9641050,"line_start":122,"line_end":122,"column_start":18,"column_end":25},"name":"advance","qualname":"::time::clock::advance","value":"pub async fn advance(Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Advance time","sig":null,"attributes":[{"value":"cfg(feature = \"test-util\")","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/cfg.rs","byte_start":24055,"byte_end":24084,"line_start":295,"line_end":295,"column_start":13,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":7132},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9704663,"byte_end":9704674,"line_start":19,"line_end":19,"column_start":8,"column_end":19},"name":"sleep_until","qualname":"::time::driver::sleep::sleep_until","value":"pub fn sleep_until(Instant) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9704275,"byte_end":9704313,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9704314,"byte_end":9704317,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9704318,"byte_end":9704398,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9704399,"byte_end":9704476,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9704477,"byte_end":9704512,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9704513,"byte_end":9704516,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9704517,"byte_end":9704535,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9704536,"byte_end":9704539,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9704540,"byte_end":9704625,"line_start":17,"line_end":17,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9704626,"byte_end":9704655,"line_start":18,"line_end":18,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":7133},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705728,"byte_end":9705733,"line_start":56,"line_end":56,"column_start":8,"column_end":13},"name":"sleep","qualname":"::time::driver::sleep::sleep","value":"pub fn sleep(Duration) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9704741,"byte_end":9704780,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9704781,"byte_end":9704784,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `sleep_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9704785,"byte_end":9704860,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9704861,"byte_end":9704896,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9704897,"byte_end":9704900,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9704901,"byte_end":9704981,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9704982,"byte_end":9705059,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705060,"byte_end":9705095,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705096,"byte_end":9705099,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705100,"byte_end":9705163,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705164,"byte_end":9705167,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The maximum duration for a sleep is 68719476734 milliseconds (approximately 2.2 years).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705168,"byte_end":9705259,"line_start":34,"line_end":34,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705260,"byte_end":9705263,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705264,"byte_end":9705282,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705283,"byte_end":9705286,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705287,"byte_end":9705372,"line_start":38,"line_end":38,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705373,"byte_end":9705402,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705403,"byte_end":9705406,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705407,"byte_end":9705421,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705422,"byte_end":9705425,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705426,"byte_end":9705473,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705474,"byte_end":9705477,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705478,"byte_end":9705485,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705486,"byte_end":9705525,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705526,"byte_end":9705529,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705530,"byte_end":9705548,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705549,"byte_end":9705570,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705571,"byte_end":9705619,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705620,"byte_end":9705660,"line_start":51,"line_end":51,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705661,"byte_end":9705666,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705667,"byte_end":9705674,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705675,"byte_end":9705678,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9705679,"byte_end":9705720,"line_start":55,"line_end":55,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":7780},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9708689,"byte_end":9708694,"line_start":150,"line_end":150,"column_start":16,"column_end":21},"name":"Sleep","qualname":"::time::driver::sleep::Sleep","value":"Sleep {  }","parent":null,"children":[{"krate":0,"index":7781},{"krate":0,"index":7782}],"decl_id":null,"docs":" Future returned by [`sleep`](sleep) and [`sleep_until`](sleep_until).","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7136},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709140,"byte_end":9709148,"line_start":168,"line_end":168,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Sleep>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709070,"byte_end":9709128,"line_start":167,"line_end":167,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":7137},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709343,"byte_end":9709353,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Sleep>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `Sleep` has elapsed.","sig":null,"attributes":[{"value":"/ Returns `true` if `Sleep` has elapsed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709202,"byte_end":9709244,"line_start":172,"line_end":172,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709249,"byte_end":9709252,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ A `Sleep` instance is elapsed when the requested duration has elapsed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709257,"byte_end":9709331,"line_start":174,"line_end":174,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":7138},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9710349,"byte_end":9710354,"line_start":206,"line_end":206,"column_start":12,"column_end":17},"name":"reset","qualname":"<Sleep>::reset","value":"pub fn reset(Pin<&mut Self>, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Sleep` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Sleep` instance to a new deadline.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709414,"byte_end":9709464,"line_start":179,"line_end":179,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709469,"byte_end":9709472,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Sleep`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709477,"byte_end":9709551,"line_start":181,"line_end":181,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709556,"byte_end":9709623,"line_start":182,"line_end":182,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709628,"byte_end":9709631,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709636,"byte_end":9709704,"line_start":184,"line_end":184,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709709,"byte_end":9709723,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709728,"byte_end":9709731,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ To call this method, you will usually combine the call with","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709736,"byte_end":9709799,"line_start":187,"line_end":187,"column_start":5,"column_end":68}},{"value":"/ [`Pin::as_mut`], which lets you call the method with consuming the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709804,"byte_end":9709874,"line_start":188,"line_end":188,"column_start":5,"column_end":75}},{"value":"/ `Sleep` itself.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709879,"byte_end":9709898,"line_start":189,"line_end":189,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709903,"byte_end":9709906,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709911,"byte_end":9709924,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709929,"byte_end":9709932,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709937,"byte_end":9709944,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709949,"byte_end":9709990,"line_start":194,"line_end":194,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9709995,"byte_end":9709998,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9710003,"byte_end":9710050,"line_start":196,"line_end":196,"column_start":5,"column_end":52}},{"value":"/ # async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9710055,"byte_end":9710078,"line_start":197,"line_end":197,"column_start":5,"column_end":28}},{"value":"/ let sleep = tokio::time::sleep(Duration::from_millis(10));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9710083,"byte_end":9710145,"line_start":198,"line_end":198,"column_start":5,"column_end":67}},{"value":"/ tokio::pin!(sleep);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9710150,"byte_end":9710173,"line_start":199,"line_end":199,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9710178,"byte_end":9710181,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ sleep.as_mut().reset(Instant::now() + Duration::from_millis(20));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9710186,"byte_end":9710255,"line_start":201,"line_end":201,"column_start":5,"column_end":74}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9710260,"byte_end":9710267,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9710272,"byte_end":9710279,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9710284,"byte_end":9710287,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ [`Pin::as_mut`]: fn@std::pin::Pin::as_mut","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9710292,"byte_end":9710337,"line_start":205,"line_end":205,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":7210},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::time::error","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","parent":null,"children":[{"krate":0,"index":7211},{"krate":0,"index":7212},{"krate":0,"index":7213},{"krate":0,"index":7423},{"krate":0,"index":7429},{"krate":0,"index":7428},{"krate":0,"index":7426},{"krate":0,"index":7431},{"krate":0,"index":7450},{"krate":0,"index":7448},{"krate":0,"index":7447},{"krate":0,"index":7444},{"krate":0,"index":7445},{"krate":0,"index":7441},{"krate":0,"index":7442},{"krate":0,"index":7214},{"krate":0,"index":7452},{"krate":0,"index":7459},{"krate":0,"index":7455},{"krate":0,"index":7456},{"krate":0,"index":7461},{"krate":0,"index":7464},{"krate":0,"index":7216},{"krate":0,"index":7223},{"krate":0,"index":7224},{"krate":0,"index":7227},{"krate":0,"index":7229},{"krate":0,"index":7231},{"krate":0,"index":7232}],"decl_id":null,"docs":" Time error types.\n","sig":null,"attributes":[{"value":"/ Time error types.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9711643,"byte_end":9711664,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":7423},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9712851,"byte_end":9712856,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9711716,"byte_end":9711767,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9711768,"byte_end":9711771,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9711772,"byte_end":9711833,"line_start":9,"line_end":9,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9711834,"byte_end":9711837,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9711838,"byte_end":9711912,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9711913,"byte_end":9711992,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9711993,"byte_end":9712068,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9712069,"byte_end":9712144,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9712145,"byte_end":9712173,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9712174,"byte_end":9712177,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9712178,"byte_end":9712255,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding sleep instances.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9712256,"byte_end":9712343,"line_start":18,"line_end":18,"column_start":1,"column_end":88}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9712344,"byte_end":9712420,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9712421,"byte_end":9712501,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9712502,"byte_end":9712579,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9712580,"byte_end":9712661,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9712662,"byte_end":9712744,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9712745,"byte_end":9712748,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9712749,"byte_end":9712809,"line_start":25,"line_end":25,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":7452},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9713160,"byte_end":9713167,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::error::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9713088,"byte_end":9713120,"line_start":43,"line_end":43,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":7217},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9713344,"byte_end":9713352,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9713281,"byte_end":9713332,"line_start":55,"line_end":55,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7218},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9713484,"byte_end":9713495,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9713401,"byte_end":9713472,"line_start":60,"line_end":60,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":7219},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9713631,"byte_end":9713642,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9713565,"byte_end":9713619,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7220},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9713779,"byte_end":9713793,"line_start":71,"line_end":71,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9713693,"byte_end":9713767,"line_start":70,"line_end":70,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":7221},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9713932,"byte_end":9713939,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Error>::invalid","value":"pub fn invalid() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an error representing a misconfigured timer.\n","sig":null,"attributes":[{"value":"/ Create an error representing a misconfigured timer.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9713865,"byte_end":9713920,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7222},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9714075,"byte_end":9714085,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Error>::is_invalid","value":"pub fn is_invalid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being misconfigured.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being misconfigured.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9713987,"byte_end":9714063,"line_start":80,"line_end":80,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":7466},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716463,"byte_end":9716470,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":7467}],"decl_id":null,"docs":" A measurement of a monotonically nondecreasing clock.\n Opaque and useful only with `Duration`.","sig":null,"attributes":[{"value":"/ A measurement of a monotonically nondecreasing clock.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9715172,"byte_end":9715229,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ Opaque and useful only with `Duration`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9715230,"byte_end":9715273,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9715274,"byte_end":9715277,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9715278,"byte_end":9715355,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ instant when created, and are often useful for tasks such as measuring","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9715356,"byte_end":9715430,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ benchmarks or timing how long an operation takes.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9715431,"byte_end":9715484,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9715485,"byte_end":9715488,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9715489,"byte_end":9715567,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ words, each tick of the underlying clock may not be the same length (e.g.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9715568,"byte_end":9715645,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ some seconds may be longer than others). An instant may jump forwards or","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9715646,"byte_end":9715722,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ experience time dilation (slow down or speed up), but it will never go","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9715723,"byte_end":9715797,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ backwards.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9715798,"byte_end":9715812,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9715813,"byte_end":9715816,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9715817,"byte_end":9715897,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ no method to get \"the number of seconds\" from an instant. Instead, it only","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9715898,"byte_end":9715976,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ allows measuring the duration between two instants (or comparing two","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9715977,"byte_end":9716049,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ instants).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716050,"byte_end":9716064,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716065,"byte_end":9716068,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The size of an `Instant` struct may vary depending on the target operating","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716069,"byte_end":9716147,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ system.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716148,"byte_end":9716159,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716160,"byte_end":9716163,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716164,"byte_end":9716174,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716175,"byte_end":9716178,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This type wraps the inner `std` variant and is used to align the Tokio","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716179,"byte_end":9716253,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ clock for uses of `now()`. This can be useful for testing where you can","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716254,"byte_end":9716329,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ take advantage of `time::pause()` and `time::advance()`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716330,"byte_end":9716390,"line_start":32,"line_end":32,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7239},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716717,"byte_end":9716720,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716524,"byte_end":9716570,"line_start":39,"line_end":39,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716575,"byte_end":9716578,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716583,"byte_end":9716597,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716602,"byte_end":9716605,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716610,"byte_end":9716617,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716622,"byte_end":9716651,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716656,"byte_end":9716659,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716664,"byte_end":9716693,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716698,"byte_end":9716705,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7240},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716846,"byte_end":9716854,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716770,"byte_end":9716834,"line_start":52,"line_end":52,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":7241},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716990,"byte_end":9716998,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716928,"byte_end":9716978,"line_start":57,"line_end":57,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7242},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717242,"byte_end":9717256,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717057,"byte_end":9717129,"line_start":62,"line_end":62,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717134,"byte_end":9717137,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717142,"byte_end":9717154,"line_start":64,"line_end":64,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717159,"byte_end":9717162,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717167,"byte_end":9717230,"line_start":66,"line_end":66,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7243},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717939,"byte_end":9717961,"line_start":88,"line_end":88,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717352,"byte_end":9717427,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717432,"byte_end":9717480,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717485,"byte_end":9717488,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717493,"byte_end":9717507,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717512,"byte_end":9717515,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717520,"byte_end":9717527,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717532,"byte_end":9717580,"line_start":77,"line_end":77,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717585,"byte_end":9717588,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717593,"byte_end":9717611,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717616,"byte_end":9717637,"line_start":80,"line_end":80,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717642,"byte_end":9717675,"line_start":81,"line_end":81,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717680,"byte_end":9717721,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717726,"byte_end":9717763,"line_start":83,"line_end":83,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717768,"byte_end":9717830,"line_start":84,"line_end":84,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717835,"byte_end":9717905,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717910,"byte_end":9717915,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9717920,"byte_end":9717927,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7244},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718676,"byte_end":9718701,"line_start":109,"line_end":109,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718073,"byte_end":9718148,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718153,"byte_end":9718212,"line_start":93,"line_end":93,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718217,"byte_end":9718220,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718225,"byte_end":9718239,"line_start":95,"line_end":95,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718244,"byte_end":9718247,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718252,"byte_end":9718259,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718264,"byte_end":9718312,"line_start":98,"line_end":98,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718317,"byte_end":9718320,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718325,"byte_end":9718343,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718348,"byte_end":9718369,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718374,"byte_end":9718407,"line_start":102,"line_end":102,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718412,"byte_end":9718453,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718458,"byte_end":9718495,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718500,"byte_end":9718565,"line_start":105,"line_end":105,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718570,"byte_end":9718642,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718647,"byte_end":9718652,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718657,"byte_end":9718664,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7245},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719464,"byte_end":9719471,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718808,"byte_end":9718878,"line_start":113,"line_end":113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718883,"byte_end":9718886,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718891,"byte_end":9718903,"line_start":115,"line_end":115,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718908,"byte_end":9718911,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718916,"byte_end":9718984,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9718989,"byte_end":9719055,"line_start":118,"line_end":118,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719060,"byte_end":9719087,"line_start":119,"line_end":119,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719092,"byte_end":9719095,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719100,"byte_end":9719114,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719119,"byte_end":9719122,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719127,"byte_end":9719134,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719139,"byte_end":9719187,"line_start":124,"line_end":124,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719192,"byte_end":9719195,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719200,"byte_end":9719218,"line_start":126,"line_end":126,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719223,"byte_end":9719244,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719249,"byte_end":9719286,"line_start":128,"line_end":128,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719291,"byte_end":9719339,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/     sleep(three_secs).await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719344,"byte_end":9719376,"line_start":130,"line_end":130,"column_start":5,"column_end":37}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719381,"byte_end":9719430,"line_start":131,"line_end":131,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719435,"byte_end":9719440,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719445,"byte_end":9719452,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7246},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719752,"byte_end":9719763,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719535,"byte_end":9719610,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719615,"byte_end":9719686,"line_start":139,"line_end":139,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719691,"byte_end":9719740,"line_start":140,"line_end":140,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7247},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9720102,"byte_end":9720113,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719885,"byte_end":9719960,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9719965,"byte_end":9720036,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9720041,"byte_end":9720090,"line_start":147,"line_end":147,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":7283},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723557,"byte_end":9723565,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9721835,"byte_end":9721912,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9721913,"byte_end":9721944,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9721945,"byte_end":9721948,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9721949,"byte_end":9722029,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722030,"byte_end":9722069,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722070,"byte_end":9722073,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722074,"byte_end":9722147,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722148,"byte_end":9722151,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722152,"byte_end":9722164,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722165,"byte_end":9722168,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722169,"byte_end":9722214,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722215,"byte_end":9722218,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722219,"byte_end":9722233,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722234,"byte_end":9722237,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722238,"byte_end":9722245,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722246,"byte_end":9722284,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722285,"byte_end":9722288,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722289,"byte_end":9722307,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722308,"byte_end":9722329,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722330,"byte_end":9722399,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722400,"byte_end":9722403,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722404,"byte_end":9722434,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722435,"byte_end":9722465,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722466,"byte_end":9722496,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722497,"byte_end":9722500,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722501,"byte_end":9722544,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722545,"byte_end":9722550,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722551,"byte_end":9722558,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722559,"byte_end":9722562,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722563,"byte_end":9722637,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722638,"byte_end":9722641,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`sleep`] is that an `interval`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722642,"byte_end":9722715,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722716,"byte_end":9722791,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722792,"byte_end":9722868,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722869,"byte_end":9722930,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722931,"byte_end":9722934,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9722935,"byte_end":9723009,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723010,"byte_end":9723080,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723081,"byte_end":9723093,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723094,"byte_end":9723097,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723098,"byte_end":9723105,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723106,"byte_end":9723126,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723127,"byte_end":9723130,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723131,"byte_end":9723172,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723173,"byte_end":9723199,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723200,"byte_end":9723255,"line_start":53,"line_end":53,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723256,"byte_end":9723261,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723262,"byte_end":9723265,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723266,"byte_end":9723284,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723285,"byte_end":9723306,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723307,"byte_end":9723379,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723380,"byte_end":9723404,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723405,"byte_end":9723439,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723440,"byte_end":9723485,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723486,"byte_end":9723495,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723496,"byte_end":9723501,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723502,"byte_end":9723509,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723510,"byte_end":9723513,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723514,"byte_end":9723549,"line_start":66,"line_end":66,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":7284},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724454,"byte_end":9724465,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `start`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723715,"byte_end":9723788,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `start`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723789,"byte_end":9723826,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723827,"byte_end":9723830,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723831,"byte_end":9723911,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723912,"byte_end":9723951,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723952,"byte_end":9723955,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723956,"byte_end":9723968,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723969,"byte_end":9723972,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9723973,"byte_end":9724018,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724019,"byte_end":9724022,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724023,"byte_end":9724037,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724038,"byte_end":9724041,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724042,"byte_end":9724049,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724050,"byte_end":9724104,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724105,"byte_end":9724108,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724109,"byte_end":9724127,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724128,"byte_end":9724149,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724150,"byte_end":9724213,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724214,"byte_end":9724287,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724288,"byte_end":9724291,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724292,"byte_end":9724322,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724323,"byte_end":9724353,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724354,"byte_end":9724384,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724385,"byte_end":9724388,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724389,"byte_end":9724432,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724433,"byte_end":9724438,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724439,"byte_end":9724446,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7489},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725220,"byte_end":9725228,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":7490},{"krate":0,"index":7491}],"decl_id":null,"docs":" Interval returned by [`interval`](interval) and [`interval_at`](interval_at).","sig":null,"attributes":[{"value":"/ Interval returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724673,"byte_end":9724754,"line_start":109,"line_end":109,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724755,"byte_end":9724758,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This type allows you to wait on a sequence of instants with a certain","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724759,"byte_end":9724832,"line_start":111,"line_end":111,"column_start":1,"column_end":74}},{"value":"/ duration between each instant. Unlike calling [`sleep`](crate::time::sleep)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724833,"byte_end":9724912,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/ in a loop, this lets you count the time spent between the calls to `sleep`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724913,"byte_end":9724991,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ as well.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9724992,"byte_end":9725004,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725005,"byte_end":9725008,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ An `Interval` can be turned into a `Stream` with [`IntervalStream`].","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725009,"byte_end":9725081,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725082,"byte_end":9725085,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ [`IntervalStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.IntervalStream.html","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725086,"byte_end":9725191,"line_start":118,"line_end":118,"column_start":1,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":7286},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725961,"byte_end":9725965,"line_start":149,"line_end":149,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725439,"byte_end":9725508,"line_start":129,"line_end":129,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725513,"byte_end":9725516,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725521,"byte_end":9725535,"line_start":131,"line_end":131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725540,"byte_end":9725543,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725548,"byte_end":9725555,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725560,"byte_end":9725580,"line_start":134,"line_end":134,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725585,"byte_end":9725588,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725593,"byte_end":9725621,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725626,"byte_end":9725629,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725634,"byte_end":9725652,"line_start":138,"line_end":138,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725657,"byte_end":9725678,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725683,"byte_end":9725752,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725757,"byte_end":9725760,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725765,"byte_end":9725795,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725800,"byte_end":9725830,"line_start":143,"line_end":143,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725835,"byte_end":9725865,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725870,"byte_end":9725873,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725878,"byte_end":9725921,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725926,"byte_end":9725931,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725936,"byte_end":9725943,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7290},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9726641,"byte_end":9726650,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Poll for the next instant in the interval to be reached.","sig":null,"attributes":[{"value":"/ Poll for the next instant in the interval to be reached.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9726048,"byte_end":9726108,"line_start":153,"line_end":153,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9726113,"byte_end":9726116,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9726121,"byte_end":9726169,"line_start":155,"line_end":155,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9726174,"byte_end":9726177,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next instant has not yet been reached.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9726182,"byte_end":9726250,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/  * `Poll::Ready(instant)` if the next instant has been reached.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9726255,"byte_end":9726322,"line_start":158,"line_end":158,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9726327,"byte_end":9726330,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9726335,"byte_end":9726410,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the instant has elapsed. Note that on multiple","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9726415,"byte_end":9726490,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ calls to `poll_tick`, only the `Waker` from the `Context` passed to the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9726495,"byte_end":9726570,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ most recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9726575,"byte_end":9726629,"line_start":163,"line_end":163,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":7308},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728497,"byte_end":9728504,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9727482,"byte_end":9727559,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9727560,"byte_end":9727563,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9727564,"byte_end":9727643,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9727644,"byte_end":9727716,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9727717,"byte_end":9727730,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9727731,"byte_end":9727734,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9727735,"byte_end":9727752,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9727753,"byte_end":9727756,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9727757,"byte_end":9727835,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9727836,"byte_end":9727866,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9727867,"byte_end":9727870,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9727871,"byte_end":9727951,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9727952,"byte_end":9727979,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9727980,"byte_end":9727983,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9727984,"byte_end":9727998,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9727999,"byte_end":9728002,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728003,"byte_end":9728063,"line_start":30,"line_end":30,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728064,"byte_end":9728067,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728068,"byte_end":9728079,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728080,"byte_end":9728109,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728110,"byte_end":9728139,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728140,"byte_end":9728143,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728144,"byte_end":9728172,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728173,"byte_end":9728176,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728177,"byte_end":9728199,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728200,"byte_end":9728238,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728239,"byte_end":9728266,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728267,"byte_end":9728270,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728271,"byte_end":9728344,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728345,"byte_end":9728411,"line_start":43,"line_end":43,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728412,"byte_end":9728467,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728468,"byte_end":9728473,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728474,"byte_end":9728481,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728482,"byte_end":9728489,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7310},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729716,"byte_end":9729726,"line_start":90,"line_end":90,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728685,"byte_end":9728757,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728758,"byte_end":9728761,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728762,"byte_end":9728839,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728840,"byte_end":9728895,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728896,"byte_end":9728899,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728900,"byte_end":9728917,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728918,"byte_end":9728921,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9728922,"byte_end":9729000,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729001,"byte_end":9729031,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729032,"byte_end":9729035,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729036,"byte_end":9729116,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729117,"byte_end":9729144,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729145,"byte_end":9729148,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729149,"byte_end":9729163,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729164,"byte_end":9729167,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729168,"byte_end":9729228,"line_start":71,"line_end":71,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729229,"byte_end":9729232,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729233,"byte_end":9729244,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729245,"byte_end":9729288,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729289,"byte_end":9729318,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729319,"byte_end":9729322,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729323,"byte_end":9729351,"line_start":77,"line_end":77,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729352,"byte_end":9729355,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729356,"byte_end":9729378,"line_start":79,"line_end":79,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729379,"byte_end":9729417,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729418,"byte_end":9729445,"line_start":81,"line_end":81,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729446,"byte_end":9729449,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729450,"byte_end":9729528,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729529,"byte_end":9729543,"line_start":84,"line_end":84,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729544,"byte_end":9729630,"line_start":85,"line_end":85,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729631,"byte_end":9729686,"line_start":86,"line_end":86,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729687,"byte_end":9729692,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729693,"byte_end":9729700,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9729701,"byte_end":9729708,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7742},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9730101,"byte_end":9730108,"line_start":106,"line_end":106,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":7744},{"krate":0,"index":7745}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.4/src/lib.rs","byte_start":9991027,"byte_end":9991036,"line_start":431,"line_end":431,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7315},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9730404,"byte_end":9730411,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9730331,"byte_end":9730392,"line_start":119,"line_end":119,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7316},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9730539,"byte_end":9730546,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9730458,"byte_end":9730527,"line_start":124,"line_end":124,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":7317},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9730675,"byte_end":9730685,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9730605,"byte_end":9730663,"line_start":129,"line_end":129,"column_start":5,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":682},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":142147,"byte_end":142153,"line_start":46,"line_end":46,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":142056,"byte_end":142085,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":142090,"byte_end":142093,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":142098,"byte_end":142137,"line_start":45,"line_end":45,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":683},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":142183,"byte_end":142189,"line_start":49,"line_end":49,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":142160,"byte_end":142173,"line_start":48,"line_end":48,"column_start":5,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":726},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/rand.rs","byte_start":160611,"byte_end":160623,"line_start":58,"line_end":58,"column_start":8,"column_end":20},"name":"thread_rng_n","qualname":"::util::rand::thread_rng_n","value":"pub fn thread_rng_n(u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"macros\"))","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/rand.rs","byte_start":160496,"byte_end":160527,"line_start":55,"line_end":55,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":732},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":16448,"byte_end":16454,"line_start":444,"line_end":444,"column_start":9,"column_end":15},"name":"stream","qualname":"::stream","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0\n release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]\n crate.","sig":null,"attributes":[{"value":"/ Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":14953,"byte_end":15034,"line_start":407,"line_end":407,"column_start":1,"column_end":82}},{"value":"/ release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":15035,"byte_end":15124,"line_start":408,"line_end":408,"column_start":1,"column_end":90}},{"value":"/ crate.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":15125,"byte_end":15135,"line_start":409,"line_end":409,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":15136,"byte_end":15139,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ # Why was `Stream` not included in Tokio 1.0?","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":15140,"byte_end":15189,"line_start":411,"line_end":411,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":15190,"byte_end":15193,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ Originally, we had planned to ship Tokio 1.0 with a stable `Stream` type","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":15194,"byte_end":15270,"line_start":413,"line_end":413,"column_start":1,"column_end":77}},{"value":"/ but unfortunetly the [RFC] had not been merged in time for `Stream` to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":15271,"byte_end":15345,"line_start":414,"line_end":414,"column_start":1,"column_end":75}},{"value":"/ reach `std` on a stable compiler in time for the 1.0 release of Tokio. For","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":15346,"byte_end":15424,"line_start":415,"line_end":415,"column_start":1,"column_end":79}},{"value":"/ this reason, the team has decided to move all `Stream` based utilities to","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":15425,"byte_end":15502,"line_start":416,"line_end":416,"column_start":1,"column_end":78}},{"value":"/ the [`tokio-stream`] crate. While this is not ideal, once `Stream` has made","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":15503,"byte_end":15582,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/ it into the standard library and the MSRV period has passed, we will implement","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":15583,"byte_end":15665,"line_start":418,"line_end":418,"column_start":1,"column_end":83}},{"value":"/ stream for our different types.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":15666,"byte_end":15701,"line_start":419,"line_end":419,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":15702,"byte_end":15705,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ While this may seem unfortunate, not all is lost as you can get much of the","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":15706,"byte_end":15785,"line_start":421,"line_end":421,"column_start":1,"column_end":80}},{"value":"/ `Stream` support with `async/await` and `while let` loops. It is also possible","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":15786,"byte_end":15868,"line_start":422,"line_end":422,"column_start":1,"column_end":83}},{"value":"/ to create a `impl Stream` from `async fn` using the [`async-stream`] crate.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":15869,"byte_end":15948,"line_start":423,"line_end":423,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":15949,"byte_end":15952,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ [`tokio-stream`]: https://docs.rs/tokio-stream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":15953,"byte_end":16003,"line_start":425,"line_end":425,"column_start":1,"column_end":51}},{"value":"/ [`async-stream`]: https://docs.rs/async-stream","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":16004,"byte_end":16054,"line_start":426,"line_end":426,"column_start":1,"column_end":51}},{"value":"/ [RFC]: https://github.com/rust-lang/rfcs/pull/2996","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":16055,"byte_end":16109,"line_start":427,"line_end":427,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":16110,"byte_end":16113,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":16114,"byte_end":16127,"line_start":429,"line_end":429,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":16128,"byte_end":16131,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ Convert a [`sync::mpsc::Receiver`] to an `impl Stream`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":16132,"byte_end":16191,"line_start":431,"line_end":431,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":16192,"byte_end":16195,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":16196,"byte_end":16214,"line_start":433,"line_end":433,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":16215,"byte_end":16241,"line_start":434,"line_end":434,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":16242,"byte_end":16245,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ let (tx, mut rx) = mpsc::channel::<usize>(16);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":16246,"byte_end":16296,"line_start":436,"line_end":436,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":16297,"byte_end":16300,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ let stream = async_stream::stream! {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":16301,"byte_end":16341,"line_start":438,"line_end":438,"column_start":1,"column_end":41}},{"value":"/     while let Some(item) = rx.recv().await {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":16342,"byte_end":16390,"line_start":439,"line_end":439,"column_start":1,"column_end":49}},{"value":"/         yield item;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":16391,"byte_end":16414,"line_start":440,"line_end":440,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":16415,"byte_end":16424,"line_start":441,"line_end":441,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":16425,"byte_end":16431,"line_start":442,"line_end":442,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":16432,"byte_end":16439,"line_start":443,"line_end":443,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/scoped_tls.rs","byte_start":30343,"byte_end":30352,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/scoped_tls.rs","byte_start":30368,"byte_end":30377,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/scoped_tls.rs","byte_start":30727,"byte_end":30732,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8614656,"byte_end":8614666,"line_start":22,"line_end":22,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8617390,"byte_end":8617400,"line_start":118,"line_end":118,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8620969,"byte_end":8620973,"line_start":109,"line_end":109,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":830},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":840},{"krate":0,"index":844},{"krate":0,"index":851},{"krate":0,"index":855},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8632583,"byte_end":8632587,"line_start":482,"line_end":482,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8635042,"byte_end":8635046,"line_start":550,"line_end":550,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8637183,"byte_end":8637187,"line_start":612,"line_end":612,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8639776,"byte_end":8639780,"line_start":688,"line_end":688,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8639878,"byte_end":8639882,"line_start":694,"line_end":694,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8640111,"byte_end":8640115,"line_start":703,"line_end":703,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8640261,"byte_end":8640265,"line_start":710,"line_end":710,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8640771,"byte_end":8640776,"line_start":730,"line_end":730,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646283,"byte_end":8646294,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8656786,"byte_end":8656797,"line_start":397,"line_end":397,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1157},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8666984,"byte_end":8666995,"line_start":648,"line_end":648,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8667113,"byte_end":8667124,"line_start":654,"line_end":654,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8670235,"byte_end":8670242,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8672356,"byte_end":8672364,"line_start":109,"line_end":109,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673539,"byte_end":8673547,"line_start":147,"line_end":147,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":991},{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":32692,"byte_end":32701,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":32864,"byte_end":32873,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":34060,"byte_end":34069,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/poll_fn.rs","byte_start":34845,"byte_end":34851,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/poll_fn.rs","byte_start":35065,"byte_end":35071,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/poll_fn.rs","byte_start":35213,"byte_end":35219,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/ready.rs","byte_start":8683657,"byte_end":8683662,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/ready.rs","byte_start":8683689,"byte_end":8683694,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1215},{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/blocking.rs","byte_start":8685398,"byte_end":8685406,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1254}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/blocking.rs","byte_start":8687001,"byte_end":8687009,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1258},{"krate":0,"index":1261},{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/blocking.rs","byte_start":8689733,"byte_end":8689736,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/blocking.rs","byte_start":8691566,"byte_end":8691569,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":48056,"byte_end":48059,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1304},{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":48219,"byte_end":48222,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":48851,"byte_end":48857,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":51897,"byte_end":51900,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":52043,"byte_end":52046,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":52715,"byte_end":52721,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":55715,"byte_end":55718,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1310},{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":55861,"byte_end":55864,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":56255,"byte_end":56261,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":65731,"byte_end":65734,"line_start":213,"line_end":213,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":65882,"byte_end":65885,"line_start":221,"line_end":221,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":66762,"byte_end":66765,"line_start":255,"line_end":255,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":67563,"byte_end":67569,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":68372,"byte_end":68378,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":69184,"byte_end":69190,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":69991,"byte_end":69997,"line_start":376,"line_end":376,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":72038,"byte_end":72045,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":81023,"byte_end":81030,"line_start":277,"line_end":277,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702128,"byte_end":8702136,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8704277,"byte_end":8704285,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1338},{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8704428,"byte_end":8704436,"line_start":101,"line_end":101,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8704564,"byte_end":8704572,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8705157,"byte_end":8705162,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8709579,"byte_end":8709584,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8710328,"byte_end":8710333,"line_start":196,"line_end":196,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8710494,"byte_end":8710499,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1373}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8710627,"byte_end":8710632,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1375},{"krate":0,"index":1376}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8710786,"byte_end":8710791,"line_start":221,"line_end":221,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1378},{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8710938,"byte_end":8710943,"line_start":230,"line_end":230,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/registration.rs","byte_start":8713391,"byte_end":8713403,"line_start":50,"line_end":50,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/registration.rs","byte_start":8713428,"byte_end":8713440,"line_start":51,"line_end":51,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/registration.rs","byte_start":8713484,"byte_end":8713496,"line_start":55,"line_end":55,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1399},{"krate":0,"index":1401},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/registration.rs","byte_start":8718924,"byte_end":8718936,"line_start":208,"line_end":208,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/registration.rs","byte_start":8719535,"byte_end":8719547,"line_start":226,"line_end":226,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1614},{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8722950,"byte_end":8722961,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8723221,"byte_end":8723232,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8723412,"byte_end":8723423,"line_start":124,"line_end":124,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8731606,"byte_end":8731617,"line_start":366,"line_end":366,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8731706,"byte_end":8731717,"line_start":372,"line_end":372,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8731742,"byte_end":8731753,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8731787,"byte_end":8731798,"line_start":376,"line_end":376,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1669},{"krate":0,"index":1672}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8732721,"byte_end":8732727,"line_start":401,"line_end":401,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8733222,"byte_end":8733231,"line_start":420,"line_end":420,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1680},{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8737905,"byte_end":8737914,"line_start":529,"line_end":529,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1684}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8738279,"byte_end":8738288,"line_start":542,"line_end":542,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8738321,"byte_end":8738330,"line_start":543,"line_end":543,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8694717,"byte_end":8694723,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8697529,"byte_end":8697535,"line_start":203,"line_end":203,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8697650,"byte_end":8697655,"line_start":209,"line_end":209,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8698099,"byte_end":8698105,"line_start":224,"line_end":224,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8698504,"byte_end":8698510,"line_start":245,"line_end":245,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8698660,"byte_end":8698666,"line_start":254,"line_end":254,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1708}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8699491,"byte_end":8699497,"line_start":281,"line_end":281,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8700314,"byte_end":8700320,"line_start":302,"line_end":302,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8700398,"byte_end":8700404,"line_start":308,"line_end":308,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8700539,"byte_end":8700544,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1540},{"krate":0,"index":1543}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8701501,"byte_end":8701510,"line_start":346,"line_end":346,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/poll_evented.rs","byte_start":8741851,"byte_end":8741862,"line_start":76,"line_end":76,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/poll_evented.rs","byte_start":8744497,"byte_end":8744508,"line_start":143,"line_end":143,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1722},{"krate":0,"index":1725},{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/poll_evented.rs","byte_start":8746051,"byte_end":8746062,"line_start":190,"line_end":190,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1565},{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/poll_evented.rs","byte_start":8746205,"byte_end":8746216,"line_start":198,"line_end":198,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/poll_evented.rs","byte_start":8746388,"byte_end":8746399,"line_start":204,"line_end":204,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8753386,"byte_end":8753393,"line_start":166,"line_end":166,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1778},{"krate":0,"index":1780},{"krate":0,"index":1783},{"krate":0,"index":1786},{"krate":0,"index":1790},{"krate":0,"index":1794},{"krate":0,"index":1798}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8765361,"byte_end":8765368,"line_start":460,"line_end":460,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1804}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8765522,"byte_end":8765529,"line_start":466,"line_end":466,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8765740,"byte_end":8765747,"line_start":474,"line_end":474,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1810}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8765847,"byte_end":8765864,"line_start":480,"line_end":480,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1816}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8768331,"byte_end":8768351,"line_start":541,"line_end":541,"column_start":26,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8770861,"byte_end":8770878,"line_start":602,"line_end":602,"column_start":60,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1830}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8771135,"byte_end":8771155,"line_start":610,"line_end":610,"column_start":60,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1834}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8773197,"byte_end":8773205,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1873},{"krate":0,"index":1874}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8774122,"byte_end":8774131,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1877}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8774381,"byte_end":8774389,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1880}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8774684,"byte_end":8774693,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1885}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8775372,"byte_end":8775377,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1888}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8775833,"byte_end":8775838,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8776091,"byte_end":8776096,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1894}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8776219,"byte_end":8776227,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8776264,"byte_end":8776273,"line_start":166,"line_end":166,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8776310,"byte_end":8776318,"line_start":167,"line_end":167,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8776355,"byte_end":8776364,"line_start":168,"line_end":168,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8776407,"byte_end":8776415,"line_start":170,"line_end":170,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1905}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8776583,"byte_end":8776592,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1908}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/seek.rs","byte_start":8777549,"byte_end":8777553,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1929},{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_buf_read_ext.rs","byte_start":8789464,"byte_end":8789465,"line_start":257,"line_end":257,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8828792,"byte_end":8828793,"line_start":1115,"line_end":1115,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_seek_ext.rs","byte_start":8830902,"byte_end":8830903,"line_start":72,"line_end":72,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8866150,"byte_end":8866151,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8867519,"byte_end":8867528,"line_start":36,"line_end":36,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8869385,"byte_end":8869394,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2103}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8870204,"byte_end":8870213,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2106},{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8871126,"byte_end":8871135,"line_start":144,"line_end":144,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8871646,"byte_end":8871655,"line_start":162,"line_end":162,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2115}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8873144,"byte_end":8873153,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8874990,"byte_end":8874999,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2142}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8875141,"byte_end":8875150,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2145}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8875862,"byte_end":8875871,"line_start":117,"line_end":117,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8876401,"byte_end":8876410,"line_start":135,"line_end":135,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2153}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8876665,"byte_end":8876674,"line_start":145,"line_end":145,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2156},{"krate":0,"index":2157}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8878610,"byte_end":8878619,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2184}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8880897,"byte_end":8880906,"line_start":116,"line_end":116,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2189}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8881796,"byte_end":8881805,"line_start":145,"line_end":145,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2192}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8882059,"byte_end":8882068,"line_start":155,"line_end":155,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2195},{"krate":0,"index":2196}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8882355,"byte_end":8882364,"line_start":165,"line_end":165,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2199}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8883542,"byte_end":8883547,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8884687,"byte_end":8884692,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2226}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8884971,"byte_end":8884976,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2230}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8885562,"byte_end":8885567,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2234},{"krate":0,"index":2235}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/copy.rs","byte_start":8888402,"byte_end":8888406,"line_start":73,"line_end":73,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2250},{"krate":0,"index":2251}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/copy_buf.rs","byte_start":8892100,"byte_end":8892107,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2266},{"krate":0,"index":2267}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/empty.rs","byte_start":8894374,"byte_end":8894379,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2281}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/empty.rs","byte_start":8894593,"byte_end":8894598,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2283},{"krate":0,"index":2284}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/empty.rs","byte_start":8894831,"byte_end":8894836,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2286}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/flush.rs","byte_start":8895963,"byte_end":8895968,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2304},{"krate":0,"index":2305}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8897299,"byte_end":8897304,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2320},{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8898556,"byte_end":8898561,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2330}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8902839,"byte_end":8902851,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2350}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8903395,"byte_end":8903407,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8904105,"byte_end":8904117,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2356}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8904268,"byte_end":8904272,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2358},{"krate":0,"index":2359}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8904678,"byte_end":8904682,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2361}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8905548,"byte_end":8905552,"line_start":189,"line_end":189,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read.rs","byte_start":8907733,"byte_end":8907737,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2387},{"krate":0,"index":2388}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_buf.rs","byte_start":8908871,"byte_end":8908878,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2407},{"krate":0,"index":2408}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_exact.rs","byte_start":8911259,"byte_end":8911268,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2430},{"krate":0,"index":2431}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_line.rs","byte_start":8920358,"byte_end":8920366,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2471},{"krate":0,"index":2472}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_to_end.rs","byte_start":8924019,"byte_end":8924028,"line_start":101,"line_end":101,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2499},{"krate":0,"index":2500}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/vec_with_initialized.rs","byte_start":8924423,"byte_end":8924426,"line_start":7,"line_end":7,"column_start":21,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/vec_with_initialized.rs","byte_start":8924715,"byte_end":8924718,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/vec_with_initialized.rs","byte_start":8925418,"byte_end":8925436,"line_start":34,"line_end":34,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2512}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/vec_with_initialized.rs","byte_start":8925616,"byte_end":8925634,"line_start":42,"line_end":42,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2520}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_to_string.rs","byte_start":8931004,"byte_end":8931016,"line_start":67,"line_end":67,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2548},{"krate":0,"index":2549}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_until.rs","byte_start":8933320,"byte_end":8933329,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2568},{"krate":0,"index":2569}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/repeat.rs","byte_start":8934907,"byte_end":8934913,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2580}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/shutdown.rs","byte_start":8936292,"byte_end":8936300,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2598},{"krate":0,"index":2599}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/sink.rs","byte_start":8937940,"byte_end":8937944,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/sink.rs","byte_start":8938454,"byte_end":8938458,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8939615,"byte_end":8939620,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2631}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940359,"byte_end":8940364,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2638}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8942677,"byte_end":8942681,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2659},{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2662}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8944309,"byte_end":8944313,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8944957,"byte_end":8944961,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2668},{"krate":0,"index":2669}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write.rs","byte_start":8946760,"byte_end":8946765,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2686},{"krate":0,"index":2687}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_all.rs","byte_start":8947800,"byte_end":8947808,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2704},{"krate":0,"index":2705}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_buf.rs","byte_start":8949293,"byte_end":8949301,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2724},{"krate":0,"index":2725}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":84098,"byte_end":84108,"line_start":51,"line_end":51,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":84148,"byte_end":84158,"line_start":53,"line_end":53,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":84460,"byte_end":84472,"line_start":65,"line_end":65,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":84512,"byte_end":84524,"line_start":67,"line_end":67,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":84821,"byte_end":84833,"line_start":78,"line_end":78,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":84873,"byte_end":84885,"line_start":80,"line_end":80,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":89216,"byte_end":89222,"line_start":226,"line_end":226,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":89266,"byte_end":89272,"line_start":228,"line_end":228,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3234},{"krate":0,"index":3235},{"krate":0,"index":3236}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":90825,"byte_end":90835,"line_start":283,"line_end":283,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3245},{"krate":0,"index":3246}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":91474,"byte_end":91483,"line_start":301,"line_end":301,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3248},{"krate":0,"index":3249},{"krate":0,"index":3250}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8957166,"byte_end":8957177,"line_start":57,"line_end":57,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3295},{"krate":0,"index":3300},{"krate":0,"index":3301},{"krate":0,"index":3305},{"krate":0,"index":3306},{"krate":0,"index":3307},{"krate":0,"index":3308},{"krate":0,"index":3309},{"krate":0,"index":3310}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8965456,"byte_end":8965467,"line_start":309,"line_end":309,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3312},{"krate":0,"index":3313}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8965793,"byte_end":8965804,"line_start":321,"line_end":321,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3315}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8966010,"byte_end":8966021,"line_start":332,"line_end":332,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3320}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8969533,"byte_end":8969542,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3333},{"krate":0,"index":3334},{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3345},{"krate":0,"index":3348}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8982183,"byte_end":8982192,"line_start":487,"line_end":487,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3350}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8982327,"byte_end":8982336,"line_start":494,"line_end":494,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3352}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8982446,"byte_end":8982455,"line_start":501,"line_end":501,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3354}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985159,"byte_end":8985167,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3370},{"krate":0,"index":3371}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987970,"byte_end":8987978,"line_start":139,"line_end":139,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3376}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8988194,"byte_end":8988203,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3378},{"krate":0,"index":3379},{"krate":0,"index":3380},{"krate":0,"index":3381},{"krate":0,"index":3382}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8989120,"byte_end":8989128,"line_start":182,"line_end":182,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3384}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8989222,"byte_end":8989231,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3386}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8992117,"byte_end":8992129,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3410}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8992332,"byte_end":8992344,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8992354,"byte_end":8992367,"line_start":97,"line_end":97,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3413},{"krate":0,"index":3414},{"krate":0,"index":3415}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995549,"byte_end":8995562,"line_start":194,"line_end":194,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3420}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995763,"byte_end":8995777,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3422},{"krate":0,"index":3423}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8996460,"byte_end":8996474,"line_start":223,"line_end":223,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3425}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8996638,"byte_end":8996652,"line_start":231,"line_end":231,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3427},{"krate":0,"index":3428},{"krate":0,"index":3429},{"krate":0,"index":3430},{"krate":0,"index":3431}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8997699,"byte_end":8997712,"line_start":268,"line_end":268,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3433}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8997808,"byte_end":8997822,"line_start":274,"line_end":274,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3435}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9000509,"byte_end":9000518,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3476},{"krate":0,"index":3481},{"krate":0,"index":3484},{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3493},{"krate":0,"index":3494},{"krate":0,"index":3495},{"krate":0,"index":3496},{"krate":0,"index":3499},{"krate":0,"index":3502},{"krate":0,"index":3504},{"krate":0,"index":3710},{"krate":0,"index":3507},{"krate":0,"index":3510},{"krate":0,"index":3512},{"krate":0,"index":3515},{"krate":0,"index":3519},{"krate":0,"index":3520},{"krate":0,"index":3521},{"krate":0,"index":3522},{"krate":0,"index":3523},{"krate":0,"index":3524},{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3529},{"krate":0,"index":3530},{"krate":0,"index":3531},{"krate":0,"index":3532}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9033788,"byte_end":9033797,"line_start":1042,"line_end":1042,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3534},{"krate":0,"index":3535}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9034155,"byte_end":9034164,"line_start":1056,"line_end":1056,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3537}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9034374,"byte_end":9034383,"line_start":1066,"line_end":1066,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3539},{"krate":0,"index":3540},{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":3543}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9035209,"byte_end":9035218,"line_start":1099,"line_end":1099,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3545}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9035422,"byte_end":9035431,"line_start":1110,"line_end":1110,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3550}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040377,"byte_end":9040386,"line_start":125,"line_end":125,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3576},{"krate":0,"index":3581},{"krate":0,"index":3582},{"krate":0,"index":3583},{"krate":0,"index":3584},{"krate":0,"index":3585},{"krate":0,"index":3590},{"krate":0,"index":3593},{"krate":0,"index":3596},{"krate":0,"index":3600},{"krate":0,"index":3602},{"krate":0,"index":3604},{"krate":0,"index":3607},{"krate":0,"index":3611},{"krate":0,"index":3612},{"krate":0,"index":3718},{"krate":0,"index":3721},{"krate":0,"index":3614},{"krate":0,"index":3618},{"krate":0,"index":3620},{"krate":0,"index":3622},{"krate":0,"index":3626},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3633},{"krate":0,"index":3637},{"krate":0,"index":3638},{"krate":0,"index":3639},{"krate":0,"index":3640},{"krate":0,"index":3641},{"krate":0,"index":3642},{"krate":0,"index":3643},{"krate":0,"index":3644},{"krate":0,"index":3645},{"krate":0,"index":3646},{"krate":0,"index":3647},{"krate":0,"index":3648},{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3652}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082989,"byte_end":9082998,"line_start":1353,"line_end":1353,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3654},{"krate":0,"index":3655}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9083323,"byte_end":9083332,"line_start":1365,"line_end":1365,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3657}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9083541,"byte_end":9083550,"line_start":1376,"line_end":1376,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3662}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9087368,"byte_end":9087380,"line_start":98,"line_end":98,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3748},{"krate":0,"index":3751},{"krate":0,"index":3754},{"krate":0,"index":3757},{"krate":0,"index":3759},{"krate":0,"index":3760},{"krate":0,"index":3761},{"krate":0,"index":3762},{"krate":0,"index":3763},{"krate":0,"index":3765},{"krate":0,"index":3769},{"krate":0,"index":3771},{"krate":0,"index":3774},{"krate":0,"index":3778},{"krate":0,"index":4051},{"krate":0,"index":4054},{"krate":0,"index":3780},{"krate":0,"index":3785},{"krate":0,"index":3789},{"krate":0,"index":3790},{"krate":0,"index":3793},{"krate":0,"index":3795},{"krate":0,"index":3796},{"krate":0,"index":3798},{"krate":0,"index":3799},{"krate":0,"index":3800},{"krate":0,"index":3801}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9124460,"byte_end":9124472,"line_start":1222,"line_end":1222,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3803},{"krate":0,"index":3804}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9124816,"byte_end":9124828,"line_start":1234,"line_end":1234,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3806}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9124943,"byte_end":9124955,"line_start":1240,"line_end":1240,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3808}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9126686,"byte_end":9126698,"line_start":52,"line_end":52,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3828},{"krate":0,"index":3830},{"krate":0,"index":3831},{"krate":0,"index":3832},{"krate":0,"index":3833},{"krate":0,"index":3837}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9129752,"byte_end":9129764,"line_start":128,"line_end":128,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3839},{"krate":0,"index":3840}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9130099,"byte_end":9130111,"line_start":140,"line_end":140,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3842}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9130226,"byte_end":9130238,"line_start":146,"line_end":146,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3844}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9132019,"byte_end":9132027,"line_start":50,"line_end":50,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3859}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9132243,"byte_end":9132252,"line_start":60,"line_end":60,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3861},{"krate":0,"index":3862},{"krate":0,"index":3863},{"krate":0,"index":3864},{"krate":0,"index":3865}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9133038,"byte_end":9133046,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3867}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9133142,"byte_end":9133151,"line_start":96,"line_end":96,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3869}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9136066,"byte_end":9136078,"line_start":85,"line_end":85,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3892}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9136281,"byte_end":9136293,"line_start":94,"line_end":94,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9136303,"byte_end":9136316,"line_start":96,"line_end":96,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3895}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9136732,"byte_end":9136745,"line_start":107,"line_end":107,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3897}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9136946,"byte_end":9136960,"line_start":117,"line_end":117,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3899},{"krate":0,"index":3900}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9137658,"byte_end":9137672,"line_start":136,"line_end":136,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3902}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9137836,"byte_end":9137850,"line_start":144,"line_end":144,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3908}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9138894,"byte_end":9138907,"line_start":181,"line_end":181,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3910}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9139005,"byte_end":9139019,"line_start":187,"line_end":187,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3912}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/socketaddr.rs","byte_start":9139240,"byte_end":9139250,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3924},{"krate":0,"index":3925}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/socketaddr.rs","byte_start":9139802,"byte_end":9139812,"line_start":27,"line_end":27,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3927}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9141272,"byte_end":9141282,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3967},{"krate":0,"index":3972},{"krate":0,"index":3975},{"krate":0,"index":3978},{"krate":0,"index":3980},{"krate":0,"index":4094},{"krate":0,"index":3982},{"krate":0,"index":3985},{"krate":0,"index":3987},{"krate":0,"index":3989},{"krate":0,"index":3990},{"krate":0,"index":3991},{"krate":0,"index":3992},{"krate":0,"index":3993},{"krate":0,"index":3994},{"krate":0,"index":3995},{"krate":0,"index":3996},{"krate":0,"index":3997},{"krate":0,"index":3999}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9161639,"byte_end":9161649,"line_start":588,"line_end":588,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4001},{"krate":0,"index":4002}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9161962,"byte_end":9161972,"line_start":600,"line_end":600,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4004}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9162182,"byte_end":9162192,"line_start":610,"line_end":610,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4006},{"krate":0,"index":4007},{"krate":0,"index":4008},{"krate":0,"index":4009},{"krate":0,"index":4010}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9162957,"byte_end":9162967,"line_start":641,"line_end":641,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4012},{"krate":0,"index":4013},{"krate":0,"index":4014}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9164230,"byte_end":9164240,"line_start":679,"line_end":679,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4016}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9164355,"byte_end":9164365,"line_start":685,"line_end":685,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4018}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/ucred.rs","byte_start":9164752,"byte_end":9164757,"line_start":14,"line_end":14,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4026},{"krate":0,"index":4027},{"krate":0,"index":4028}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_ptr.rs","byte_start":95237,"byte_end":95246,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_ptr.rs","byte_start":95420,"byte_end":95429,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_ptr.rs","byte_start":95576,"byte_end":95585,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_ptr.rs","byte_start":95698,"byte_end":95707,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u16.rs","byte_start":96051,"byte_end":96060,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u16.rs","byte_start":96085,"byte_end":96094,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u16.rs","byte_start":96104,"byte_end":96113,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u16.rs","byte_start":96605,"byte_end":96614,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u16.rs","byte_start":96899,"byte_end":96908,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u32.rs","byte_start":97249,"byte_end":97258,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u32.rs","byte_start":97283,"byte_end":97292,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u32.rs","byte_start":97302,"byte_end":97311,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u32.rs","byte_start":97496,"byte_end":97505,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u32.rs","byte_start":97790,"byte_end":97799,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u8.rs","byte_start":100310,"byte_end":100318,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u8.rs","byte_start":100343,"byte_end":100351,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u8.rs","byte_start":100361,"byte_end":100369,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u8.rs","byte_start":100550,"byte_end":100558,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u8.rs","byte_start":100842,"byte_end":100850,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_usize.rs","byte_start":101190,"byte_end":101201,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_usize.rs","byte_start":101226,"byte_end":101237,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_usize.rs","byte_start":101247,"byte_end":101258,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_usize.rs","byte_start":101947,"byte_end":101958,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_usize.rs","byte_start":102248,"byte_end":102259,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_usize.rs","byte_start":102423,"byte_end":102434,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/mutex.rs","byte_start":102765,"byte_end":102770,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/parking_lot.rs","byte_start":104106,"byte_end":104111,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/parking_lot.rs","byte_start":104886,"byte_end":104892,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/parking_lot.rs","byte_start":105208,"byte_end":105215,"line_start":69,"line_end":69,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/unsafe_cell.rs","byte_start":106190,"byte_end":106200,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/either.rs","byte_start":9170665,"byte_end":9170671,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4168},{"krate":0,"index":4169},{"krate":0,"index":4170},{"krate":0,"index":4171},{"krate":0,"index":4172},{"krate":0,"index":4173}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/either.rs","byte_start":9171628,"byte_end":9171634,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4177}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/either.rs","byte_start":9171848,"byte_end":9171854,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4181}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/thread.rs","byte_start":111364,"byte_end":111374,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/thread.rs","byte_start":111639,"byte_end":111649,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/thread.rs","byte_start":112175,"byte_end":112180,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/thread.rs","byte_start":116945,"byte_end":116955,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/thread.rs","byte_start":117064,"byte_end":117076,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/thread.rs","byte_start":117431,"byte_end":117447,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/thread.rs","byte_start":118710,"byte_end":118726,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/thread.rs","byte_start":119321,"byte_end":119333,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/thread.rs","byte_start":119513,"byte_end":119518,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/mod.rs","byte_start":110411,"byte_end":110414,"line_start":106,"line_end":106,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/mod.rs","byte_start":110503,"byte_end":110506,"line_start":112,"line_end":112,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/enter.rs","byte_start":9192349,"byte_end":9192361,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4216}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/enter.rs","byte_start":9195307,"byte_end":9195328,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4731}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/enter.rs","byte_start":9196044,"byte_end":9196049,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4734},{"krate":0,"index":4737}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/enter.rs","byte_start":9197689,"byte_end":9197694,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4220}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/enter.rs","byte_start":9197824,"byte_end":9197829,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4222}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/core.rs","byte_start":9205651,"byte_end":9205657,"line_start":76,"line_end":76,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/core.rs","byte_start":9205682,"byte_end":9205688,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/core.rs","byte_start":9206047,"byte_end":9206051,"line_start":92,"line_end":92,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4283}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/core.rs","byte_start":9206938,"byte_end":9206947,"line_start":119,"line_end":119,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4286},{"krate":0,"index":4289},{"krate":0,"index":4291},{"krate":0,"index":4293},{"krate":0,"index":4295},{"krate":0,"index":4297}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/core.rs","byte_start":9210101,"byte_end":9210110,"line_start":205,"line_end":205,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4302},{"krate":0,"index":4305},{"krate":0,"index":4307},{"krate":0,"index":4308},{"krate":0,"index":4309},{"krate":0,"index":4312}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/core.rs","byte_start":9213148,"byte_end":9213155,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4315},{"krate":0,"index":4317},{"krate":0,"index":4319}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214086,"byte_end":9214095,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4335},{"krate":0,"index":4336},{"krate":0,"index":4337},{"krate":0,"index":4338},{"krate":0,"index":4339},{"krate":0,"index":4340}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216821,"byte_end":9216830,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4342}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9217073,"byte_end":9217082,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4344}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9217359,"byte_end":9217368,"line_start":133,"line_end":133,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9217402,"byte_end":9217407,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4347}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/harness.rs","byte_start":9218160,"byte_end":9218167,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4379},{"krate":0,"index":4380},{"krate":0,"index":4381},{"krate":0,"index":4382},{"krate":0,"index":4383}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/harness.rs","byte_start":9218822,"byte_end":9218829,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4387},{"krate":0,"index":4388},{"krate":0,"index":4389},{"krate":0,"index":4390},{"krate":0,"index":4391},{"krate":0,"index":4392},{"krate":0,"index":4393},{"krate":0,"index":4394},{"krate":0,"index":4395},{"krate":0,"index":4396},{"krate":0,"index":4397}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/harness.rs","byte_start":9224202,"byte_end":9224215,"line_start":209,"line_end":209,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4412},{"krate":0,"index":4413},{"krate":0,"index":4414}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/harness.rs","byte_start":9231196,"byte_end":9231201,"line_start":414,"line_end":414,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4444}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9236674,"byte_end":9236684,"line_start":150,"line_end":150,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9236721,"byte_end":9236731,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9236747,"byte_end":9236757,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4461},{"krate":0,"index":4462}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237992,"byte_end":9238002,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9238029,"byte_end":9238039,"line_start":202,"line_end":202,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4467},{"krate":0,"index":4468}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9239265,"byte_end":9239275,"line_start":241,"line_end":241,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4471}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9239541,"byte_end":9239551,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4474}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/raw.rs","byte_start":9240798,"byte_end":9240805,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4500},{"krate":0,"index":4503},{"krate":0,"index":4504},{"krate":0,"index":4505},{"krate":0,"index":4506},{"krate":0,"index":4507},{"krate":0,"index":4508},{"krate":0,"index":4509}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/raw.rs","byte_start":9242336,"byte_end":9242343,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4511}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/raw.rs","byte_start":9242433,"byte_end":9242440,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/state.rs","byte_start":9245122,"byte_end":9245127,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4553},{"krate":0,"index":4554},{"krate":0,"index":4555},{"krate":0,"index":4557},{"krate":0,"index":4559},{"krate":0,"index":4561},{"krate":0,"index":4563},{"krate":0,"index":4564},{"krate":0,"index":4566},{"krate":0,"index":4570},{"krate":0,"index":4572},{"krate":0,"index":4574},{"krate":0,"index":4576},{"krate":0,"index":4579},{"krate":0,"index":4580}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/state.rs","byte_start":9253983,"byte_end":9253991,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4583},{"krate":0,"index":4584},{"krate":0,"index":4585},{"krate":0,"index":4586},{"krate":0,"index":4587},{"krate":0,"index":4588},{"krate":0,"index":4589},{"krate":0,"index":4590},{"krate":0,"index":4591},{"krate":0,"index":4592},{"krate":0,"index":4593},{"krate":0,"index":4594},{"krate":0,"index":4595},{"krate":0,"index":4596},{"krate":0,"index":4597},{"krate":0,"index":4598},{"krate":0,"index":4599},{"krate":0,"index":4600},{"krate":0,"index":4601}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/state.rs","byte_start":9255868,"byte_end":9255873,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4603}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/state.rs","byte_start":9256032,"byte_end":9256040,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4605}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/waker.rs","byte_start":9257858,"byte_end":9257866,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4631},{"krate":0,"index":4632}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9198824,"byte_end":9198828,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9198859,"byte_end":9198863,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9199000,"byte_end":9199008,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9199049,"byte_end":9199057,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9201044,"byte_end":9201048,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4680},{"krate":0,"index":4681}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9201944,"byte_end":9201948,"line_start":161,"line_end":161,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4684}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9202117,"byte_end":9202125,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4687},{"krate":0,"index":4688}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9202411,"byte_end":9202415,"line_start":181,"line_end":181,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4691}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9202655,"byte_end":9202659,"line_start":191,"line_end":191,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4694}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9202811,"byte_end":9202819,"line_start":197,"line_end":197,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4697}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9203035,"byte_end":9203039,"line_start":206,"line_end":206,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4700},{"krate":0,"index":4701},{"krate":0,"index":4702},{"krate":0,"index":4703},{"krate":0,"index":4704}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9261578,"byte_end":9261592,"line_start":96,"line_end":96,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4816},{"krate":0,"index":4817},{"krate":0,"index":4818},{"krate":0,"index":4821}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9263830,"byte_end":9263835,"line_start":173,"line_end":173,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4824}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9266458,"byte_end":9266463,"line_start":245,"line_end":245,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4842}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9267156,"byte_end":9267170,"line_start":269,"line_end":269,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4846}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9268389,"byte_end":9268403,"line_start":307,"line_end":307,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4850}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9268569,"byte_end":9268576,"line_start":315,"line_end":315,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4852},{"krate":0,"index":4854},{"krate":0,"index":4855}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9269106,"byte_end":9269113,"line_start":336,"line_end":336,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4857}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9269281,"byte_end":9269284,"line_start":344,"line_end":344,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4859},{"krate":0,"index":4861},{"krate":0,"index":4864}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9270373,"byte_end":9270379,"line_start":380,"line_end":380,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4867},{"krate":0,"index":4868}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9270841,"byte_end":9270851,"line_start":401,"line_end":401,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4876}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9271126,"byte_end":9271136,"line_start":409,"line_end":409,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4880}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/pool.rs","byte_start":9275619,"byte_end":9275631,"line_start":103,"line_end":103,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4938},{"krate":0,"index":4939},{"krate":0,"index":4940}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/pool.rs","byte_start":9278206,"byte_end":9278218,"line_start":173,"line_end":173,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4944}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/pool.rs","byte_start":9278304,"byte_end":9278316,"line_start":179,"line_end":179,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4946}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/pool.rs","byte_start":9278477,"byte_end":9278484,"line_start":187,"line_end":187,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4948},{"krate":0,"index":4949}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/pool.rs","byte_start":9280916,"byte_end":9280921,"line_start":265,"line_end":265,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4952}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/pool.rs","byte_start":9284160,"byte_end":9284167,"line_start":361,"line_end":361,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4954}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/schedule.rs","byte_start":9284670,"byte_end":9284682,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4966},{"krate":0,"index":4967},{"krate":0,"index":4968}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/shutdown.rs","byte_start":9285555,"byte_end":9285563,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4975}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/task.rs","byte_start":9287312,"byte_end":9287324,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4988}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/task.rs","byte_start":9287550,"byte_end":9287562,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/task.rs","byte_start":9287592,"byte_end":9287604,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4994},{"krate":0,"index":4995}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9290798,"byte_end":9290805,"line_start":85,"line_end":85,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5028},{"krate":0,"index":5029},{"krate":0,"index":5031},{"krate":0,"index":5032},{"krate":0,"index":5033},{"krate":0,"index":5034},{"krate":0,"index":5037},{"krate":0,"index":5039},{"krate":0,"index":5040},{"krate":0,"index":5042},{"krate":0,"index":5044},{"krate":0,"index":5045},{"krate":0,"index":5046},{"krate":0,"index":5047}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9301796,"byte_end":9301803,"line_start":453,"line_end":453,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5155}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9302365,"byte_end":9302372,"line_start":477,"line_end":477,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5157}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9302907,"byte_end":9302914,"line_start":500,"line_end":500,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5159}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9305060,"byte_end":9305067,"line_start":565,"line_end":565,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5052}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/context.rs","byte_start":9307587,"byte_end":9307597,"line_start":73,"line_end":73,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5064}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/driver.rs","byte_start":9312139,"byte_end":9312145,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5083}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/driver.rs","byte_start":9312729,"byte_end":9312735,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5085},{"krate":0,"index":5086},{"krate":0,"index":5087},{"krate":0,"index":5088},{"krate":0,"index":5089},{"krate":0,"index":5090}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9314483,"byte_end":9314489,"line_start":47,"line_end":47,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5108},{"krate":0,"index":5109},{"krate":0,"index":5110},{"krate":0,"index":5111},{"krate":0,"index":5113}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9319865,"byte_end":9319880,"line_start":209,"line_end":209,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5120}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9320028,"byte_end":9320043,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5122}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9320183,"byte_end":9320198,"line_start":221,"line_end":221,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/spawner.rs","byte_start":9320583,"byte_end":9320590,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5129}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/spawner.rs","byte_start":9320832,"byte_end":9320839,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5227}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9181908,"byte_end":9181915,"line_start":289,"line_end":289,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5234},{"krate":0,"index":5235},{"krate":0,"index":5237},{"krate":0,"index":5240},{"krate":0,"index":5242},{"krate":0,"index":5243},{"krate":0,"index":5244}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/coop.rs","byte_start":124284,"byte_end":124290,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/coop.rs","byte_start":125650,"byte_end":125660,"line_start":108,"line_end":108,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/coop.rs","byte_start":126631,"byte_end":126647,"line_start":156,"line_end":156,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5278}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/coop.rs","byte_start":126779,"byte_end":126795,"line_start":162,"line_end":162,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5280}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/coop.rs","byte_start":128535,"byte_end":128541,"line_start":203,"line_end":203,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5285},{"krate":0,"index":5286}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338864,"byte_end":9338871,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5292},{"krate":0,"index":5293}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9342150,"byte_end":9342167,"line_start":130,"line_end":130,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5297}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9349606,"byte_end":9349615,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5334}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9349791,"byte_end":9349800,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9350448,"byte_end":9350457,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5338}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9350762,"byte_end":9350771,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9351694,"byte_end":9351706,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5341}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9352084,"byte_end":9352096,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9354059,"byte_end":9354063,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9354108,"byte_end":9354112,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9356886,"byte_end":9356892,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9356929,"byte_end":9356935,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9356973,"byte_end":9356981,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357018,"byte_end":9357026,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357042,"byte_end":9357048,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5394},{"krate":0,"index":5396},{"krate":0,"index":5397},{"krate":0,"index":5398}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9362658,"byte_end":9362662,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5404}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9363054,"byte_end":9363060,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5407}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9363240,"byte_end":9363246,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5410}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9363400,"byte_end":9363408,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5413}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9368271,"byte_end":9368279,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5417},{"krate":0,"index":5420}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9372455,"byte_end":9372463,"line_start":928,"line_end":928,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5423}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9373089,"byte_end":9373093,"line_start":951,"line_end":951,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5427},{"krate":0,"index":5428}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9373872,"byte_end":9373876,"line_start":977,"line_end":977,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5432},{"krate":0,"index":5433}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9374537,"byte_end":9374541,"line_start":997,"line_end":997,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5437}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9375289,"byte_end":9375295,"line_start":1023,"line_end":1023,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5441},{"krate":0,"index":5442},{"krate":0,"index":5443},{"krate":0,"index":5444},{"krate":0,"index":5445}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9375710,"byte_end":9375716,"line_start":1040,"line_end":1040,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5448}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9375860,"byte_end":9375868,"line_start":1046,"line_end":1046,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5451}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9376003,"byte_end":9376012,"line_start":1052,"line_end":1052,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5455}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9376185,"byte_end":9376194,"line_start":1061,"line_end":1061,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5460}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/block.rs","byte_start":9383076,"byte_end":9383081,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5510},{"krate":0,"index":5511},{"krate":0,"index":5512},{"krate":0,"index":5513},{"krate":0,"index":5515},{"krate":0,"index":5517},{"krate":0,"index":5518},{"krate":0,"index":5519},{"krate":0,"index":5521},{"krate":0,"index":5522},{"krate":0,"index":5523},{"krate":0,"index":5525},{"krate":0,"index":5526},{"krate":0,"index":5528}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/block.rs","byte_start":9393182,"byte_end":9393188,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5534}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/block.rs","byte_start":9393670,"byte_end":9393676,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5537},{"krate":0,"index":5538}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9397065,"byte_end":9397073,"line_start":105,"line_end":105,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5566},{"krate":0,"index":5567},{"krate":0,"index":5572},{"krate":0,"index":5573},{"krate":0,"index":5574}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9404085,"byte_end":9404093,"line_start":302,"line_end":302,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5577}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9404289,"byte_end":9404297,"line_start":310,"line_end":310,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9404313,"byte_end":9404319,"line_start":312,"line_end":312,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5582},{"krate":0,"index":5583},{"krate":0,"index":5586},{"krate":0,"index":5589},{"krate":0,"index":5590},{"krate":0,"index":5593},{"krate":0,"index":5594},{"krate":0,"index":5595},{"krate":0,"index":5598}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9417211,"byte_end":9417217,"line_start":703,"line_end":703,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5601}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9417349,"byte_end":9417355,"line_start":711,"line_end":711,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5604}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9417567,"byte_end":9417573,"line_start":721,"line_end":721,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5607}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418823,"byte_end":9418829,"line_start":764,"line_end":764,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5611}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9419156,"byte_end":9419162,"line_start":779,"line_end":779,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5615}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9419823,"byte_end":9419825,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5646}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9420118,"byte_end":9420120,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5654}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9421057,"byte_end":9421061,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5672}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9421694,"byte_end":9421702,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5679}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9421968,"byte_end":9421972,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9422021,"byte_end":9422025,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9422532,"byte_end":9422534,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5692},{"krate":0,"index":5693},{"krate":0,"index":5694},{"krate":0,"index":5695}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9422966,"byte_end":9422968,"line_start":144,"line_end":144,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5699},{"krate":0,"index":5700}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9423518,"byte_end":9423520,"line_start":162,"line_end":162,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5706}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9423859,"byte_end":9423861,"line_start":174,"line_end":174,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5710}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9424184,"byte_end":9424186,"line_start":190,"line_end":190,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5714},{"krate":0,"index":5715},{"krate":0,"index":5717}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9427577,"byte_end":9427579,"line_start":287,"line_end":287,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5724}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9427991,"byte_end":9427995,"line_start":305,"line_end":305,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5730}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9428180,"byte_end":9428184,"line_start":315,"line_end":315,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5734}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9429185,"byte_end":9429196,"line_start":355,"line_end":355,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5747},{"krate":0,"index":5748},{"krate":0,"index":5749},{"krate":0,"index":5750}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/list.rs","byte_start":9430937,"byte_end":9430939,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5779},{"krate":0,"index":5780},{"krate":0,"index":5781},{"krate":0,"index":5783}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/list.rs","byte_start":9436652,"byte_end":9436654,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5786}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/list.rs","byte_start":9436931,"byte_end":9436933,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5789},{"krate":0,"index":5790},{"krate":0,"index":5791},{"krate":0,"index":5792}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/list.rs","byte_start":9440332,"byte_end":9440334,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5795}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9440992,"byte_end":9441007,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5809}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9441148,"byte_end":9441163,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5812}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9441836,"byte_end":9441853,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5818}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9442852,"byte_end":9442869,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5824},{"krate":0,"index":5825},{"krate":0,"index":5830},{"krate":0,"index":5831},{"krate":0,"index":5832}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9446167,"byte_end":9446182,"line_start":183,"line_end":183,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5835},{"krate":0,"index":5836},{"krate":0,"index":5837},{"krate":0,"index":5842},{"krate":0,"index":5845}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9449872,"byte_end":9449881,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5855}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9450041,"byte_end":9450050,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9450536,"byte_end":9450548,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9450581,"byte_end":9450593,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5862}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9450933,"byte_end":9450945,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5865}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9451174,"byte_end":9451183,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5867}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9451313,"byte_end":9451322,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9452823,"byte_end":9452839,"line_start":116,"line_end":116,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9452876,"byte_end":9452892,"line_start":118,"line_end":118,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6565}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459264,"byte_end":9459269,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459323,"byte_end":9459328,"line_start":160,"line_end":160,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459382,"byte_end":9459392,"line_start":161,"line_end":161,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459457,"byte_end":9459472,"line_start":162,"line_end":162,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9460151,"byte_end":9460163,"line_start":181,"line_end":181,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5899}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9460300,"byte_end":9460312,"line_start":187,"line_end":187,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461120,"byte_end":9461125,"line_start":213,"line_end":213,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5903},{"krate":0,"index":5904},{"krate":0,"index":5905},{"krate":0,"index":5908},{"krate":0,"index":5911},{"krate":0,"index":5915},{"krate":0,"index":5916},{"krate":0,"index":5917},{"krate":0,"index":5918}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466878,"byte_end":9466883,"line_start":416,"line_end":416,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5921}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466967,"byte_end":9466972,"line_start":422,"line_end":422,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5924}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9467096,"byte_end":9467101,"line_start":431,"line_end":431,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5927}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9467496,"byte_end":9467506,"line_start":447,"line_end":447,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5930}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9467607,"byte_end":9467617,"line_start":453,"line_end":453,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5933},{"krate":0,"index":5934}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9467764,"byte_end":9467774,"line_start":460,"line_end":460,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5937}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9467931,"byte_end":9467941,"line_start":466,"line_end":466,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5940}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9468107,"byte_end":9468117,"line_start":472,"line_end":472,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5943}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9468295,"byte_end":9468310,"line_start":480,"line_end":480,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5946}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9468407,"byte_end":9468422,"line_start":486,"line_end":486,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5949},{"krate":0,"index":5950}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9468565,"byte_end":9468580,"line_start":493,"line_end":493,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5953}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9468733,"byte_end":9468748,"line_start":499,"line_end":499,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5956}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9468910,"byte_end":9468925,"line_start":505,"line_end":505,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5959}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9473788,"byte_end":9473796,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9473829,"byte_end":9473837,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9474667,"byte_end":9474673,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5997},{"krate":0,"index":5998},{"krate":0,"index":5999},{"krate":0,"index":6000},{"krate":0,"index":6001}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9483249,"byte_end":9483255,"line_start":455,"line_end":455,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6005}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9485165,"byte_end":9485173,"line_start":510,"line_end":510,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6008}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9485686,"byte_end":9485694,"line_start":526,"line_end":526,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6010},{"krate":0,"index":6011}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9491390,"byte_end":9491398,"line_start":668,"line_end":668,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6014}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9494453,"byte_end":9494459,"line_start":732,"line_end":732,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6017},{"krate":0,"index":6018},{"krate":0,"index":6019},{"krate":0,"index":6020},{"krate":0,"index":6021}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9496335,"byte_end":9496344,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6047}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9496506,"byte_end":9496515,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9496584,"byte_end":9496596,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6050}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9496895,"byte_end":9496907,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9497401,"byte_end":9497405,"line_start":95,"line_end":95,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6063},{"krate":0,"index":6065},{"krate":0,"index":6069},{"krate":0,"index":6071}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9499441,"byte_end":9499447,"line_start":174,"line_end":174,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6077},{"krate":0,"index":6079},{"krate":0,"index":6084},{"krate":0,"index":6085}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507074,"byte_end":9507080,"line_start":427,"line_end":427,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6088}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507219,"byte_end":9507227,"line_start":435,"line_end":435,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6091},{"krate":0,"index":6092}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9511618,"byte_end":9511626,"line_start":584,"line_end":584,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6095}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9511773,"byte_end":9511781,"line_start":592,"line_end":592,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6098},{"krate":0,"index":6099}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9512244,"byte_end":9512249,"line_start":608,"line_end":608,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6102},{"krate":0,"index":6103},{"krate":0,"index":6104},{"krate":0,"index":6105}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9515355,"byte_end":9515360,"line_start":706,"line_end":706,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9515397,"byte_end":9515402,"line_start":707,"line_end":707,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9515503,"byte_end":9515508,"line_start":713,"line_end":713,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6115}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9515885,"byte_end":9515890,"line_start":731,"line_end":731,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6118}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9516285,"byte_end":9516290,"line_start":746,"line_end":746,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6125},{"krate":0,"index":6126},{"krate":0,"index":6127},{"krate":0,"index":6128},{"krate":0,"index":6129},{"krate":0,"index":6130},{"krate":0,"index":6131},{"krate":0,"index":6132},{"krate":0,"index":6133},{"krate":0,"index":6134},{"krate":0,"index":6135},{"krate":0,"index":6136},{"krate":0,"index":6137}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9518003,"byte_end":9518008,"line_start":812,"line_end":812,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6139}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9522067,"byte_end":9522076,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6180},{"krate":0,"index":6181},{"krate":0,"index":6182},{"krate":0,"index":6183},{"krate":0,"index":6184},{"krate":0,"index":6185},{"krate":0,"index":6186},{"krate":0,"index":6187},{"krate":0,"index":6189},{"krate":0,"index":6190},{"krate":0,"index":6191},{"krate":0,"index":6192},{"krate":0,"index":6196}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9533101,"byte_end":9533110,"line_start":397,"line_end":397,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6200}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9533309,"byte_end":9533315,"line_start":405,"line_end":405,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6202},{"krate":0,"index":6203}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9534181,"byte_end":9534188,"line_start":434,"line_end":434,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6205},{"krate":0,"index":6206}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9534866,"byte_end":9534873,"line_start":458,"line_end":458,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6209},{"krate":0,"index":6210}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9535672,"byte_end":9535679,"line_start":488,"line_end":488,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6214}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9536929,"byte_end":9536936,"line_start":518,"line_end":518,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9536983,"byte_end":9536995,"line_start":522,"line_end":522,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6217}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9537088,"byte_end":9537100,"line_start":528,"line_end":528,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6219}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9537244,"byte_end":9537256,"line_start":534,"line_end":534,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9537303,"byte_end":9537318,"line_start":538,"line_end":538,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6222},{"krate":0,"index":6223}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9537836,"byte_end":9537851,"line_start":553,"line_end":553,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6225}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9538137,"byte_end":9538152,"line_start":562,"line_end":562,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9538245,"byte_end":9538251,"line_start":567,"line_end":567,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6228},{"krate":0,"index":6229},{"krate":0,"index":6230},{"krate":0,"index":6231},{"krate":0,"index":6232}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9541119,"byte_end":9541128,"line_start":66,"line_end":66,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6243},{"krate":0,"index":6244},{"krate":0,"index":6245},{"krate":0,"index":6246},{"krate":0,"index":6247},{"krate":0,"index":6250},{"krate":0,"index":6253},{"krate":0,"index":6254},{"krate":0,"index":6255},{"krate":0,"index":6258},{"krate":0,"index":6259}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547466,"byte_end":9547481,"line_start":239,"line_end":239,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6262}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547726,"byte_end":9547746,"line_start":248,"line_end":248,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6264}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9548000,"byte_end":9548015,"line_start":257,"line_end":257,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6267}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9548123,"byte_end":9548143,"line_start":263,"line_end":263,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6269}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551555,"byte_end":9551570,"line_start":97,"line_end":97,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6294},{"krate":0,"index":6297}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9554988,"byte_end":9555003,"line_start":202,"line_end":202,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6303}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9555183,"byte_end":9555198,"line_start":211,"line_end":211,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6307}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9555374,"byte_end":9555389,"line_start":220,"line_end":220,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6311}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9555853,"byte_end":9555869,"line_start":240,"line_end":240,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6321}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9557491,"byte_end":9557507,"line_start":293,"line_end":293,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6325}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9557687,"byte_end":9557703,"line_start":302,"line_end":302,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6329}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9557879,"byte_end":9557895,"line_start":311,"line_end":311,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6333}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9558971,"byte_end":9558977,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9559031,"byte_end":9559037,"line_start":347,"line_end":347,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9559271,"byte_end":9559286,"line_start":351,"line_end":351,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9559344,"byte_end":9559359,"line_start":352,"line_end":352,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9559424,"byte_end":9559440,"line_start":353,"line_end":353,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9559753,"byte_end":9559769,"line_start":358,"line_end":358,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9559827,"byte_end":9559833,"line_start":360,"line_end":360,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6348},{"krate":0,"index":6349},{"krate":0,"index":6350},{"krate":0,"index":6354},{"krate":0,"index":6355},{"krate":0,"index":6359},{"krate":0,"index":6360},{"krate":0,"index":6361}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9567202,"byte_end":9567217,"line_start":605,"line_end":605,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6364},{"krate":0,"index":6365}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9567348,"byte_end":9567364,"line_start":613,"line_end":613,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6368},{"krate":0,"index":6369}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9567498,"byte_end":9567514,"line_start":621,"line_end":621,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6372}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9567628,"byte_end":9567634,"line_start":627,"line_end":627,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6375}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9567726,"byte_end":9567732,"line_start":633,"line_end":633,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6378}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/task/atomic_waker.rs","byte_start":9574007,"byte_end":9574018,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6402},{"krate":0,"index":6403},{"krate":0,"index":6404},{"krate":0,"index":6409},{"krate":0,"index":6410}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/task/atomic_waker.rs","byte_start":9580040,"byte_end":9580051,"line_start":285,"line_end":285,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6413}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/task/atomic_waker.rs","byte_start":9580137,"byte_end":9580148,"line_start":291,"line_end":291,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6415}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/task/atomic_waker.rs","byte_start":9580281,"byte_end":9580292,"line_start":297,"line_end":297,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/task/atomic_waker.rs","byte_start":9580317,"byte_end":9580328,"line_start":298,"line_end":298,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/task/atomic_waker.rs","byte_start":9580424,"byte_end":9580429,"line_start":305,"line_end":305,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6422},{"krate":0,"index":6423}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9584658,"byte_end":9584667,"line_start":130,"line_end":130,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6444}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9584847,"byte_end":9584856,"line_start":136,"line_end":136,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585049,"byte_end":9585058,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6448}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585220,"byte_end":9585229,"line_start":150,"line_end":150,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9586435,"byte_end":9586443,"line_start":200,"line_end":200,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6455},{"krate":0,"index":6456}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9588976,"byte_end":9588984,"line_start":287,"line_end":287,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6463}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9589322,"byte_end":9589330,"line_start":300,"line_end":300,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6466}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9589700,"byte_end":9589706,"line_start":311,"line_end":311,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6469},{"krate":0,"index":6470},{"krate":0,"index":6471},{"krate":0,"index":6472}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9592290,"byte_end":9592296,"line_start":401,"line_end":401,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6477}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9592486,"byte_end":9592489,"line_start":410,"line_end":410,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6480},{"krate":0,"index":6481}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/yield_now.rs","byte_start":9604714,"byte_end":9604722,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6920},{"krate":0,"index":6921}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9615644,"byte_end":9615652,"line_start":323,"line_end":323,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6799},{"krate":0,"index":6800},{"krate":0,"index":6802},{"krate":0,"index":6804},{"krate":0,"index":6808},{"krate":0,"index":6810},{"krate":0,"index":6813}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9623645,"byte_end":9623653,"line_start":552,"line_end":552,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6817}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9623792,"byte_end":9623800,"line_start":558,"line_end":558,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6819},{"krate":0,"index":6820}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9624765,"byte_end":9624773,"line_start":582,"line_end":582,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6823}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9624854,"byte_end":9624862,"line_start":588,"line_end":588,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6825}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9625729,"byte_end":9625737,"line_start":618,"line_end":618,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6829},{"krate":0,"index":6830}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9626622,"byte_end":9626628,"line_start":649,"line_end":649,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6834},{"krate":0,"index":6836}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9627191,"byte_end":9627194,"line_start":668,"line_end":668,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6838},{"krate":0,"index":6840},{"krate":0,"index":6843}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630701,"byte_end":9630709,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6866},{"krate":0,"index":6870},{"krate":0,"index":6873}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9632485,"byte_end":9632493,"line_start":165,"line_end":165,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6879}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9632701,"byte_end":9632709,"line_start":173,"line_end":173,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6883}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9633030,"byte_end":9633045,"line_start":188,"line_end":188,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6887},{"krate":0,"index":6888}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9633346,"byte_end":9633351,"line_start":198,"line_end":198,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6897}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9633969,"byte_end":9633970,"line_start":222,"line_end":222,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9634155,"byte_end":9634166,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6904}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9634310,"byte_end":9634321,"line_start":236,"line_end":236,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6906}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9634468,"byte_end":9634479,"line_start":242,"line_end":242,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/clock.rs","byte_start":9641804,"byte_end":9641809,"line_start":150,"line_end":150,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7343},{"krate":0,"index":7344},{"krate":0,"index":7345},{"krate":0,"index":7346},{"krate":0,"index":7347}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9662482,"byte_end":9662491,"line_start":99,"line_end":99,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6981}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9662575,"byte_end":9662584,"line_start":105,"line_end":105,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6983}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9662730,"byte_end":9662739,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6985},{"krate":0,"index":6986},{"krate":0,"index":6987},{"krate":0,"index":6988},{"krate":0,"index":6989},{"krate":0,"index":6991},{"krate":0,"index":6992},{"krate":0,"index":6994},{"krate":0,"index":6995},{"krate":0,"index":6996}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9669757,"byte_end":9669767,"line_start":302,"line_end":302,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9669792,"byte_end":9669802,"line_start":303,"line_end":303,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9671243,"byte_end":9671254,"line_start":339,"line_end":339,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7001},{"krate":0,"index":7002},{"krate":0,"index":7003},{"krate":0,"index":7004},{"krate":0,"index":7005},{"krate":0,"index":7006},{"krate":0,"index":7007},{"krate":0,"index":7008},{"krate":0,"index":7009}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9674777,"byte_end":9674794,"line_start":437,"line_end":437,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7015}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9675095,"byte_end":9675112,"line_start":446,"line_end":446,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7017}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9675351,"byte_end":9675362,"line_start":456,"line_end":456,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9675387,"byte_end":9675398,"line_start":457,"line_end":457,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9675437,"byte_end":9675448,"line_start":459,"line_end":459,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7021},{"krate":0,"index":7022},{"krate":0,"index":7023},{"krate":0,"index":7024},{"krate":0,"index":7025}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9675966,"byte_end":9675976,"line_start":481,"line_end":481,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7027},{"krate":0,"index":7028},{"krate":0,"index":7029},{"krate":0,"index":7030},{"krate":0,"index":7031},{"krate":0,"index":7032}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9678852,"byte_end":9678863,"line_start":556,"line_end":556,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7034},{"krate":0,"index":7035},{"krate":0,"index":7036},{"krate":0,"index":7037},{"krate":0,"index":7038},{"krate":0,"index":7039}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9681254,"byte_end":9681264,"line_start":616,"line_end":616,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7041}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/handle.rs","byte_start":9681769,"byte_end":9681775,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7054},{"krate":0,"index":7055},{"krate":0,"index":7056}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/handle.rs","byte_start":9682346,"byte_end":9682352,"line_start":31,"line_end":31,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7394}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/handle.rs","byte_start":9684388,"byte_end":9684394,"line_start":79,"line_end":79,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7058}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/wheel/level.rs","byte_start":9696992,"byte_end":9696997,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7080},{"krate":0,"index":7082},{"krate":0,"index":7083},{"krate":0,"index":7084},{"krate":0,"index":7085},{"krate":0,"index":7086}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/wheel/level.rs","byte_start":9703065,"byte_end":9703070,"line_start":233,"line_end":233,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7088}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/wheel/mod.rs","byte_start":9686015,"byte_end":9686020,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7100},{"krate":0,"index":7101},{"krate":0,"index":7102},{"krate":0,"index":7103},{"krate":0,"index":7104},{"krate":0,"index":7106},{"krate":0,"index":7108},{"krate":0,"index":7109},{"krate":0,"index":7111},{"krate":0,"index":7112},{"krate":0,"index":7113},{"krate":0,"index":7114},{"krate":0,"index":7115}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9708860,"byte_end":9708865,"line_start":159,"line_end":159,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7135},{"krate":0,"index":7136},{"krate":0,"index":7137},{"krate":0,"index":7138},{"krate":0,"index":7139}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9710867,"byte_end":9710872,"line_start":225,"line_end":225,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7142},{"krate":0,"index":7143}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/mod.rs","byte_start":9647465,"byte_end":9647474,"line_start":102,"line_end":102,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7162},{"krate":0,"index":7163},{"krate":0,"index":7164},{"krate":0,"index":7166},{"krate":0,"index":7167}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/mod.rs","byte_start":9648881,"byte_end":9648887,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7177},{"krate":0,"index":7178},{"krate":0,"index":7179}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/mod.rs","byte_start":9651893,"byte_end":9651899,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7183},{"krate":0,"index":7184},{"krate":0,"index":7188},{"krate":0,"index":7189}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/mod.rs","byte_start":9656593,"byte_end":9656599,"line_start":379,"line_end":379,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7193},{"krate":0,"index":7194},{"krate":0,"index":7195},{"krate":0,"index":7196},{"krate":0,"index":7197},{"krate":0,"index":7198}],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/mod.rs","byte_start":9657330,"byte_end":9657336,"line_start":417,"line_end":417,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7201}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/mod.rs","byte_start":9657462,"byte_end":9657467,"line_start":428,"line_end":428,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7203}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/mod.rs","byte_start":9657775,"byte_end":9657780,"line_start":441,"line_end":441,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7205}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9713023,"byte_end":9713028,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7215}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9713269,"byte_end":9713274,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7217},{"krate":0,"index":7218},{"krate":0,"index":7219},{"krate":0,"index":7220},{"krate":0,"index":7221},{"krate":0,"index":7222}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9714174,"byte_end":9714179,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9714206,"byte_end":9714211,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7225}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9714673,"byte_end":9714680,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7228}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9714768,"byte_end":9714775,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7230}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9714919,"byte_end":9714926,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9714963,"byte_end":9714968,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7233}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716510,"byte_end":9716517,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7239},{"krate":0,"index":7240},{"krate":0,"index":7241},{"krate":0,"index":7242},{"krate":0,"index":7243},{"krate":0,"index":7244},{"krate":0,"index":7245},{"krate":0,"index":7246},{"krate":0,"index":7247}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9720267,"byte_end":9720274,"line_start":153,"line_end":153,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7249}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9720403,"byte_end":9720410,"line_start":159,"line_end":159,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7251}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9720525,"byte_end":9720532,"line_start":165,"line_end":165,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7253},{"krate":0,"index":7254}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9720697,"byte_end":9720704,"line_start":173,"line_end":173,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7256}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9720809,"byte_end":9720816,"line_start":179,"line_end":179,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7258},{"krate":0,"index":7259}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9720957,"byte_end":9720964,"line_start":187,"line_end":187,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7261},{"krate":0,"index":7262}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9721125,"byte_end":9721132,"line_start":195,"line_end":195,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7264}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9721239,"byte_end":9721246,"line_start":201,"line_end":201,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7266}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725424,"byte_end":9725432,"line_start":128,"line_end":128,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7286},{"krate":0,"index":7290}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9730201,"byte_end":9730208,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7314},{"krate":0,"index":7315},{"krate":0,"index":7316},{"krate":0,"index":7317}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9730746,"byte_end":9730753,"line_start":135,"line_end":135,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7320},{"krate":0,"index":7321}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/bit.rs","byte_start":9731398,"byte_end":9731402,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7497},{"krate":0,"index":7498},{"krate":0,"index":7499},{"krate":0,"index":7500},{"krate":0,"index":7501},{"krate":0,"index":7502},{"krate":0,"index":7503}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/bit.rs","byte_start":9732830,"byte_end":9732834,"line_start":53,"line_end":53,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7505}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9737984,"byte_end":9737988,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9738025,"byte_end":9738029,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9738066,"byte_end":9738076,"line_start":144,"line_end":144,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9738113,"byte_end":9738123,"line_start":145,"line_end":145,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9738160,"byte_end":9738163,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9738200,"byte_end":9738203,"line_start":147,"line_end":147,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9738819,"byte_end":9738823,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7579},{"krate":0,"index":7580},{"krate":0,"index":7581},{"krate":0,"index":7582},{"krate":0,"index":7584}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9744429,"byte_end":9744433,"line_start":321,"line_end":321,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7587}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9744572,"byte_end":9744581,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7590}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9745148,"byte_end":9745157,"line_start":346,"line_end":346,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7593}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9745315,"byte_end":9745318,"line_start":352,"line_end":352,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7596},{"krate":0,"index":7597}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9745580,"byte_end":9745583,"line_start":362,"line_end":362,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7600}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9745850,"byte_end":9745853,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7603}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9745974,"byte_end":9745978,"line_start":376,"line_end":376,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7606}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9748485,"byte_end":9748489,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7610},{"krate":0,"index":7611}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9748833,"byte_end":9748837,"line_start":464,"line_end":464,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7614}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9749185,"byte_end":9749189,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7617}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9749551,"byte_end":9749561,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7620},{"krate":0,"index":7621}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9750498,"byte_end":9750508,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7624}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9750651,"byte_end":9750656,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7627}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9751539,"byte_end":9751543,"line_start":563,"line_end":563,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7631}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9752103,"byte_end":9752108,"line_start":578,"line_end":578,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7634}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9752434,"byte_end":9752441,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7636},{"krate":0,"index":7637},{"krate":0,"index":7638}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":141483,"byte_end":141493,"line_start":29,"line_end":29,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":141563,"byte_end":141573,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":142873,"byte_end":142881,"line_start":70,"line_end":70,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":142918,"byte_end":142926,"line_start":71,"line_end":71,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":142977,"byte_end":142987,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":143222,"byte_end":143232,"line_start":86,"line_end":86,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":146081,"byte_end":146091,"line_start":176,"line_end":176,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":146448,"byte_end":146458,"line_start":191,"line_end":191,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":146645,"byte_end":146655,"line_start":198,"line_end":198,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":147827,"byte_end":147837,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7675}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":148206,"byte_end":148217,"line_start":258,"line_end":258,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7681},{"krate":0,"index":7682}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":148891,"byte_end":148899,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":149098,"byte_end":149106,"line_start":293,"line_end":293,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/rand.rs","byte_start":159486,"byte_end":159494,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/wake.rs","byte_start":9760043,"byte_end":9760051,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7705},{"krate":0,"index":7706}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":14339,"byte_end":14345,"line_start":351,"line_end":351,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/mod.rs","byte_start":18014,"byte_end":18021,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":75}},{"kind":"Mod","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":14370,"byte_end":14372,"line_start":354,"line_end":354,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":744}},{"kind":"Mod","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":14398,"byte_end":14400,"line_start":359,"line_end":359,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":123}},{"kind":"Mod","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":14410,"byte_end":14413,"line_start":360,"line_end":360,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":300}},{"kind":"Mod","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":82370,"byte_end":82373,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":3276}},{"kind":"Mod","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/mod.rs","byte_start":82560,"byte_end":82564,"line_start":44,"line_end":44,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":3726}},{"kind":"Mod","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/mod.rs","byte_start":9083919,"byte_end":9083927,"line_start":3,"line_end":3,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":3727}},{"kind":"Mod","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":14578,"byte_end":14585,"line_start":373,"line_end":373,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":4208}},{"kind":"Mod","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":14816,"byte_end":14820,"line_start":390,"line_end":390,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5287}},{"kind":"Mod","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336434,"byte_end":9336443,"line_start":434,"line_end":434,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":5301}},{"kind":"Mod","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336458,"byte_end":9336462,"line_start":436,"line_end":436,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5464}},{"kind":"Mod","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/mod.rs","byte_start":9380476,"byte_end":9380481,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5850}},{"kind":"Mod","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336620,"byte_end":9336627,"line_start":444,"line_end":444,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":6025}},{"kind":"Mod","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mod.rs","byte_start":9336971,"byte_end":9336976,"line_start":458,"line_end":458,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":6429}},{"kind":"Mod","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":14865,"byte_end":14869,"line_start":396,"line_end":396,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":664}},{"kind":"Mod","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/lib.rs","byte_start":14933,"byte_end":14937,"line_start":402,"line_end":402,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6947}},{"kind":"Mod","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/mod.rs","byte_start":9637240,"byte_end":9637245,"line_start":101,"line_end":101,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7210}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/scoped_tls.rs","byte_start":30343,"byte_end":30352,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":53},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/scoped_tls.rs","byte_start":30368,"byte_end":30377,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/macros/scoped_tls.rs","byte_start":30727,"byte_end":30732,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":64},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8614656,"byte_end":8614666,"line_start":22,"line_end":22,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/dir_builder.rs","byte_start":8617390,"byte_end":8617400,"line_start":118,"line_end":118,"column_start":10,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8620969,"byte_end":8620973,"line_start":109,"line_end":109,"column_start":6,"column_end":10},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8632583,"byte_end":8632587,"line_start":482,"line_end":482,"column_start":20,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":817},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8635042,"byte_end":8635046,"line_start":550,"line_end":550,"column_start":20,"column_end":24},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":817},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8637183,"byte_end":8637187,"line_start":612,"line_end":612,"column_start":21,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":817},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8639776,"byte_end":8639780,"line_start":688,"line_end":688,"column_start":26,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":817},"to":{"krate":2,"index":1961}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8639878,"byte_end":8639882,"line_start":694,"line_end":694,"column_start":21,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":817},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8640111,"byte_end":8640115,"line_start":703,"line_end":703,"column_start":37,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":817},"to":{"krate":1,"index":8826}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8640261,"byte_end":8640265,"line_start":710,"line_end":710,"column_start":39,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":817},"to":{"krate":1,"index":8828}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/file.rs","byte_start":8640771,"byte_end":8640776,"line_start":730,"line_end":730,"column_start":6,"column_end":11},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":820},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8646283,"byte_end":8646294,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8656786,"byte_end":8656797,"line_start":397,"line_end":397,"column_start":10,"column_end":21},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8666984,"byte_end":8666995,"line_start":648,"line_end":648,"column_start":37,"column_end":48},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1148},"to":{"krate":2,"index":1961}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/open_options.rs","byte_start":8667113,"byte_end":8667124,"line_start":654,"line_end":654,"column_start":18,"column_end":29},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1148},"to":{"krate":2,"index":2031}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8670235,"byte_end":8670242,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8672356,"byte_end":8672364,"line_start":109,"line_end":109,"column_start":10,"column_end":18},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/fs/read_dir.rs","byte_start":8673539,"byte_end":8673547,"line_start":147,"line_end":147,"column_start":6,"column_end":14},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":32692,"byte_end":32701,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1192},"to":{"krate":2,"index":2084}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":32864,"byte_end":32873,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/maybe_done.rs","byte_start":34060,"byte_end":34069,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1192},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/poll_fn.rs","byte_start":34845,"byte_end":34851,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":106},"to":{"krate":2,"index":2084}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/poll_fn.rs","byte_start":35065,"byte_end":35071,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":106},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/poll_fn.rs","byte_start":35213,"byte_end":35219,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":106},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/ready.rs","byte_start":8683657,"byte_end":8683662,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1223},"to":{"krate":2,"index":2084}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/future/ready.rs","byte_start":8683689,"byte_end":8683694,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1223},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/blocking.rs","byte_start":8685398,"byte_end":8685406,"line_start":49,"line_end":49,"column_start":23,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1278},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/blocking.rs","byte_start":8687001,"byte_end":8687009,"line_start":100,"line_end":100,"column_start":24,"column_end":32},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1278},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/blocking.rs","byte_start":8689733,"byte_end":8689736,"line_start":190,"line_end":190,"column_start":6,"column_end":9},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/blocking.rs","byte_start":8691566,"byte_end":8691569,"line_start":271,"line_end":271,"column_start":10,"column_end":13},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":45597,"byte_end":45606,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":160},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":48056,"byte_end":48059,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":33}},"from":{"krate":5,"index":91},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":48219,"byte_end":48222,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":34}},"from":{"krate":2,"index":32052},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_buf_read.rs","byte_start":48851,"byte_end":48857,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":35}},"from":{"krate":1,"index":7081},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":51897,"byte_end":51900,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"kind":{"Impl":{"id":36}},"from":{"krate":5,"index":91},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":52043,"byte_end":52046,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"kind":{"Impl":{"id":37}},"from":{"krate":2,"index":32052},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_read.rs","byte_start":52715,"byte_end":52721,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"kind":{"Impl":{"id":38}},"from":{"krate":1,"index":7081},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":55715,"byte_end":55718,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"kind":{"Impl":{"id":39}},"from":{"krate":5,"index":91},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":55861,"byte_end":55864,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":2,"index":32052},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_seek.rs","byte_start":56255,"byte_end":56261,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"kind":{"Impl":{"id":41}},"from":{"krate":1,"index":7081},"to":{"krate":0,"index":185}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":65731,"byte_end":65734,"line_start":213,"line_end":213,"column_start":53,"column_end":56},"kind":{"Impl":{"id":42}},"from":{"krate":5,"index":91},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":65882,"byte_end":65885,"line_start":221,"line_end":221,"column_start":24,"column_end":27},"kind":{"Impl":{"id":43}},"from":{"krate":2,"index":32052},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":66762,"byte_end":66765,"line_start":255,"line_end":255,"column_start":21,"column_end":24},"kind":{"Impl":{"id":44}},"from":{"krate":5,"index":4616},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":67563,"byte_end":67569,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":1,"index":7081},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":68372,"byte_end":68378,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"kind":{"Impl":{"id":46}},"from":{"krate":1,"index":7081},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":69184,"byte_end":69190,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":1,"index":7081},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_write.rs","byte_start":69991,"byte_end":69997,"line_start":376,"line_end":376,"column_start":25,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":1,"index":7081},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":72038,"byte_end":72045,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/read_buf.rs","byte_start":81023,"byte_end":81030,"line_start":277,"line_end":277,"column_start":21,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":267},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8702128,"byte_end":8702136,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8704277,"byte_end":8704285,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":2169}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8704428,"byte_end":8704436,"line_start":101,"line_end":101,"column_start":27,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":2195}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/interest.rs","byte_start":8704564,"byte_end":8704572,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8705157,"byte_end":8705162,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8709579,"byte_end":8709584,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8710328,"byte_end":8710333,"line_start":196,"line_end":196,"column_start":28,"column_end":33},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1587},"to":{"krate":2,"index":2169}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8710494,"byte_end":8710499,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1587},"to":{"krate":2,"index":2195}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8710627,"byte_end":8710632,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1587},"to":{"krate":2,"index":2164}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8710786,"byte_end":8710791,"line_start":221,"line_end":221,"column_start":26,"column_end":31},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1587},"to":{"krate":2,"index":2113}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/ready.rs","byte_start":8710938,"byte_end":8710943,"line_start":230,"line_end":230,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1587},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/registration.rs","byte_start":8713391,"byte_end":8713403,"line_start":50,"line_end":50,"column_start":22,"column_end":34},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1608},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/registration.rs","byte_start":8713428,"byte_end":8713440,"line_start":51,"line_end":51,"column_start":22,"column_end":34},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1608},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/registration.rs","byte_start":8713484,"byte_end":8713496,"line_start":55,"line_end":55,"column_start":6,"column_end":18},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/registration.rs","byte_start":8718924,"byte_end":8718936,"line_start":208,"line_end":208,"column_start":15,"column_end":27},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1608},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/registration.rs","byte_start":8719535,"byte_end":8719547,"line_start":226,"line_end":226,"column_start":10,"column_end":22},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8722950,"byte_end":8722961,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1633},"to":{"krate":0,"index":7533}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8723221,"byte_end":8723232,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1633},"to":{"krate":2,"index":2031}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8723412,"byte_end":8723423,"line_start":124,"line_end":124,"column_start":6,"column_end":17},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8731606,"byte_end":8731617,"line_start":366,"line_end":366,"column_start":15,"column_end":26},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1633},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8731706,"byte_end":8731717,"line_start":372,"line_end":372,"column_start":22,"column_end":33},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1633},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8731742,"byte_end":8731753,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1633},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8731787,"byte_end":8731798,"line_start":376,"line_end":376,"column_start":10,"column_end":21},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1633},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8732721,"byte_end":8732727,"line_start":401,"line_end":401,"column_start":39,"column_end":45},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1660},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8733222,"byte_end":8733231,"line_start":420,"line_end":420,"column_start":21,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1648},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8737905,"byte_end":8737914,"line_start":529,"line_end":529,"column_start":19,"column_end":28},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1648},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8738279,"byte_end":8738288,"line_start":542,"line_end":542,"column_start":26,"column_end":35},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1648},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/scheduled_io.rs","byte_start":8738321,"byte_end":8738330,"line_start":543,"line_end":543,"column_start":26,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1648},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8694717,"byte_end":8694723,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8697529,"byte_end":8697535,"line_start":203,"line_end":203,"column_start":15,"column_end":21},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8697650,"byte_end":8697655,"line_start":209,"line_end":209,"column_start":15,"column_end":20},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1493},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8698099,"byte_end":8698105,"line_start":224,"line_end":224,"column_start":15,"column_end":21},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1484},"to":{"krate":0,"index":631}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8698504,"byte_end":8698510,"line_start":245,"line_end":245,"column_start":21,"column_end":27},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1484},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8698660,"byte_end":8698666,"line_start":254,"line_end":254,"column_start":10,"column_end":16},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8699491,"byte_end":8699497,"line_start":281,"line_end":281,"column_start":6,"column_end":12},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8700314,"byte_end":8700320,"line_start":302,"line_end":302,"column_start":17,"column_end":23},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1687},"to":{"krate":0,"index":638}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8700398,"byte_end":8700404,"line_start":308,"line_end":308,"column_start":21,"column_end":27},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1687},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8700539,"byte_end":8700544,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/driver/mod.rs","byte_start":8701501,"byte_end":8701510,"line_start":346,"line_end":346,"column_start":6,"column_end":15},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/poll_evented.rs","byte_start":8741851,"byte_end":8741862,"line_start":76,"line_end":76,"column_start":17,"column_end":28},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/poll_evented.rs","byte_start":8744497,"byte_end":8744508,"line_start":143,"line_end":143,"column_start":21,"column_end":32},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/poll_evented.rs","byte_start":8746051,"byte_end":8746062,"line_start":190,"line_end":190,"column_start":27,"column_end":38},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1712},"to":{"krate":2,"index":2238}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/poll_evented.rs","byte_start":8746205,"byte_end":8746216,"line_start":198,"line_end":198,"column_start":45,"column_end":56},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1712},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/poll_evented.rs","byte_start":8746388,"byte_end":8746399,"line_start":204,"line_end":204,"column_start":26,"column_end":37},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1712},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8753386,"byte_end":8753393,"line_start":166,"line_end":166,"column_start":18,"column_end":25},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8765361,"byte_end":8765368,"line_start":460,"line_end":460,"column_start":30,"column_end":37},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1748},"to":{"krate":1,"index":8826}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8765522,"byte_end":8765529,"line_start":466,"line_end":466,"column_start":56,"column_end":63},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1748},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8765740,"byte_end":8765747,"line_start":474,"line_end":474,"column_start":27,"column_end":34},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1748},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8765847,"byte_end":8765864,"line_start":480,"line_end":480,"column_start":26,"column_end":43},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8768331,"byte_end":8768351,"line_start":541,"line_end":541,"column_start":26,"column_end":46},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8770861,"byte_end":8770878,"line_start":602,"line_end":602,"column_start":60,"column_end":77},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1752},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/async_fd.rs","byte_start":8771135,"byte_end":8771155,"line_start":610,"line_end":610,"column_start":60,"column_end":80},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1757},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8773197,"byte_end":8773205,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8774122,"byte_end":8774131,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1956},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8774381,"byte_end":8774389,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1953},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8774684,"byte_end":8774693,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1956},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8775372,"byte_end":8775377,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8775833,"byte_end":8775838,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8776091,"byte_end":8776096,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1867},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8776219,"byte_end":8776227,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1953},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8776264,"byte_end":8776273,"line_start":166,"line_end":166,"column_start":31,"column_end":40},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1956},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8776310,"byte_end":8776318,"line_start":167,"line_end":167,"column_start":31,"column_end":39},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1953},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8776355,"byte_end":8776364,"line_start":168,"line_end":168,"column_start":31,"column_end":40},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1956},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8776407,"byte_end":8776415,"line_start":170,"line_end":170,"column_start":36,"column_end":44},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1953},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/split.rs","byte_start":8776583,"byte_end":8776592,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1956},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/seek.rs","byte_start":8777549,"byte_end":8777553,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":10618},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_buf_read_ext.rs","byte_start":8780431,"byte_end":8780443,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":132},"to":{"krate":0,"index":2741}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_buf_read_ext.rs","byte_start":8789464,"byte_end":8789465,"line_start":257,"line_end":257,"column_start":52,"column_end":53},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1976},"to":{"krate":0,"index":2741}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8791386,"byte_end":8791395,"line_start":61,"line_end":61,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":160},"to":{"krate":0,"index":2749}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_read_ext.rs","byte_start":8828792,"byte_end":8828793,"line_start":1115,"line_end":1115,"column_start":46,"column_end":47},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2023},"to":{"krate":0,"index":2749}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_seek_ext.rs","byte_start":8829718,"byte_end":8829727,"line_start":33,"line_end":33,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":185},"to":{"krate":0,"index":2800}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_seek_ext.rs","byte_start":8830902,"byte_end":8830903,"line_start":72,"line_end":72,"column_start":46,"column_end":47},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2032},"to":{"krate":0,"index":2800}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8832855,"byte_end":8832865,"line_start":65,"line_end":65,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":211},"to":{"krate":0,"index":2803}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/async_write_ext.rs","byte_start":8866150,"byte_end":8866151,"line_start":1004,"line_end":1004,"column_start":48,"column_end":49},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2073},"to":{"krate":0,"index":2803}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8867519,"byte_end":8867528,"line_start":36,"line_end":36,"column_start":20,"column_end":29},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":10566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8869385,"byte_end":8869394,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":10566},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8870204,"byte_end":8870213,"line_start":120,"line_end":120,"column_start":37,"column_end":46},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":10566},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8871126,"byte_end":8871135,"line_start":144,"line_end":144,"column_start":48,"column_end":57},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":10566},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_reader.rs","byte_start":8871646,"byte_end":8871655,"line_start":162,"line_end":162,"column_start":36,"column_end":45},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":10566},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8873144,"byte_end":8873153,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":10535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8874990,"byte_end":8874999,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":10535},"to":{"krate":2,"index":1961}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8875141,"byte_end":8875150,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":10535},"to":{"krate":2,"index":1961}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8875862,"byte_end":8875871,"line_start":117,"line_end":117,"column_start":49,"column_end":58},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":10535},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8876401,"byte_end":8876410,"line_start":135,"line_end":135,"column_start":48,"column_end":57},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":10535},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_stream.rs","byte_start":8876665,"byte_end":8876674,"line_start":145,"line_end":145,"column_start":51,"column_end":60},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":10535},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8878610,"byte_end":8878619,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":10489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8880897,"byte_end":8880906,"line_start":116,"line_end":116,"column_start":36,"column_end":45},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":10489},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8881796,"byte_end":8881805,"line_start":145,"line_end":145,"column_start":47,"column_end":56},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":10489},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8882059,"byte_end":8882068,"line_start":155,"line_end":155,"column_start":53,"column_end":62},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":10489},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/buf_writer.rs","byte_start":8882355,"byte_end":8882364,"line_start":165,"line_end":165,"column_start":36,"column_end":45},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":10489},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8883542,"byte_end":8883547,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":10440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8884687,"byte_end":8884692,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":10440},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8884971,"byte_end":8884976,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":10440},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/chain.rs","byte_start":8885562,"byte_end":8885567,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":10440},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/copy.rs","byte_start":8888402,"byte_end":8888406,"line_start":73,"line_end":73,"column_start":23,"column_end":27},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2849},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/copy_buf.rs","byte_start":8892100,"byte_end":8892107,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2877},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/empty.rs","byte_start":8894374,"byte_end":8894379,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2889},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/empty.rs","byte_start":8894593,"byte_end":8894598,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2889},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/empty.rs","byte_start":8894831,"byte_end":8894836,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2889},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/flush.rs","byte_start":8895963,"byte_end":8895968,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":10398},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8897299,"byte_end":8897304,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":10348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/lines.rs","byte_start":8898556,"byte_end":8898561,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":10348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8902839,"byte_end":8902851,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2892},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8903395,"byte_end":8903407,"line_start":107,"line_end":107,"column_start":21,"column_end":33},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2892},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8904105,"byte_end":8904117,"line_start":134,"line_end":134,"column_start":15,"column_end":27},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2892},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8904268,"byte_end":8904272,"line_start":143,"line_end":143,"column_start":6,"column_end":10},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8904678,"byte_end":8904682,"line_start":162,"line_end":162,"column_start":20,"column_end":24},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2897},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/mem.rs","byte_start":8905548,"byte_end":8905552,"line_start":189,"line_end":189,"column_start":21,"column_end":25},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2897},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read.rs","byte_start":8907733,"byte_end":8907737,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":10297},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_buf.rs","byte_start":8908871,"byte_end":8908878,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":10237},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_exact.rs","byte_start":8911259,"byte_end":8911268,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":10182},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_line.rs","byte_start":8920358,"byte_end":8920366,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":9263},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_to_end.rs","byte_start":8924019,"byte_end":8924028,"line_start":101,"line_end":101,"column_start":20,"column_end":29},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":9206},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/vec_with_initialized.rs","byte_start":8924423,"byte_end":8924426,"line_start":7,"line_end":7,"column_start":21,"column_end":24},"kind":{"Impl":{"id":160}},"from":{"krate":5,"index":4616},"to":{"krate":0,"index":2505}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/vec_with_initialized.rs","byte_start":8924663,"byte_end":8924668,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1955},"to":{"krate":0,"index":2508}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/vec_with_initialized.rs","byte_start":8924689,"byte_end":8924695,"line_start":13,"line_end":13,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":2505},"to":{"krate":0,"index":2508}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/vec_with_initialized.rs","byte_start":8924715,"byte_end":8924718,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"kind":{"Impl":{"id":161}},"from":{"krate":5,"index":4616},"to":{"krate":0,"index":2508}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/vec_with_initialized.rs","byte_start":8925418,"byte_end":8925436,"line_start":34,"line_end":34,"column_start":6,"column_end":24},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/vec_with_initialized.rs","byte_start":8925616,"byte_end":8925634,"line_start":42,"line_end":42,"column_start":9,"column_end":27},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_to_string.rs","byte_start":8931004,"byte_end":8931016,"line_start":67,"line_end":67,"column_start":20,"column_end":32},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":9145},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/read_until.rs","byte_start":8933320,"byte_end":8933329,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":9084},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/repeat.rs","byte_start":8934907,"byte_end":8934913,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3057},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/shutdown.rs","byte_start":8936292,"byte_end":8936300,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":9035},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/sink.rs","byte_start":8937940,"byte_end":8937944,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3061},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/sink.rs","byte_start":8938454,"byte_end":8938458,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3061},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8939615,"byte_end":8939620,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":8985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/split.rs","byte_start":8940359,"byte_end":8940364,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":8985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8942677,"byte_end":8942681,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":8945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8944309,"byte_end":8944313,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":8945},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/take.rs","byte_start":8944957,"byte_end":8944961,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":8945},"to":{"krate":0,"index":132}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write.rs","byte_start":8946760,"byte_end":8946765,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":8894},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_all.rs","byte_start":8947800,"byte_end":8947808,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":8841},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/io/util/write_buf.rs","byte_start":8949293,"byte_end":8949301,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":8781},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":83428,"byte_end":83445,"line_start":20,"line_end":20,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":360},"to":{"krate":0,"index":311}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":84098,"byte_end":84108,"line_start":51,"line_end":51,"column_start":24,"column_end":34},"kind":{"Impl":{"id":178}},"from":{"krate":1,"index":7235},"to":{"krate":0,"index":311}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":84148,"byte_end":84158,"line_start":53,"line_end":53,"column_start":36,"column_end":46},"kind":{"Impl":{"id":179}},"from":{"krate":1,"index":7235},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":84460,"byte_end":84472,"line_start":65,"line_end":65,"column_start":24,"column_end":36},"kind":{"Impl":{"id":180}},"from":{"krate":1,"index":7263},"to":{"krate":0,"index":311}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":84512,"byte_end":84524,"line_start":67,"line_end":67,"column_start":36,"column_end":48},"kind":{"Impl":{"id":181}},"from":{"krate":1,"index":7263},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":84821,"byte_end":84833,"line_start":78,"line_end":78,"column_start":24,"column_end":36},"kind":{"Impl":{"id":182}},"from":{"krate":1,"index":7266},"to":{"krate":0,"index":311}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":84873,"byte_end":84885,"line_start":80,"line_end":80,"column_start":36,"column_end":48},"kind":{"Impl":{"id":183}},"from":{"krate":1,"index":7266},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":89216,"byte_end":89222,"line_start":226,"line_end":226,"column_start":28,"column_end":34},"kind":{"Impl":{"id":186}},"from":{"krate":5,"index":5373},"to":{"krate":0,"index":311}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":89266,"byte_end":89272,"line_start":228,"line_end":228,"column_start":40,"column_end":46},"kind":{"Impl":{"id":187}},"from":{"krate":5,"index":5373},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":90825,"byte_end":90835,"line_start":283,"line_end":283,"column_start":25,"column_end":35},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3251},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/addr.rs","byte_start":91474,"byte_end":91483,"line_start":301,"line_end":301,"column_start":27,"column_end":36},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3265},"to":{"krate":2,"index":5298}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8957166,"byte_end":8957177,"line_start":57,"line_end":57,"column_start":6,"column_end":17},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8965456,"byte_end":8965467,"line_start":309,"line_end":309,"column_start":36,"column_end":47},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3674},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8965793,"byte_end":8965804,"line_start":321,"line_end":321,"column_start":21,"column_end":32},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3674},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/listener.rs","byte_start":8966010,"byte_end":8966021,"line_start":332,"line_end":332,"column_start":22,"column_end":33},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3674},"to":{"krate":1,"index":8826}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8969533,"byte_end":8969542,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8982183,"byte_end":8982192,"line_start":487,"line_end":487,"column_start":21,"column_end":30},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3676},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8982327,"byte_end":8982336,"line_start":494,"line_end":494,"column_start":18,"column_end":27},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3676},"to":{"krate":1,"index":8826}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/socket.rs","byte_start":8982446,"byte_end":8982455,"line_start":501,"line_end":501,"column_start":20,"column_end":29},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3676},"to":{"krate":1,"index":8828}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8985159,"byte_end":8985167,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8987970,"byte_end":8987978,"line_start":139,"line_end":139,"column_start":20,"column_end":28},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3678},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8988194,"byte_end":8988203,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3685},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8989120,"byte_end":8989128,"line_start":182,"line_end":182,"column_start":27,"column_end":35},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3678},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split.rs","byte_start":8989222,"byte_end":8989231,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3685},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8992117,"byte_end":8992129,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3701},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8992332,"byte_end":8992344,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3701},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8992354,"byte_end":8992367,"line_start":97,"line_end":97,"column_start":6,"column_end":19},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995549,"byte_end":8995562,"line_start":194,"line_end":194,"column_start":20,"column_end":33},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3692},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8995763,"byte_end":8995777,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8996460,"byte_end":8996474,"line_start":223,"line_end":223,"column_start":15,"column_end":29},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3696},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8996638,"byte_end":8996652,"line_start":231,"line_end":231,"column_start":21,"column_end":35},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3696},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8997699,"byte_end":8997712,"line_start":268,"line_end":268,"column_start":27,"column_end":40},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3692},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/split_owned.rs","byte_start":8997808,"byte_end":8997822,"line_start":274,"line_end":274,"column_start":27,"column_end":41},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3696},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9000509,"byte_end":9000518,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9033788,"byte_end":9033797,"line_start":1042,"line_end":1042,"column_start":39,"column_end":48},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3708},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9034155,"byte_end":9034164,"line_start":1056,"line_end":1056,"column_start":20,"column_end":29},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3708},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9034374,"byte_end":9034383,"line_start":1066,"line_end":1066,"column_start":21,"column_end":30},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3708},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9035209,"byte_end":9035218,"line_start":1099,"line_end":1099,"column_start":21,"column_end":30},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3708},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/tcp/stream.rs","byte_start":9035422,"byte_end":9035431,"line_start":1110,"line_end":1110,"column_start":22,"column_end":31},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3708},"to":{"krate":1,"index":8826}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9040377,"byte_end":9040386,"line_start":125,"line_end":125,"column_start":6,"column_end":15},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9082989,"byte_end":9082998,"line_start":1353,"line_end":1353,"column_start":39,"column_end":48},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3715},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9083323,"byte_end":9083332,"line_start":1365,"line_end":1365,"column_start":21,"column_end":30},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3715},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/udp.rs","byte_start":9083541,"byte_end":9083550,"line_start":1376,"line_end":1376,"column_start":22,"column_end":31},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3715},"to":{"krate":1,"index":8826}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9087368,"byte_end":9087380,"line_start":98,"line_end":98,"column_start":6,"column_end":18},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9124460,"byte_end":9124472,"line_start":1222,"line_end":1222,"column_start":52,"column_end":64},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4049},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9124816,"byte_end":9124828,"line_start":1234,"line_end":1234,"column_start":21,"column_end":33},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4049},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/datagram/socket.rs","byte_start":9124943,"byte_end":9124955,"line_start":1240,"line_end":1240,"column_start":18,"column_end":30},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4049},"to":{"krate":1,"index":8826}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9126686,"byte_end":9126698,"line_start":52,"line_end":52,"column_start":6,"column_end":18},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":4059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9129752,"byte_end":9129764,"line_start":128,"line_end":128,"column_start":52,"column_end":64},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":4059},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9130099,"byte_end":9130111,"line_start":140,"line_end":140,"column_start":21,"column_end":33},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4059},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/listener.rs","byte_start":9130226,"byte_end":9130238,"line_start":146,"line_end":146,"column_start":18,"column_end":30},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":4059},"to":{"krate":1,"index":8826}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9132019,"byte_end":9132027,"line_start":50,"line_end":50,"column_start":20,"column_end":28},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":4062},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9132243,"byte_end":9132252,"line_start":60,"line_end":60,"column_start":21,"column_end":30},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":4069},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9133038,"byte_end":9133046,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":4062},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split.rs","byte_start":9133142,"byte_end":9133151,"line_start":96,"line_end":96,"column_start":28,"column_end":37},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":4069},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9136066,"byte_end":9136078,"line_start":85,"line_end":85,"column_start":23,"column_end":35},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":4085},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9136281,"byte_end":9136293,"line_start":94,"line_end":94,"column_start":16,"column_end":28},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":4085},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9136303,"byte_end":9136316,"line_start":96,"line_end":96,"column_start":6,"column_end":19},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":4076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9136732,"byte_end":9136745,"line_start":107,"line_end":107,"column_start":20,"column_end":33},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":4076},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9136946,"byte_end":9136960,"line_start":117,"line_end":117,"column_start":6,"column_end":20},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":4080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9137658,"byte_end":9137672,"line_start":136,"line_end":136,"column_start":15,"column_end":29},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":4080},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9137836,"byte_end":9137850,"line_start":144,"line_end":144,"column_start":21,"column_end":35},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4080},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9138894,"byte_end":9138907,"line_start":181,"line_end":181,"column_start":28,"column_end":41},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4076},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/split_owned.rs","byte_start":9139005,"byte_end":9139019,"line_start":187,"line_end":187,"column_start":28,"column_end":42},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4080},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/socketaddr.rs","byte_start":9139240,"byte_end":9139250,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/socketaddr.rs","byte_start":9139802,"byte_end":9139812,"line_start":27,"line_end":27,"column_start":21,"column_end":31},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3920},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9141272,"byte_end":9141282,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9161639,"byte_end":9161649,"line_start":588,"line_end":588,"column_start":35,"column_end":45},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4092},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9161962,"byte_end":9161972,"line_start":600,"line_end":600,"column_start":20,"column_end":30},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4092},"to":{"krate":0,"index":160}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9162182,"byte_end":9162192,"line_start":610,"line_end":610,"column_start":21,"column_end":31},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4092},"to":{"krate":0,"index":211}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9162957,"byte_end":9162967,"line_start":641,"line_end":641,"column_start":6,"column_end":16},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9164230,"byte_end":9164240,"line_start":679,"line_end":679,"column_start":21,"column_end":31},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4092},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/stream.rs","byte_start":9164355,"byte_end":9164365,"line_start":685,"line_end":685,"column_start":18,"column_end":28},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4092},"to":{"krate":1,"index":8826}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/net/unix/ucred.rs","byte_start":9164752,"byte_end":9164757,"line_start":14,"line_end":14,"column_start":6,"column_end":11},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_ptr.rs","byte_start":95237,"byte_end":95246,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_ptr.rs","byte_start":95420,"byte_end":95429,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":2238}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_ptr.rs","byte_start":95576,"byte_end":95585,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":2251}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_ptr.rs","byte_start":95698,"byte_end":95707,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":375},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u16.rs","byte_start":96051,"byte_end":96060,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u16.rs","byte_start":96085,"byte_end":96094,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u16.rs","byte_start":96104,"byte_end":96113,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u16.rs","byte_start":96605,"byte_end":96614,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":2238}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u16.rs","byte_start":96899,"byte_end":96908,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u32.rs","byte_start":97249,"byte_end":97258,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u32.rs","byte_start":97283,"byte_end":97292,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u32.rs","byte_start":97302,"byte_end":97311,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u32.rs","byte_start":97496,"byte_end":97505,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":2238}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u32.rs","byte_start":97790,"byte_end":97799,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":411},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u8.rs","byte_start":100310,"byte_end":100318,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u8.rs","byte_start":100343,"byte_end":100351,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u8.rs","byte_start":100361,"byte_end":100369,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u8.rs","byte_start":100550,"byte_end":100558,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":2238}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_u8.rs","byte_start":100842,"byte_end":100850,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_usize.rs","byte_start":101190,"byte_end":101201,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_usize.rs","byte_start":101226,"byte_end":101237,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_usize.rs","byte_start":101247,"byte_end":101258,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_usize.rs","byte_start":101947,"byte_end":101958,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2238}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_usize.rs","byte_start":102248,"byte_end":102259,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":2251}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/atomic_usize.rs","byte_start":102423,"byte_end":102434,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":445},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/mutex.rs","byte_start":102765,"byte_end":102770,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/parking_lot.rs","byte_start":104106,"byte_end":104111,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":4124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/parking_lot.rs","byte_start":104886,"byte_end":104892,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":4131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/parking_lot.rs","byte_start":105208,"byte_end":105215,"line_start":69,"line_end":69,"column_start":6,"column_end":13},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":4138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/loom/std/unsafe_cell.rs","byte_start":106190,"byte_end":106200,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":4143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/either.rs","byte_start":9170665,"byte_end":9170671,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":4156},"to":{"krate":0,"index":631}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/either.rs","byte_start":9171628,"byte_end":9171634,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4156},"to":{"krate":0,"index":638}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/either.rs","byte_start":9171848,"byte_end":9171854,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4156},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/thread.rs","byte_start":111364,"byte_end":111374,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":4182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/thread.rs","byte_start":111639,"byte_end":111649,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":4182},"to":{"krate":0,"index":631}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/thread.rs","byte_start":112175,"byte_end":112180,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":4192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/thread.rs","byte_start":116945,"byte_end":116955,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":4182},"to":{"krate":2,"index":2031}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/thread.rs","byte_start":117064,"byte_end":117076,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4186},"to":{"krate":0,"index":638}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/thread.rs","byte_start":117431,"byte_end":117447,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/thread.rs","byte_start":118710,"byte_end":118726,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4202},"to":{"krate":0,"index":631}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/thread.rs","byte_start":119321,"byte_end":119333,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/thread.rs","byte_start":119513,"byte_end":119518,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/mod.rs","byte_start":109931,"byte_end":109935,"line_start":92,"line_end":92,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2055},"to":{"krate":0,"index":638}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/mod.rs","byte_start":109938,"byte_end":109942,"line_start":92,"line_end":92,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":638}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/mod.rs","byte_start":110411,"byte_end":110414,"line_start":106,"line_end":106,"column_start":17,"column_end":20},"kind":{"Impl":{"id":295}},"from":{"krate":5,"index":91},"to":{"krate":0,"index":638}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/park/mod.rs","byte_start":110503,"byte_end":110506,"line_start":112,"line_end":112,"column_start":17,"column_end":20},"kind":{"Impl":{"id":296}},"from":{"krate":5,"index":4279},"to":{"krate":0,"index":638}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/enter.rs","byte_start":9192349,"byte_end":9192361,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/enter.rs","byte_start":9195307,"byte_end":9195328,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4727},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/enter.rs","byte_start":9196044,"byte_end":9196049,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/enter.rs","byte_start":9197689,"byte_end":9197694,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4217},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/enter.rs","byte_start":9197824,"byte_end":9197829,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4217},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/core.rs","byte_start":9205651,"byte_end":9205657,"line_start":76,"line_end":76,"column_start":22,"column_end":28},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4260},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/core.rs","byte_start":9205682,"byte_end":9205688,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4260},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/core.rs","byte_start":9206047,"byte_end":9206051,"line_start":92,"line_end":92,"column_start":30,"column_end":34},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/core.rs","byte_start":9206938,"byte_end":9206947,"line_start":119,"line_end":119,"column_start":19,"column_end":28},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/core.rs","byte_start":9210101,"byte_end":9210110,"line_start":205,"line_end":205,"column_start":17,"column_end":26},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/core.rs","byte_start":9213148,"byte_end":9213155,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9214086,"byte_end":9214095,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9216821,"byte_end":9216830,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4745},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9217073,"byte_end":9217082,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4745},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9217359,"byte_end":9217368,"line_start":133,"line_end":133,"column_start":28,"column_end":37},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4745},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/error.rs","byte_start":9217402,"byte_end":9217407,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"kind":{"Impl":{"id":312}},"from":{"krate":1,"index":2702},"to":{"krate":2,"index":1961}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/harness.rs","byte_start":9218160,"byte_end":9218167,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/harness.rs","byte_start":9218822,"byte_end":9218829,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/harness.rs","byte_start":9224202,"byte_end":9224215,"line_start":209,"line_end":209,"column_start":13,"column_end":26},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/harness.rs","byte_start":9231196,"byte_end":9231201,"line_start":414,"line_end":414,"column_start":38,"column_end":43},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4438},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9236674,"byte_end":9236684,"line_start":150,"line_end":150,"column_start":31,"column_end":41},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4747},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9236721,"byte_end":9236731,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4747},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9236747,"byte_end":9236757,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9237992,"byte_end":9238002,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4747},"to":{"krate":2,"index":2084}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9238029,"byte_end":9238039,"line_start":202,"line_end":202,"column_start":20,"column_end":30},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4747},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9239265,"byte_end":9239275,"line_start":241,"line_end":241,"column_start":18,"column_end":28},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4747},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/join.rs","byte_start":9239541,"byte_end":9239551,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4747},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/raw.rs","byte_start":9240798,"byte_end":9240805,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/raw.rs","byte_start":9242336,"byte_end":9242343,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4488},"to":{"krate":2,"index":1741}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/raw.rs","byte_start":9242433,"byte_end":9242440,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4488},"to":{"krate":2,"index":2053}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/state.rs","byte_start":9245122,"byte_end":9245127,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/state.rs","byte_start":9253983,"byte_end":9253991,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/state.rs","byte_start":9255868,"byte_end":9255873,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4537},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/state.rs","byte_start":9256032,"byte_end":9256040,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4751},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/waker.rs","byte_start":9257858,"byte_end":9257866,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4621},"to":{"krate":2,"index":2238}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9198824,"byte_end":9198828,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4655},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9198859,"byte_end":9198863,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4655},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9199000,"byte_end":9199008,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4663},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9199049,"byte_end":9199057,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4663},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9199182,"byte_end":9199186,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2055},"to":{"krate":0,"index":4673}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9199189,"byte_end":9199194,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2048},"to":{"krate":0,"index":4673}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9201044,"byte_end":9201048,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9201944,"byte_end":9201948,"line_start":161,"line_end":161,"column_start":19,"column_end":23},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9202117,"byte_end":9202125,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9202411,"byte_end":9202415,"line_start":181,"line_end":181,"column_start":27,"column_end":31},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4655},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9202655,"byte_end":9202659,"line_start":191,"line_end":191,"column_start":24,"column_end":28},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4655},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9202811,"byte_end":9202819,"line_start":197,"line_end":197,"column_start":24,"column_end":32},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4663},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/task/mod.rs","byte_start":9203035,"byte_end":9203039,"line_start":206,"line_end":206,"column_start":38,"column_end":42},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4655},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9261578,"byte_end":9261592,"line_start":96,"line_end":96,"column_start":15,"column_end":29},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9263830,"byte_end":9263835,"line_start":173,"line_end":173,"column_start":15,"column_end":20},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9266458,"byte_end":9266463,"line_start":245,"line_end":245,"column_start":28,"column_end":33},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4835},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9267156,"byte_end":9267170,"line_start":269,"line_end":269,"column_start":24,"column_end":38},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4791},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9268389,"byte_end":9268403,"line_start":307,"line_end":307,"column_start":30,"column_end":44},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4791},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9268569,"byte_end":9268576,"line_start":315,"line_end":315,"column_start":6,"column_end":13},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9269106,"byte_end":9269113,"line_start":336,"line_end":336,"column_start":21,"column_end":28},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":5131},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9269281,"byte_end":9269284,"line_start":344,"line_end":344,"column_start":19,"column_end":22},"kind":{"Impl":{"id":350}},"from":{"krate":5,"index":4279},"to":{"krate":0,"index":4673}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9270373,"byte_end":9270379,"line_start":380,"line_end":380,"column_start":15,"column_end":21},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4805},"to":{"krate":0,"index":7701}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9270841,"byte_end":9270851,"line_start":401,"line_end":401,"column_start":15,"column_end":25},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/basic_scheduler.rs","byte_start":9271126,"byte_end":9271136,"line_start":409,"line_end":409,"column_start":24,"column_end":34},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4869},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/pool.rs","byte_start":9275619,"byte_end":9275631,"line_start":103,"line_end":103,"column_start":6,"column_end":18},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":4907},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/pool.rs","byte_start":9278206,"byte_end":9278218,"line_start":173,"line_end":173,"column_start":15,"column_end":27},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":4907},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/pool.rs","byte_start":9278304,"byte_end":9278316,"line_start":179,"line_end":179,"column_start":21,"column_end":33},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":4907},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/pool.rs","byte_start":9278477,"byte_end":9278484,"line_start":187,"line_end":187,"column_start":6,"column_end":13},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":5140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/pool.rs","byte_start":9280916,"byte_end":9280921,"line_start":265,"line_end":265,"column_start":6,"column_end":11},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":4910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/pool.rs","byte_start":9284160,"byte_end":9284167,"line_start":361,"line_end":361,"column_start":21,"column_end":28},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5140},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/schedule.rs","byte_start":9284670,"byte_end":9284682,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":4963},"to":{"krate":0,"index":4673}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/shutdown.rs","byte_start":9285555,"byte_end":9285563,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/task.rs","byte_start":9287312,"byte_end":9287324,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":4983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/task.rs","byte_start":9287550,"byte_end":9287562,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":4983},"to":{"krate":2,"index":2084}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/blocking/task.rs","byte_start":9287592,"byte_end":9287604,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":4983},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9290798,"byte_end":9290805,"line_start":85,"line_end":85,"column_start":6,"column_end":13},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":5011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9301796,"byte_end":9301803,"line_start":453,"line_end":453,"column_start":10,"column_end":17},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":5011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9302365,"byte_end":9302372,"line_start":477,"line_end":477,"column_start":10,"column_end":17},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":5011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9302907,"byte_end":9302914,"line_start":500,"line_end":500,"column_start":10,"column_end":17},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":5011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/builder.rs","byte_start":9305060,"byte_end":9305067,"line_start":565,"line_end":565,"column_start":21,"column_end":28},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":5011},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/context.rs","byte_start":9307587,"byte_end":9307597,"line_start":73,"line_end":73,"column_start":15,"column_end":25},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":5172},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/driver.rs","byte_start":9312139,"byte_end":9312145,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":5193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/driver.rs","byte_start":9312729,"byte_end":9312735,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":5193},"to":{"krate":0,"index":631}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9314483,"byte_end":9314489,"line_start":47,"line_end":47,"column_start":6,"column_end":12},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":5197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9319865,"byte_end":9319880,"line_start":209,"line_end":209,"column_start":21,"column_end":36},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":5116},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9320028,"byte_end":9320043,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":5116},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/handle.rs","byte_start":9320183,"byte_end":9320198,"line_start":221,"line_end":221,"column_start":23,"column_end":38},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":5116},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/spawner.rs","byte_start":9320583,"byte_end":9320590,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":5218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/spawner.rs","byte_start":9320832,"byte_end":9320839,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":5218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/runtime/mod.rs","byte_start":9181908,"byte_end":9181915,"line_start":289,"line_end":289,"column_start":10,"column_end":17},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":5245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/coop.rs","byte_start":124284,"byte_end":124290,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":5261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/coop.rs","byte_start":125650,"byte_end":125660,"line_start":108,"line_end":108,"column_start":23,"column_end":33},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":656},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/coop.rs","byte_start":126631,"byte_end":126647,"line_start":156,"line_end":156,"column_start":10,"column_end":26},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":5274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/coop.rs","byte_start":126779,"byte_end":126795,"line_start":162,"line_end":162,"column_start":19,"column_end":35},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":5274},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/coop.rs","byte_start":128535,"byte_end":128541,"line_start":203,"line_end":203,"column_start":10,"column_end":16},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":5261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9338864,"byte_end":9338871,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":6482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/barrier.rs","byte_start":9342150,"byte_end":9342167,"line_start":130,"line_end":130,"column_start":6,"column_end":23},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":6494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9349606,"byte_end":9349615,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":6501},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9349791,"byte_end":9349800,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":6501},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9350448,"byte_end":9350457,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":6508},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9350762,"byte_end":9350771,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":6508},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9351694,"byte_end":9351706,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":6520},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9352084,"byte_end":9352096,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":6520},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9354059,"byte_end":9354063,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5370},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9354108,"byte_end":9354112,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5370},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9356886,"byte_end":9356892,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5323},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9356929,"byte_end":9356935,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":5323},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9356973,"byte_end":9356981,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":5326},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357018,"byte_end":9357026,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":5326},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9357042,"byte_end":9357048,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":5323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9362658,"byte_end":9362662,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":5350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9363054,"byte_end":9363060,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":5323},"to":{"krate":2,"index":1741}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9363240,"byte_end":9363246,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":5323},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9363400,"byte_end":9363408,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":5326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9368271,"byte_end":9368279,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":5326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9372455,"byte_end":9372463,"line_start":928,"line_end":928,"column_start":18,"column_end":26},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5326},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9373089,"byte_end":9373093,"line_start":951,"line_end":951,"column_start":13,"column_end":17},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9373872,"byte_end":9373876,"line_start":977,"line_end":977,"column_start":24,"column_end":28},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":5370},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9374537,"byte_end":9374541,"line_start":997,"line_end":997,"column_start":22,"column_end":26},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":5370},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9375289,"byte_end":9375295,"line_start":1023,"line_end":1023,"column_start":35,"column_end":41},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":5361},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9375710,"byte_end":9375716,"line_start":1040,"line_end":1040,"column_start":24,"column_end":30},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":5323},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9375860,"byte_end":9375868,"line_start":1046,"line_end":1046,"column_start":24,"column_end":32},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5326},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9376003,"byte_end":9376012,"line_start":1052,"line_end":1052,"column_start":13,"column_end":22},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/broadcast.rs","byte_start":9376185,"byte_end":9376194,"line_start":1061,"line_end":1061,"column_start":22,"column_end":31},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5366},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/block.rs","byte_start":9383076,"byte_end":9383081,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":5481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/block.rs","byte_start":9393182,"byte_end":9393188,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/block.rs","byte_start":9393670,"byte_end":9393676,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5495},"to":{"krate":2,"index":2319}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9397065,"byte_end":9397073,"line_start":105,"line_end":105,"column_start":9,"column_end":17},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9404085,"byte_end":9404093,"line_start":302,"line_end":302,"column_start":24,"column_end":32},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5558},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9404289,"byte_end":9404297,"line_start":310,"line_end":310,"column_start":19,"column_end":27},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5558},"to":{"krate":2,"index":2084}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9404313,"byte_end":9404319,"line_start":312,"line_end":312,"column_start":9,"column_end":15},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9417211,"byte_end":9417217,"line_start":703,"line_end":703,"column_start":19,"column_end":25},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5551},"to":{"krate":2,"index":1741}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9417349,"byte_end":9417355,"line_start":711,"line_end":711,"column_start":24,"column_end":30},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5551},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9417567,"byte_end":9417573,"line_start":721,"line_end":721,"column_start":9,"column_end":15},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9418823,"byte_end":9418829,"line_start":764,"line_end":764,"column_start":18,"column_end":24},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":5554},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/bounded.rs","byte_start":9419156,"byte_end":9419162,"line_start":779,"line_end":779,"column_start":24,"column_end":30},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5554},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9419823,"byte_end":9419825,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5639},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9420118,"byte_end":9420120,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5647},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9421057,"byte_end":9421061,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":5660},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9421694,"byte_end":9421702,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5673},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9421968,"byte_end":9421972,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5660},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9422021,"byte_end":9422025,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5660},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9422532,"byte_end":9422534,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9422966,"byte_end":9422968,"line_start":144,"line_end":144,"column_start":23,"column_end":25},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9423518,"byte_end":9423520,"line_start":162,"line_end":162,"column_start":22,"column_end":24},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":5639},"to":{"krate":2,"index":1741}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9423859,"byte_end":9423861,"line_start":174,"line_end":174,"column_start":21,"column_end":23},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5639},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9424184,"byte_end":9424186,"line_start":190,"line_end":190,"column_start":23,"column_end":25},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":5647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9427577,"byte_end":9427579,"line_start":287,"line_end":287,"column_start":32,"column_end":34},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":5647},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9427991,"byte_end":9427995,"line_start":305,"line_end":305,"column_start":12,"column_end":16},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9428180,"byte_end":9428184,"line_start":315,"line_end":315,"column_start":21,"column_end":25},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":5660},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/chan.rs","byte_start":9429185,"byte_end":9429196,"line_start":355,"line_end":355,"column_start":20,"column_end":31},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":445},"to":{"krate":0,"index":5655}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/list.rs","byte_start":9430937,"byte_end":9430939,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":5766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/list.rs","byte_start":9436652,"byte_end":9436654,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":5766},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/list.rs","byte_start":9436931,"byte_end":9436933,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":5770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/list.rs","byte_start":9440332,"byte_end":9440334,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":5770},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9440992,"byte_end":9441007,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":5804},"to":{"krate":2,"index":1741}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9441148,"byte_end":9441163,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":5804},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9441836,"byte_end":9441853,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":5813},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9442852,"byte_end":9442869,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":5813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/unbounded.rs","byte_start":9446167,"byte_end":9446182,"line_start":183,"line_end":183,"column_start":9,"column_end":24},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":5804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9449872,"byte_end":9449881,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":6538},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9450041,"byte_end":9450050,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":6538},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9450536,"byte_end":9450548,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":6545},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9450581,"byte_end":9450593,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":6545},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9450933,"byte_end":9450945,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":6545},"to":{"krate":2,"index":1961}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9451174,"byte_end":9451183,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":6556},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9451313,"byte_end":9451322,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":6556},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9452823,"byte_end":9452839,"line_start":116,"line_end":116,"column_start":35,"column_end":51},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":6566},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mpsc/error.rs","byte_start":9452876,"byte_end":9452892,"line_start":118,"line_end":118,"column_start":30,"column_end":46},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":6566},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459264,"byte_end":9459269,"line_start":159,"line_end":159,"column_start":25,"column_end":30},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":5879},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459323,"byte_end":9459328,"line_start":160,"line_end":160,"column_start":25,"column_end":30},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":5879},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459382,"byte_end":9459392,"line_start":161,"line_end":161,"column_start":25,"column_end":35},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":5883},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9459457,"byte_end":9459472,"line_start":162,"line_end":162,"column_start":25,"column_end":40},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":5887},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9460151,"byte_end":9460163,"line_start":181,"line_end":181,"column_start":23,"column_end":35},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":6577},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9460300,"byte_end":9460312,"line_start":187,"line_end":187,"column_start":16,"column_end":28},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":6577},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9461120,"byte_end":9461125,"line_start":213,"line_end":213,"column_start":17,"column_end":22},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":5879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466878,"byte_end":9466883,"line_start":416,"line_end":416,"column_start":21,"column_end":26},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":5879},"to":{"krate":2,"index":1961}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9466967,"byte_end":9466972,"line_start":422,"line_end":422,"column_start":21,"column_end":26},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":5879},"to":{"krate":2,"index":2031}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9467096,"byte_end":9467101,"line_start":431,"line_end":431,"column_start":29,"column_end":34},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":5879},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9467496,"byte_end":9467506,"line_start":447,"line_end":447,"column_start":26,"column_end":36},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":5883},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9467607,"byte_end":9467617,"line_start":453,"line_end":453,"column_start":27,"column_end":37},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":5883},"to":{"krate":2,"index":2238}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9467764,"byte_end":9467774,"line_start":460,"line_end":460,"column_start":30,"column_end":40},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":5883},"to":{"krate":2,"index":2251}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9467931,"byte_end":9467941,"line_start":466,"line_end":466,"column_start":45,"column_end":55},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":5883},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9468107,"byte_end":9468117,"line_start":472,"line_end":472,"column_start":49,"column_end":59},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":5883},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9468295,"byte_end":9468310,"line_start":480,"line_end":480,"column_start":26,"column_end":41},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":5887},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9468407,"byte_end":9468422,"line_start":486,"line_end":486,"column_start":27,"column_end":42},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":5887},"to":{"krate":2,"index":2238}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9468565,"byte_end":9468580,"line_start":493,"line_end":493,"column_start":30,"column_end":45},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":5887},"to":{"krate":2,"index":2251}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9468733,"byte_end":9468748,"line_start":499,"line_end":499,"column_start":45,"column_end":60},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":5887},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/mutex.rs","byte_start":9468910,"byte_end":9468925,"line_start":505,"line_end":505,"column_start":49,"column_end":64},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":5887},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9473788,"byte_end":9473796,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":6604},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9473829,"byte_end":9473837,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":6604},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9474667,"byte_end":9474673,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":6582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9483249,"byte_end":9483255,"line_start":455,"line_end":455,"column_start":18,"column_end":24},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":6582},"to":{"krate":2,"index":2031}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9485165,"byte_end":9485173,"line_start":510,"line_end":510,"column_start":6,"column_end":14},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":6604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9485686,"byte_end":9485694,"line_start":526,"line_end":526,"column_start":17,"column_end":25},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":6604},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9491390,"byte_end":9491398,"line_start":668,"line_end":668,"column_start":15,"column_end":23},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":6604},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/notify.rs","byte_start":9494453,"byte_end":9494459,"line_start":732,"line_end":732,"column_start":35,"column_end":41},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":6597},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9496335,"byte_end":9496344,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":6634},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9496506,"byte_end":9496515,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":6634},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9496584,"byte_end":9496596,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":6646},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9496895,"byte_end":9496907,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":6646},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9497401,"byte_end":9497405,"line_start":95,"line_end":95,"column_start":6,"column_end":10},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":6059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9499441,"byte_end":9499447,"line_start":174,"line_end":174,"column_start":9,"column_end":15},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":6622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507074,"byte_end":9507080,"line_start":427,"line_end":427,"column_start":18,"column_end":24},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":6622},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9507219,"byte_end":9507227,"line_start":435,"line_end":435,"column_start":9,"column_end":17},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":6628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9511618,"byte_end":9511626,"line_start":584,"line_end":584,"column_start":18,"column_end":26},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":6628},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9511773,"byte_end":9511781,"line_start":592,"line_end":592,"column_start":20,"column_end":28},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":6628},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9512244,"byte_end":9512249,"line_start":608,"line_end":608,"column_start":9,"column_end":14},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":6053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9515355,"byte_end":9515360,"line_start":706,"line_end":706,"column_start":31,"column_end":36},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":6053},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9515397,"byte_end":9515402,"line_start":707,"line_end":707,"column_start":31,"column_end":36},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":6053},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9515503,"byte_end":9515508,"line_start":713,"line_end":713,"column_start":18,"column_end":23},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":6053},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9515885,"byte_end":9515890,"line_start":731,"line_end":731,"column_start":36,"column_end":41},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":6053},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9516285,"byte_end":9516290,"line_start":746,"line_end":746,"column_start":6,"column_end":11},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":6659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/oneshot.rs","byte_start":9518003,"byte_end":9518008,"line_start":812,"line_end":812,"column_start":21,"column_end":26},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":6659},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9522067,"byte_end":9522076,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":6162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9533101,"byte_end":9533110,"line_start":397,"line_end":397,"column_start":21,"column_end":30},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":6162},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9533309,"byte_end":9533315,"line_start":405,"line_end":405,"column_start":6,"column_end":12},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":6174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9534181,"byte_end":9534188,"line_start":434,"line_end":434,"column_start":17,"column_end":24},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":6168},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9534866,"byte_end":9534873,"line_start":458,"line_end":458,"column_start":10,"column_end":17},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":6168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9535672,"byte_end":9535679,"line_start":488,"line_end":488,"column_start":15,"column_end":22},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":6168},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9536929,"byte_end":9536936,"line_start":518,"line_end":518,"column_start":22,"column_end":29},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":6168},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9536983,"byte_end":9536995,"line_start":522,"line_end":522,"column_start":6,"column_end":18},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":6675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9537088,"byte_end":9537100,"line_start":528,"line_end":528,"column_start":23,"column_end":35},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":6675},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9537244,"byte_end":9537256,"line_start":534,"line_end":534,"column_start":28,"column_end":40},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":6675},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9537303,"byte_end":9537318,"line_start":538,"line_end":538,"column_start":6,"column_end":21},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9537836,"byte_end":9537851,"line_start":553,"line_end":553,"column_start":23,"column_end":38},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":6665},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9538137,"byte_end":9538152,"line_start":562,"line_end":562,"column_start":28,"column_end":43},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":6665},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/batch_semaphore.rs","byte_start":9538245,"byte_end":9538251,"line_start":567,"line_end":567,"column_start":35,"column_end":41},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":6174},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9541119,"byte_end":9541128,"line_start":66,"line_end":66,"column_start":6,"column_end":15},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547466,"byte_end":9547481,"line_start":239,"line_end":239,"column_start":10,"column_end":25},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":6684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9547726,"byte_end":9547746,"line_start":248,"line_end":248,"column_start":6,"column_end":26},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":6691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9548000,"byte_end":9548015,"line_start":257,"line_end":257,"column_start":19,"column_end":34},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":6684},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/semaphore.rs","byte_start":9548123,"byte_end":9548143,"line_start":263,"line_end":263,"column_start":15,"column_end":35},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6691},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9551555,"byte_end":9551570,"line_start":97,"line_end":97,"column_start":13,"column_end":28},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":6285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9554988,"byte_end":9555003,"line_start":202,"line_end":202,"column_start":36,"column_end":51},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6285},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9555183,"byte_end":9555198,"line_start":211,"line_end":211,"column_start":38,"column_end":53},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6285},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9555374,"byte_end":9555389,"line_start":220,"line_end":220,"column_start":30,"column_end":45},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6285},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9555853,"byte_end":9555869,"line_start":240,"line_end":240,"column_start":21,"column_end":37},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9557491,"byte_end":9557507,"line_start":293,"line_end":293,"column_start":36,"column_end":52},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":6312},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9557687,"byte_end":9557703,"line_start":302,"line_end":302,"column_start":38,"column_end":54},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":6312},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9557879,"byte_end":9557895,"line_start":311,"line_end":311,"column_start":30,"column_end":46},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6312},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9558971,"byte_end":9558977,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6696},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9559031,"byte_end":9559037,"line_start":347,"line_end":347,"column_start":25,"column_end":31},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6696},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9559271,"byte_end":9559286,"line_start":351,"line_end":351,"column_start":25,"column_end":40},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":6285},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9559344,"byte_end":9559359,"line_start":352,"line_end":352,"column_start":25,"column_end":40},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":6285},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9559424,"byte_end":9559440,"line_start":353,"line_end":353,"column_start":25,"column_end":41},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":6312},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9559753,"byte_end":9559769,"line_start":358,"line_end":358,"column_start":25,"column_end":41},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":6312},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9559827,"byte_end":9559833,"line_start":360,"line_end":360,"column_start":17,"column_end":23},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9567202,"byte_end":9567217,"line_start":605,"line_end":605,"column_start":32,"column_end":47},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":6285},"to":{"krate":2,"index":2238}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9567348,"byte_end":9567364,"line_start":613,"line_end":613,"column_start":32,"column_end":48},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":6312},"to":{"krate":2,"index":2238}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9567498,"byte_end":9567514,"line_start":621,"line_end":621,"column_start":35,"column_end":51},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":6312},"to":{"krate":2,"index":2251}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9567628,"byte_end":9567634,"line_start":627,"line_end":627,"column_start":21,"column_end":27},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":6696},"to":{"krate":2,"index":1961}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/rwlock.rs","byte_start":9567726,"byte_end":9567732,"line_start":633,"line_end":633,"column_start":29,"column_end":35},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":6696},"to":{"krate":2,"index":2031}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/task/atomic_waker.rs","byte_start":9574007,"byte_end":9574018,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/task/atomic_waker.rs","byte_start":9580040,"byte_end":9580051,"line_start":285,"line_end":285,"column_start":18,"column_end":29},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":6395},"to":{"krate":2,"index":2031}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/task/atomic_waker.rs","byte_start":9580137,"byte_end":9580148,"line_start":291,"line_end":291,"column_start":21,"column_end":32},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":6395},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/task/atomic_waker.rs","byte_start":9580281,"byte_end":9580292,"line_start":297,"line_end":297,"column_start":22,"column_end":33},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":6395},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/task/atomic_waker.rs","byte_start":9580317,"byte_end":9580328,"line_start":298,"line_end":298,"column_start":22,"column_end":33},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":6395},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/task/atomic_waker.rs","byte_start":9580424,"byte_end":9580429,"line_start":305,"line_end":305,"column_start":19,"column_end":24},"kind":{"Impl":{"id":548}},"from":{"krate":2,"index":9296},"to":{"krate":0,"index":6418}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9584658,"byte_end":9584667,"line_start":130,"line_end":130,"column_start":42,"column_end":51},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6734},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9584847,"byte_end":9584856,"line_start":136,"line_end":136,"column_start":47,"column_end":56},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":6734},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585049,"byte_end":9585058,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":6740},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9585220,"byte_end":9585229,"line_start":150,"line_end":150,"column_start":32,"column_end":41},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":6740},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9586435,"byte_end":9586443,"line_start":200,"line_end":200,"column_start":9,"column_end":17},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9588976,"byte_end":9588984,"line_start":287,"line_end":287,"column_start":19,"column_end":27},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":6703},"to":{"krate":2,"index":1741}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9589322,"byte_end":9589330,"line_start":300,"line_end":300,"column_start":18,"column_end":26},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":6703},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9589700,"byte_end":9589706,"line_start":311,"line_end":311,"column_start":9,"column_end":15},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9592290,"byte_end":9592296,"line_start":401,"line_end":401,"column_start":18,"column_end":24},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6710},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/sync/watch.rs","byte_start":9592486,"byte_end":9592489,"line_start":410,"line_end":410,"column_start":24,"column_end":27},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":6716},"to":{"krate":2,"index":2238}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/yield_now.rs","byte_start":9604714,"byte_end":9604722,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":6917},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9615644,"byte_end":9615652,"line_start":323,"line_end":323,"column_start":6,"column_end":14},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":6922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9623645,"byte_end":9623653,"line_start":552,"line_end":552,"column_start":21,"column_end":29},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":6922},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9623792,"byte_end":9623800,"line_start":558,"line_end":558,"column_start":17,"column_end":25},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":6922},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9624765,"byte_end":9624773,"line_start":582,"line_end":582,"column_start":18,"column_end":26},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":6922},"to":{"krate":2,"index":2031}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9624854,"byte_end":9624862,"line_start":588,"line_end":588,"column_start":15,"column_end":23},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":6922},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9625729,"byte_end":9625737,"line_start":618,"line_end":618,"column_start":28,"column_end":36},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":7864},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9626622,"byte_end":9626628,"line_start":649,"line_end":649,"column_start":6,"column_end":12},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/local.rs","byte_start":9627191,"byte_end":9627194,"line_start":668,"line_end":668,"column_start":25,"column_end":28},"kind":{"Impl":{"id":567}},"from":{"krate":5,"index":4279},"to":{"krate":0,"index":4673}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9630701,"byte_end":9630709,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":6861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9632485,"byte_end":9632493,"line_start":165,"line_end":165,"column_start":25,"column_end":33},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":6861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9632701,"byte_end":9632709,"line_start":173,"line_end":173,"column_start":33,"column_end":41},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":6861},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9633030,"byte_end":9633045,"line_start":188,"line_end":188,"column_start":40,"column_end":55},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":7808},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9633346,"byte_end":9633351,"line_start":198,"line_end":198,"column_start":26,"column_end":31},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":6889},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9633969,"byte_end":9633970,"line_start":222,"line_end":222,"column_start":37,"column_end":38},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":6902},"to":{"krate":0,"index":6900}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9634155,"byte_end":9634166,"line_start":230,"line_end":230,"column_start":21,"column_end":32},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":6934},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9634310,"byte_end":9634321,"line_start":236,"line_end":236,"column_start":23,"column_end":34},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":6934},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/task/task_local.rs","byte_start":9634468,"byte_end":9634479,"line_start":242,"line_end":242,"column_start":16,"column_end":27},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":6934},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/clock.rs","byte_start":9641804,"byte_end":9641809,"line_start":150,"line_end":150,"column_start":10,"column_end":15},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":7349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9662482,"byte_end":9662491,"line_start":99,"line_end":99,"column_start":18,"column_end":27},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":6976},"to":{"krate":2,"index":2031}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9662575,"byte_end":9662584,"line_start":105,"line_end":105,"column_start":26,"column_end":35},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":6976},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9662730,"byte_end":9662739,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":6976},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9669757,"byte_end":9669767,"line_start":302,"line_end":302,"column_start":22,"column_end":32},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":7361},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9669792,"byte_end":9669802,"line_start":303,"line_end":303,"column_start":22,"column_end":32},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":7361},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9671243,"byte_end":9671254,"line_start":339,"line_end":339,"column_start":6,"column_end":17},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":7372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9674777,"byte_end":9674794,"line_start":437,"line_end":437,"column_start":26,"column_end":43},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7010},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9675095,"byte_end":9675112,"line_start":446,"line_end":446,"column_start":6,"column_end":23},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":7010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9675351,"byte_end":9675362,"line_start":456,"line_end":456,"column_start":22,"column_end":33},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":7372},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9675387,"byte_end":9675398,"line_start":457,"line_end":457,"column_start":22,"column_end":33},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":7372},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9675437,"byte_end":9675448,"line_start":459,"line_end":459,"column_start":35,"column_end":46},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":7372},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9675966,"byte_end":9675976,"line_start":481,"line_end":481,"column_start":6,"column_end":16},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":7361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9678852,"byte_end":9678863,"line_start":556,"line_end":556,"column_start":6,"column_end":17},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":7368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/entry.rs","byte_start":9681254,"byte_end":9681264,"line_start":616,"line_end":616,"column_start":15,"column_end":25},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":7361},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/handle.rs","byte_start":9681769,"byte_end":9681775,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":7388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/handle.rs","byte_start":9682346,"byte_end":9682352,"line_start":31,"line_end":31,"column_start":10,"column_end":16},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":7388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/handle.rs","byte_start":9684388,"byte_end":9684394,"line_start":79,"line_end":79,"column_start":21,"column_end":27},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":7388},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/wheel/level.rs","byte_start":9696992,"byte_end":9696997,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":7073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/wheel/level.rs","byte_start":9703065,"byte_end":9703070,"line_start":233,"line_end":233,"column_start":21,"column_end":26},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":7073},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/wheel/mod.rs","byte_start":9686015,"byte_end":9686020,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":7401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9708860,"byte_end":9708865,"line_start":159,"line_end":159,"column_start":6,"column_end":11},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":7780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/sleep.rs","byte_start":9710867,"byte_end":9710872,"line_start":225,"line_end":225,"column_start":17,"column_end":22},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":7780},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/mod.rs","byte_start":9647465,"byte_end":9647474,"line_start":102,"line_end":102,"column_start":6,"column_end":15},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":7416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/mod.rs","byte_start":9648881,"byte_end":9648887,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":7408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/mod.rs","byte_start":9651893,"byte_end":9651899,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":7388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/mod.rs","byte_start":9656593,"byte_end":9656599,"line_start":379,"line_end":379,"column_start":18,"column_end":24},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":7408},"to":{"krate":0,"index":631}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/mod.rs","byte_start":9657330,"byte_end":9657336,"line_start":417,"line_end":417,"column_start":18,"column_end":24},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":7408},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/mod.rs","byte_start":9657462,"byte_end":9657467,"line_start":428,"line_end":428,"column_start":6,"column_end":11},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":7168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/driver/mod.rs","byte_start":9657775,"byte_end":9657780,"line_start":441,"line_end":441,"column_start":21,"column_end":26},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":7168},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9713023,"byte_end":9713028,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":7423},"to":{"krate":2,"index":1961}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9713269,"byte_end":9713274,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":7423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9714174,"byte_end":9714179,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":7423},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9714206,"byte_end":9714211,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":7423},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9714673,"byte_end":9714680,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":7452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9714768,"byte_end":9714775,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":7452},"to":{"krate":2,"index":6589}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9714919,"byte_end":9714926,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":7452},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/error.rs","byte_start":9714963,"byte_end":9714968,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"kind":{"Impl":{"id":614}},"from":{"krate":1,"index":2702},"to":{"krate":2,"index":1961}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9716510,"byte_end":9716517,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":7466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9720267,"byte_end":9720274,"line_start":153,"line_end":153,"column_start":35,"column_end":42},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":7466},"to":{"krate":2,"index":1961}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9720403,"byte_end":9720410,"line_start":159,"line_end":159,"column_start":35,"column_end":42},"kind":{"Impl":{"id":617}},"from":{"krate":1,"index":8233},"to":{"krate":2,"index":1961}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9720525,"byte_end":9720532,"line_start":165,"line_end":165,"column_start":29,"column_end":36},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":7466},"to":{"krate":2,"index":2108}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9720697,"byte_end":9720704,"line_start":173,"line_end":173,"column_start":35,"column_end":42},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":7466},"to":{"krate":2,"index":2139}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9720809,"byte_end":9720816,"line_start":179,"line_end":179,"column_start":19,"column_end":26},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":7466},"to":{"krate":2,"index":2113}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9720957,"byte_end":9720964,"line_start":187,"line_end":187,"column_start":29,"column_end":36},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":7466},"to":{"krate":2,"index":2113}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9721125,"byte_end":9721132,"line_start":195,"line_end":195,"column_start":35,"column_end":42},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":7466},"to":{"krate":2,"index":2143}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/instant.rs","byte_start":9721239,"byte_end":9721246,"line_start":201,"line_end":201,"column_start":21,"column_end":28},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":7466},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/interval.rs","byte_start":9725424,"byte_end":9725432,"line_start":128,"line_end":128,"column_start":6,"column_end":14},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":7489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9730201,"byte_end":9730208,"line_start":114,"line_end":114,"column_start":9,"column_end":16},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":7742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/time/timeout.rs","byte_start":9730746,"byte_end":9730753,"line_start":135,"line_end":135,"column_start":20,"column_end":27},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":7742},"to":{"krate":2,"index":9111}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/bit.rs","byte_start":9731398,"byte_end":9731402,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":7641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/bit.rs","byte_start":9732830,"byte_end":9732834,"line_start":53,"line_end":53,"column_start":21,"column_end":25},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":7641},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9736777,"byte_end":9736784,"line_start":87,"line_end":87,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2031},"to":{"krate":0,"index":7533}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9737984,"byte_end":9737988,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":7541},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9738025,"byte_end":9738029,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":7541},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9738066,"byte_end":9738076,"line_start":144,"line_end":144,"column_start":31,"column_end":41},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":7548},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9738113,"byte_end":9738123,"line_start":145,"line_end":145,"column_start":31,"column_end":41},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":7548},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9738160,"byte_end":9738163,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":7535},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9738200,"byte_end":9738203,"line_start":147,"line_end":147,"column_start":31,"column_end":34},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":7535},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9738819,"byte_end":9738823,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":7523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9744429,"byte_end":9744433,"line_start":321,"line_end":321,"column_start":24,"column_end":28},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":7523},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9744572,"byte_end":9744581,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":7529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9745148,"byte_end":9745157,"line_start":346,"line_end":346,"column_start":24,"column_end":33},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":7529},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9745315,"byte_end":9745318,"line_start":352,"line_end":352,"column_start":24,"column_end":27},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":7535},"to":{"krate":2,"index":2238}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9745580,"byte_end":9745583,"line_start":362,"line_end":362,"column_start":18,"column_end":21},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":7535},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9745850,"byte_end":9745853,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":7535},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9745974,"byte_end":9745978,"line_start":376,"line_end":376,"column_start":16,"column_end":20},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":7541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9748485,"byte_end":9748489,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":7541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9748833,"byte_end":9748837,"line_start":464,"line_end":464,"column_start":21,"column_end":25},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":7541},"to":{"krate":2,"index":2031}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9749185,"byte_end":9749189,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":7541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9749551,"byte_end":9749561,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":7548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9750498,"byte_end":9750508,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":7548},"to":{"krate":2,"index":2031}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9750651,"byte_end":9750656,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":7552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9751539,"byte_end":9751543,"line_start":563,"line_end":563,"column_start":16,"column_end":20},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":7569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9752103,"byte_end":9752108,"line_start":578,"line_end":578,"column_start":9,"column_end":14},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":7573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/slab.rs","byte_start":9752434,"byte_end":9752441,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":7651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":141483,"byte_end":141493,"line_start":29,"line_end":29,"column_start":31,"column_end":41},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":671},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":141563,"byte_end":141573,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":671},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":142873,"byte_end":142881,"line_start":70,"line_end":70,"column_start":31,"column_end":39},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":687},"to":{"krate":2,"index":2043}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":142918,"byte_end":142926,"line_start":71,"line_end":71,"column_start":31,"column_end":39},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":687},"to":{"krate":2,"index":2055}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":142977,"byte_end":142987,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":143222,"byte_end":143232,"line_start":86,"line_end":86,"column_start":15,"column_end":25},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":146081,"byte_end":146091,"line_start":176,"line_end":176,"column_start":30,"column_end":40},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":671},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":146448,"byte_end":146458,"line_start":191,"line_end":191,"column_start":15,"column_end":25},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":146645,"byte_end":146655,"line_start":198,"line_end":198,"column_start":27,"column_end":37},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":671},"to":{"krate":2,"index":2031}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":147827,"byte_end":147837,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":148206,"byte_end":148217,"line_start":258,"line_end":258,"column_start":33,"column_end":44},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":7666},"to":{"krate":2,"index":5298}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":148891,"byte_end":148899,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/linked_list.rs","byte_start":149098,"byte_end":149106,"line_start":293,"line_end":293,"column_start":24,"column_end":32},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":687},"to":{"krate":2,"index":6584}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/rand.rs","byte_start":159486,"byte_end":159494,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":7683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/wake.rs","byte_start":9759721,"byte_end":9759725,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2043},"to":{"krate":0,"index":7701}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/wake.rs","byte_start":9759728,"byte_end":9759732,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2055},"to":{"krate":0,"index":7701}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.2.0/src/util/wake.rs","byte_start":9760043,"byte_end":9760051,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":7725},"to":{"krate":2,"index":2238}}]}