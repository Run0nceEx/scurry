{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2","program":"/home/ghost/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","evc","--edition=2018","/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=0ecf8c9e2c18cc38","-C","extra-filename=-0ecf8c9e2c18cc38","--out-dir","/opt/nfs/projects/px-engine/proxbox-rs/repo/px-nmap/target/rls/debug/deps","-L","dependency=/opt/nfs/projects/px-engine/proxbox-rs/repo/px-nmap/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/ghost/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/opt/nfs/projects/px-engine/proxbox-rs/repo/px-nmap/target/rls/debug/deps/libevc-0ecf8c9e2c18cc38.rmeta"},"prelude":{"crate_id":{"name":"evc","disambiguator":[796768033749679734,4548238435079008627]},"crate_root":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src","external_crates":[{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5454670041059415339,14778898676712446032]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6613225743082300914,1742833353142201501]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11975364352078366518,17024437125936897165]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7052056008796586215,10378193753915807487]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7266508812970390764,1104721975748785438]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1008138081647881344,7429076406658465872]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17323693314265278435,11165935492680790011]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9336778117618987315,17870517156373193216]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17103378408486634939,751433449546080727]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10975069866030769009,5505173346458313804]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6334346674486718091,8161957233453149106]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[9975713641904480798,7580100659723909163]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13017381940559774955,1473560800469322545]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[18046481696643307721,13304330266021309686]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[16808540700296544273,10362068119654760402]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[10687136976133547149,15343372157523177244]}},{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[1758524798956620560,9236974138540026415]}}],"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":0,"byte_end":3630,"line_start":1,"line_end":114,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":28},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":2151,"byte_end":2161,"line_start":75,"line_end":75,"column_start":16,"column_end":26},"alias_span":null,"name":"ReadHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":2163,"byte_end":2180,"line_start":75,"line_end":75,"column_start":28,"column_end":45},"alias_span":null,"name":"ReadHandleFactory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":2182,"byte_end":2197,"line_start":75,"line_end":75,"column_start":47,"column_end":62},"alias_span":null,"name":"ReadHandleGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":94},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":2227,"byte_end":2238,"line_start":78,"line_end":78,"column_start":16,"column_end":27},"alias_span":null,"name":"WriteHandle","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":0,"byte_end":3630,"line_start":1,"line_end":114,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":122}],"decl_id":null,"docs":" A lock-free (when reading), eventually consistent synchronization primitive.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/ A lock-free (when reading), eventually consistent synchronization primitive.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":24,"byte_end":104,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":105,"byte_end":108,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This primitive makes reading and writing possible at the same time, although refreshing is","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":109,"byte_end":203,"line_start":5,"line_end":5,"column_start":1,"column_end":95}},{"value":"/ needed to make writes visible to the readers.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":204,"byte_end":253,"line_start":6,"line_end":6,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":254,"byte_end":257,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This crate is very similar to [`evmap`](https://docs.rs/evmap), but generalized to any type.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":258,"byte_end":354,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ Unlike `evmap`, which wraps a HashMap, `evc` is lower level, meaning that you need to be","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":355,"byte_end":447,"line_start":9,"line_end":9,"column_start":1,"column_end":93}},{"value":"/ able to cache all possible mutations on the inner type (`OperationCache`). Therefore making","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":448,"byte_end":543,"line_start":10,"line_end":10,"column_start":1,"column_end":96}},{"value":"/ an extension trait and implementing it for `WriteHandle<YourType>` is encouraged, so that","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":544,"byte_end":637,"line_start":11,"line_end":11,"column_start":1,"column_end":94}},{"value":"/ accessing the inner data can be done using regular methods (like `evmap` does internally).","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":638,"byte_end":732,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":733,"byte_end":736,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":737,"byte_end":751,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":752,"byte_end":755,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `VecWrapper`","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":756,"byte_end":772,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":773,"byte_end":776,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":777,"byte_end":784,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ use evc::OperationCache;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":785,"byte_end":813,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":814,"byte_end":817,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Debug, Default)]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":818,"byte_end":854,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/ struct VecWrapper(Vec<u16>);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":855,"byte_end":887,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":888,"byte_end":891,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Copy, Debug)]","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":892,"byte_end":925,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/ enum Operation {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":926,"byte_end":946,"line_start":25,"line_end":25,"column_start":1,"column_end":21}},{"value":"/     Push(u16),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":947,"byte_end":965,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/     Remove(usize),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":966,"byte_end":988,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/     Clear,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":989,"byte_end":1003,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1004,"byte_end":1009,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1010,"byte_end":1013,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ impl OperationCache for VecWrapper {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1014,"byte_end":1054,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/     type Operation = Operation;","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1055,"byte_end":1090,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1091,"byte_end":1094,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     fn apply_operation(&mut self, operation: Self::Operation) {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1095,"byte_end":1162,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/         match operation {","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1163,"byte_end":1192,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/             Operation::Push(value) => self.0.push(value),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1193,"byte_end":1254,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/             Operation::Remove(index) => { self.0.remove(index); },","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1255,"byte_end":1325,"line_start":37,"line_end":37,"column_start":1,"column_end":71}},{"value":"/             Operation::Clear => self.0.clear(),","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1326,"byte_end":1377,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1378,"byte_end":1391,"line_start":39,"line_end":39,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1392,"byte_end":1401,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1402,"byte_end":1407,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1408,"byte_end":1411,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let (mut w_handle, r_handle) = evc::new(VecWrapper::default());","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1412,"byte_end":1479,"line_start":43,"line_end":43,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1480,"byte_end":1483,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ w_handle.write(Operation::Push(42));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1484,"byte_end":1524,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/ w_handle.write(Operation::Push(24));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1525,"byte_end":1565,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1566,"byte_end":1569,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(r_handle.read().0, &[]);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1570,"byte_end":1609,"line_start":48,"line_end":48,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1610,"byte_end":1613,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ w_handle.refresh();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1614,"byte_end":1637,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1638,"byte_end":1641,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(r_handle.read().0, &[42, 24]);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1642,"byte_end":1687,"line_start":52,"line_end":52,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1688,"byte_end":1691,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ w_handle.write(Operation::Push(55));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1692,"byte_end":1732,"line_start":54,"line_end":54,"column_start":1,"column_end":41}},{"value":"/ w_handle.write(Operation::Remove(0));","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1733,"byte_end":1774,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/ w_handle.refresh();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1775,"byte_end":1798,"line_start":56,"line_end":56,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1799,"byte_end":1802,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(r_handle.read().0, &[24, 55]);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1803,"byte_end":1848,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1849,"byte_end":1852,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ w_handle.write(Operation::Clear);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1853,"byte_end":1890,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1891,"byte_end":1894,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(r_handle.read().0, &[24, 55]);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1895,"byte_end":1940,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1941,"byte_end":1944,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ w_handle.refresh();","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1945,"byte_end":1968,"line_start":64,"line_end":64,"column_start":1,"column_end":24}},{"value":"/ ","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1969,"byte_end":1973,"line_start":65,"line_end":65,"column_start":1,"column_end":5}},{"value":"/ assert_eq!(r_handle.read().0, &[]);","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":1974,"byte_end":2013,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":2014,"byte_end":2017,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":2018,"byte_end":2025,"line_start":68,"line_end":68,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":28},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":3959,"byte_end":3969,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"ReadHandle","qualname":"::read::ReadHandle","value":"ReadHandle {  }","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" A handle used for accessing data immutably using RAII guards.\n","sig":null,"attributes":[{"value":"/ A handle used for accessing data immutably using RAII guards.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":3882,"byte_end":3947,"line_start":12,"line_end":12,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":4670,"byte_end":4674,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"read","qualname":"<ReadHandle<T>>::read","value":"pub fn read(&Self) -> ReadHandleGuard<, T>","parent":null,"children":[],"decl_id":null,"docs":" Create a RAII guard that allows reading the inner value directly.\n","sig":null,"attributes":[{"value":"/ Create a RAII guard that allows reading the inner value directly.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":4589,"byte_end":4658,"line_start":38,"line_end":38,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":5143,"byte_end":5150,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"factory","qualname":"<ReadHandle<T>>::factory","value":"pub fn factory(&Self) -> ReadHandleFactory<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a factory, used to make more read handles.\n","sig":null,"attributes":[{"value":"/ Create a factory, used to make more read handles.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":5078,"byte_end":5131,"line_start":53,"line_end":53,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":5418,"byte_end":5430,"line_start":62,"line_end":62,"column_start":12,"column_end":24},"name":"into_factory","qualname":"<ReadHandle<T>>::into_factory","value":"pub fn into_factory(Self) -> ReadHandleFactory<T>","parent":null,"children":[],"decl_id":null,"docs":" Consume this `ReadHandle` to create a factory\n","sig":null,"attributes":[{"value":"/ Consume this `ReadHandle` to create a factory","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":5357,"byte_end":5406,"line_start":61,"line_end":61,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":5685,"byte_end":5695,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ReadHandle<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Try to move out the inner value if no other readers exist.\n","sig":null,"attributes":[{"value":"/ Try to move out the inner value if no other readers exist.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":5611,"byte_end":5673,"line_start":68,"line_end":68,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":54},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":6919,"byte_end":6936,"line_start":107,"line_end":107,"column_start":12,"column_end":29},"name":"ReadHandleFactory","qualname":"::read::ReadHandleFactory","value":"ReadHandleFactory {  }","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"decl_id":null,"docs":" A factory for read handles, allows retrieving new `ReadHandle`s while still being `Sync`.\n","sig":null,"attributes":[{"value":"/ A factory for read handles, allows retrieving new `ReadHandle`s while still being `Sync`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":6814,"byte_end":6907,"line_start":106,"line_end":106,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":7073,"byte_end":7079,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"handle","qualname":"<ReadHandleFactory<T>>::handle","value":"pub fn handle(&Self) -> ReadHandle<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new handle.\n","sig":null,"attributes":[{"value":"/ Create a new handle.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":7037,"byte_end":7061,"line_start":113,"line_end":113,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":7249,"byte_end":7260,"line_start":119,"line_end":119,"column_start":12,"column_end":23},"name":"into_handle","qualname":"<ReadHandleFactory<T>>::into_handle","value":"pub fn into_handle(Self) -> ReadHandle<T>","parent":null,"children":[],"decl_id":null,"docs":" Consume this factory, returning a handle.\n","sig":null,"attributes":[{"value":"/ Consume this factory, returning a handle.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":7192,"byte_end":7237,"line_start":118,"line_end":118,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":7434,"byte_end":7449,"line_start":125,"line_end":125,"column_start":12,"column_end":27},"name":"ReadHandleGuard","qualname":"::read::ReadHandleGuard","value":"ReadHandleGuard {  }","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"decl_id":null,"docs":" A RAII guard used to directly access the data of a read handle, immutably.\n","sig":null,"attributes":[{"value":"/ A RAII guard used to directly access the data of a read handle, immutably.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":7344,"byte_end":7422,"line_start":124,"line_end":124,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":94},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/write.rs","byte_start":8133,"byte_end":8144,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"WriteHandle","qualname":"::write::WriteHandle","value":"WriteHandle {  }","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"decl_id":null,"docs":" A handle which allows accessing the inner data mutably through operations.\n","sig":null,"attributes":[{"value":"/ A handle which allows accessing the inner data mutably through operations.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/write.rs","byte_start":8043,"byte_end":8121,"line_start":10,"line_end":10,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/write.rs","byte_start":8771,"byte_end":8776,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"write","qualname":"<WriteHandle<T>>::write","value":"pub fn write(&mut Self, T::Operation)","parent":null,"children":[],"decl_id":null,"docs":" Mutate the inner data using an operation.\n","sig":null,"attributes":[{"value":"/ Mutate the inner data using an operation.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/write.rs","byte_start":8714,"byte_end":8759,"line_start":32,"line_end":32,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/write.rs","byte_start":10367,"byte_end":10374,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"refresh","qualname":"<WriteHandle<T>>::refresh","value":"pub fn refresh(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Refresh the queued writes, making the changes visible to readers.\n","sig":null,"attributes":[{"value":"/ Refresh the queued writes, making the changes visible to readers.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/write.rs","byte_start":10286,"byte_end":10355,"line_start":78,"line_end":78,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/write.rs","byte_start":11580,"byte_end":11590,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<WriteHandle<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consume this writer to retrieve the inner value.\n","sig":null,"attributes":[{"value":"/ Consume this writer to retrieve the inner value.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/write.rs","byte_start":11516,"byte_end":11568,"line_start":112,"line_end":112,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":115},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":2527,"byte_end":2541,"line_start":86,"line_end":86,"column_start":11,"column_end":25},"name":"OperationCache","qualname":"::OperationCache","value":"OperationCache","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117}],"decl_id":null,"docs":" Represents anything that can be mutated using operations. This trait has to be implemented in\n order to store it in an `evc`.\n","sig":null,"attributes":[{"value":"/ Represents anything that can be mutated using operations. This trait has to be implemented in","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":2384,"byte_end":2481,"line_start":84,"line_end":84,"column_start":1,"column_end":98}},{"value":"/ order to store it in an `evc`.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":2482,"byte_end":2516,"line_start":85,"line_end":85,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":116},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":2612,"byte_end":2621,"line_start":88,"line_end":88,"column_start":10,"column_end":19},"name":"Operation","qualname":"::OperationCache::Operation","value":"type Operation: Clone;","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" The operation this type uses for modifying itself.\n","sig":null,"attributes":[{"value":"/ The operation this type uses for modifying itself.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":2548,"byte_end":2602,"line_start":87,"line_end":87,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":2674,"byte_end":2689,"line_start":91,"line_end":91,"column_start":8,"column_end":23},"name":"apply_operation","qualname":"::OperationCache::apply_operation","value":"pub fn apply_operation(&mut Self, Self::Operation)","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" Apply an operation to self.\n","sig":null,"attributes":[{"value":"/ Apply an operation to self.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":2635,"byte_end":2666,"line_start":90,"line_end":90,"column_start":5,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":122},"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":3099,"byte_end":3102,"line_start":103,"line_end":103,"column_start":8,"column_end":11},"name":"new","qualname":"::new","value":"pub fn new<T: Clone + OperationCache>(T) -> (WriteHandle<T>, ReadHandle<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a write handle and a read handle to some data. The data must be both `OperationCache`,\n to support queuing data (so that both buffers can be modified during refreshes), and `Clone`,\n to make double buffering possible.\n","sig":null,"attributes":[{"value":"/ Create a write handle and a read handle to some data. The data must be both `OperationCache`,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":2857,"byte_end":2954,"line_start":100,"line_end":100,"column_start":1,"column_end":98}},{"value":"/ to support queuing data (so that both buffers can be modified during refreshes), and `Clone`,","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":2955,"byte_end":3052,"line_start":101,"line_end":101,"column_start":1,"column_end":98}},{"value":"/ to make double buffering possible.","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/lib.rs","byte_start":3053,"byte_end":3091,"line_start":102,"line_end":102,"column_start":1,"column_end":39}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":4153,"byte_end":4163,"line_start":22,"line_end":22,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":6049,"byte_end":6059,"line_start":80,"line_end":80,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":6188,"byte_end":6205,"line_start":85,"line_end":85,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":6311,"byte_end":6321,"line_start":90,"line_end":90,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":6651,"byte_end":6661,"line_start":100,"line_end":100,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":7010,"byte_end":7027,"line_start":112,"line_end":112,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":7558,"byte_end":7573,"line_start":130,"line_end":130,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":7699,"byte_end":7714,"line_start":136,"line_end":136,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/write.rs","byte_start":8370,"byte_end":8381,"line_start":21,"line_end":21,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/write.rs","byte_start":11809,"byte_end":11820,"line_start":119,"line_end":119,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":4153,"byte_end":4163,"line_start":22,"line_end":22,"column_start":9,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":28},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":6049,"byte_end":6059,"line_start":80,"line_end":80,"column_start":40,"column_end":50},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":28},"to":{"krate":2,"index":1961}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":6188,"byte_end":6205,"line_start":85,"line_end":85,"column_start":33,"column_end":50},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":54},"to":{"krate":2,"index":1961}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":6311,"byte_end":6321,"line_start":90,"line_end":90,"column_start":18,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":28},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":6651,"byte_end":6661,"line_start":100,"line_end":100,"column_start":19,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":28},"to":{"krate":2,"index":1741}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":7010,"byte_end":7027,"line_start":112,"line_end":112,"column_start":9,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":7558,"byte_end":7573,"line_start":130,"line_end":130,"column_start":19,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2238}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/read.rs","byte_start":7699,"byte_end":7714,"line_start":136,"line_end":136,"column_start":18,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2262}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/write.rs","byte_start":8370,"byte_end":8381,"line_start":21,"line_end":21,"column_start":25,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ghost/.cargo/registry/src/github.com-1ecc6299db9ec823/evc-0.1.2/src/write.rs","byte_start":11809,"byte_end":11820,"line_start":119,"line_end":119,"column_start":34,"column_end":45},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":94},"to":{"krate":2,"index":2262}}]}